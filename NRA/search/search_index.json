{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4e0a\u6d77\u610f\u8d4b\u6559\u80b2\u516c\u53f8(ifcreate) \u4fee\u8ba2\u65e5\u671f\uff1a 2020-08-26 \u9002\u7528\u73af\u5883 \uff1aWin10&Mac&Linux\uff1bPython2.7 \u7279\u5f81 \uff1a \u5728\u540c\u4e00\u5c40\u57df\u7f51\u5185\u8fdc\u7a0b\u8c03\u7528Nao\u673a\u5668\u4eba\u7684\u6240\u6709C++ API \u9002\u7528Python\u5efa\u7acb\u53ef\u4ee5\u8fdc\u7a0b\u5de5\u4f5c\u7684\u673a\u5668\u4ebaapp","title":"\u7b80\u4ecb"},{"location":"audio/","text":"\u673a\u5668\u4eba\u8bed\u97f3 # ALAnimatedSpeech\u6a21\u5757 # \u8be5\u6a21\u5757\u4f7f\u673a\u5668\u4eba\u4ee5\u4e00\u79cd\u6709\u8868\u73b0\u529b\u7684\u5f62\u5f0f\u6765\u8bf4\u8bdd\uff0c\u5305\u62ec\u8bed\u8a00\u548c\u52a8\u4f5c\u7b49\u3002 \u539f\u7406\uff1a\u6a21\u5757\u53ef\u4ee5\u63a5\u6536\u7528\u6307\u4ee4\u6807\u6ce8\u7684\u6587\u672c\uff0c\u6587\u672c\u88ab\u5206\u6210\u4e00\u4e2a\u4e2a\u8bed\u53e5\u548c\u52a8\u4f5c\u5c0f\u5757\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6bcf\u4e2a\u52a8\u4f5c\u548c\u8bed\u53e5\u6267\u884c\u7684\u540c\u6b65\u6027\u548c\u5f02\u6b65\u6027 \u6307\u4ee4\u6587\u672c\uff1a\u4e00\u4e2a\u5305\u542b\u8bed\u53e5\u548c\u52a8\u4f5c\u6307\u4ee4\u7684\u6587\u672c\uff0c\u5982 \"Hello! ^start(animations/Stand/Gestures/Hey_1) Nice to meet you!\" \u6267\u884c\u4e86\u8fd9\u4e2a\u6587\u672c\u4e4b\u540e\uff0c\u673a\u5668\u4eba\u7684\u6267\u884c\u987a\u5e8f\u662f\uff1a \uff081\uff09\u673a\u5668\u4eba\u8bf4\u201cHello\u201d \uff082\uff09\u540c\u65f6\u6267\u884c \u200b a.\u6267\u884c\u547d\u4ee4animations/Stand/Gestures/Hey_1 \u200b b.\u8bf4\u201cNice to meet you!\u201d \u5982\u679c\u60f3\u7ee7\u7eed\u8fd0\u884c\u52a8\u4f5c\uff0c\u53ef\u4ee5\u5728\u540e\u9762\u52a0\u4e00\u4e2a ^wait \u6307\u4ee4\uff0c\u5982 \"Hello! ^start(animations/Stand/Gestures/Hey_1) Nice to meet you ^wait(animations/Stand/Gestures/Hey_1)\" \u5177\u4f53\u7684\u6307\u4ee4\u5982\u4e0b\uff1a \u8bf4\u8bdd\u52a8\u4f5c\u6a21\u5f0f \u6307\u4ee4 \u4f5c\u7528 ^mode( speaking_movement_mode ) \u6539\u53d8\u8bf4\u8bdd\u7684\u65f6\u5019\u7684\u52a8\u4f5c\uff0c speaking_movement_mode \u53ef\u4ee5\u662f\u201cdisabled\u201d\"random\"\"contextual\" \"Hello. Look I can stop moving ^mode(disabled) and after I can resume moving ^mode(contextual), you see ?\" \u52a8\u6001\u52a8\u4f5c \u6307\u4ee4 \u4f5c\u7528 ^run( animation_full_name ) \u4e2d\u6b62\u8bed\u97f3\uff0c\u8fdb\u884c\u52a8\u6001\u52a8\u4f5c\uff0c\u518d\u91cd\u65b0\u5f00\u59cb\u8bed\u97f3 ^start( animation_full_name ) \u5f00\u59cb\u52a8\u4f5c ^stop( animation_full_name ) \u505c\u6b62\u52a8\u4f5c ^wait( animation_full_name ) \u4e2d\u6b62\u8bed\u97f3\uff0c\u7b49\u5230\u52a8\u4f5c\u7ed3\u675f\u518d\u91cd\u65b0\u5f00\u59cb\u8bed\u97f3 \"^start(animations/Stand/Gestures/Enthusiastic_4) Look what I can do while speaking!\" \"^start(animations/Stand/Gestures/Enthusiastic_4) Look what I can do while speaking! ^stop(animations/Stand/Gestures/Enthusiastic_4) Now I am animated by the ALSpeakingMovement module\" \"^start(animations/Stand/Gestures/Hey_1)Hi, guys! ^wait(animations/Stand/Gestures/Hey_1)\" \u8fd0\u884c\u6807\u8bb0\u52a8\u4f5c \u6307\u4ee4 \u4f5c\u7528 ^runTag( tag_name ) \u6216 ^runTag( path , tag_name ) \u4e2d\u6b62\u8bed\u97f3\u2192\u8fd0\u884c\u6709\u6807\u8bb0\u7684\u52a8\u6001\u52a8\u4f5c\uff0c\u5982\u679c\u6307\u5b9a\u8def\u5f84\uff0c\u5219\u53ea\u6709\u8be5\u8def\u5f84\u7684\u52a8\u4f5c\u88ab\u8fd0\u884c\u2192\u91cd\u65b0\u5f00\u59cb\u8bed\u97f3 ^startTag( tag_name ) \u6216 ^runTag( path , tag_name ) \u8fd0\u884c\u6709\u6807\u8bb0\u7684\u52a8\u6001\u52a8\u4f5c\uff0c\u5982\u679c\u6307\u5b9a\u8def\u5f84\uff0c\u5219\u53ea\u6709\u8be5\u8def\u5f84\u7684\u52a8\u4f5c\u88ab\u8fd0\u884c ^stopTag( tag_name ) \u6216 ^stopTag( path , tag_name ) \u505c\u6b62\u6709\u6807\u8bb0\u7684\u52a8\u6001\u52a8\u4f5c\uff0c\u5982\u679c\u6307\u5b9a\u8def\u5f84\uff0c\u5219\u53ea\u6709\u8be5\u8def\u5f84\u7684\u52a8\u4f5c\u88ab\u505c\u6b62 ^waitTag( tag_name ) \u6216 ^waitTag( path , tag_name ) \u4e2d\u6b62\u8bed\u97f3\u2192\u7b49\u5f85\u6709\u6807\u8bb0\u7684\u52a8\u6001\u52a8\u4f5c\u7ed3\u675f\uff0c\u5982\u679c\u6307\u5b9a\u8def\u5f84\uff0c\u5219\u53ea\u7b49\u5f85\u8be5\u8def\u5f84\u6307\u5b9a\u7684\u52a8\u4f5c\u2192\u91cd\u65b0\u5f00\u59cb\u8bed\u97f3 \"^startTag(me) My name is Nao.\" \"^startTag(hello) Hello. ^waitTag(hello)\" \"^startTag(hello) Hello Paul, nice to meet you. ^stopTag(hello) My name is Nao.\" \"^startTag(animations/Stand, hello) Hello. ^waitTag(animations/Stand, hello)\" \u58f0\u97f3 \u6307\u4ee4 \u4f5c\u7528 ^runSound( soundSet/soundFile ) \u6216 ^runSound( soundSet/soundFile , soundVolume ) \u4e2d\u65ad\u8bed\u97f3\u2192\u64ad\u653e\u58f0\u97f3\u2192\u91cd\u65b0\u542f\u52a8\u8bed\u97f3\u3002 soundVolume \u662f0~100\u7684\u6574\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a100 ^startSound( soundSet/soundFile ) \u6216 ^startSound( soundSet/soundFile , soundVolume ) \u64ad\u653e\u58f0\u97f3\u4f5c\u4e3a\u80cc\u666f\u97f3\u4e50\u3002 soundVolume \u662f0~100\u7684\u6574\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a100 ^stopSound( soundSet/soundFile ) \u505c\u6b62\u64ad\u653e ^waitSound( soundSet/soundFile ) \u4e2d\u6b62\u8bed\u97f3\u2192\u7b49\u5f85\u64ad\u653e\u7ed3\u675f\u2192\u91cd\u65b0\u542f\u52a8\u8bed\u97f3 \"^startSound(my_sound_set/my_sound) That's cool.\" \"^startSound(my_sound_set/my_sound, 50) That's cool. ^waitSound(my_sound_set/my_sound)\" \"That's cool. ^runSound(my_sound_set/my_sound) \" ALAnimatedSpeech.say(text) # \u673a\u5668\u4eba\u8bed\u97f3\u8f93\u51fa\u7ed9\u5b9a\u7684\u8bed\u53e5\uff0c\u5e76\u4e14\u5bf9\u5185\u5d4c\u5728\u8bed\u53e5\u4e2d\u7684\u52a8\u6001\u52a8\u4f5c\u8fdb\u884c\u6f14\u793a Parameters: \u4e00\u4e2a\u7ed9\u5b9a\u7684\u6587\u672c\u8bed\u53e5\uff0c\u4f8b\u5982\u201cHello. ^start(animations/Stand/Gestures/Hey_1) My name is John Doe. Nice to meet you!\u201d) from naoqi import ALProxy speech = ALProxy(\"ALAnimatedSpeech\", \"<IP of your robot>\", 9559) speech.say(\"Hello! ^start(animations/Stand/Gestures/Hey_1) Nice to meet you!\") ALAudioDevice\u6a21\u5757 # \u8be5\u6a21\u5757\u63d0\u4f9b\u7ed9\u5176\u5b83 Naoqi \u6a21\u5757\u5230NAO\u7684\u58f0\u97f3\u8f93\u5165\uff08\u9ea6\u514b\u98ce\uff09\u548c\u58f0\u97f3\u8f93\u51fa\uff08\u5587\u53ed\uff09\u7684\u63a5\u53e3\uff0c\u6bcf\u4e2a\u9700\u8981\u5904\u7406\u58f0\u97f3\u4fe1\u53f7\u7684 Naoqi \u6a21\u5757\u90fd\u8981\u4f7f\u7528\u8be5\u6a21\u5757\u6765\u4f20\u9012\u4fe1\u53f7\u3002 ALAudioDevice \u53ef\u4ee5\u4ee5\u4e0b\u5217\u7684\u683c\u5f0f\u6765\u8868\u793a\u7531\u9ea6\u514b\u98ce\u8f93\u5165\u7684\u58f0\u97f3\uff1a \u56db\u4e2a\u901a\u9053\u4ea4\u7ec7\uff0c48000Hz\uff0c170ms\u7f13\u51b2\uff08\u9ed8\u8ba4\uff09 \u56db\u4e2a\u901a\u9053\u5206\u9009\uff0c48000Hz\uff0c170ms\u7f13\u51b2 \u4e00\u4e2a\u901a\u9053\uff08\u524d\uff0c\u540e\uff0c\u5de6\u6216\u8005\u53f3\uff09\uff0c16000Hz\uff0c170ms\u7f13\u51b2 ALAudioDevice \u53ef\u4ee5\u4ee5\u4e0b\u5217\u7684\u5e27\u6570\u6765\u53d1\u9001\u6570\u636e\u5230\u5587\u53ed\uff1a \u4e24\u4e2a\u901a\u9053\u4ea4\u7ec7\uff0c16000Hz\uff08\u4e9a\u6d32\u8bed\u8a00\u9ed8\u8ba4\u8be5\u503c\uff09 \u4e24\u4e2a\u901a\u9053\u4ea4\u7ec7\uff0c22050Hz\uff08\u975e\u4e9a\u6d32\u8bed\u8a00\u9ed8\u8ba4\u8be5\u503c\uff09 \u4e24\u4e2a\u901a\u9053\u4ea4\u7ec7\uff0c44100Hz \u4e24\u4e2a\u901a\u9053\u4ea4\u7ec7\uff0c48000Hz ALAudioDevice.disableEnergyComputation() # \u5173\u95ed\u8ba1\u7b97\u6bcf\u4e2a\u8f93\u5165\u901a\u9053\u7684\u80fd\u91cf from naoqi import ALProxy EngCom = ALProxy(\"ALAudioDevice\", \"<IP of your robot>\", 9559) EngCom.disableEnergyComputation() ALAudioDevice.enableEnergyComputation() # \u4f7f\u80fd\u8ba1\u7b97\u6bcf\u4e2a\u8f93\u5165\u901a\u9053\u7684\u80fd\u91cf\uff08\u9ed8\u8ba4\u662f\u5173\u95ed\u7684\uff09\uff0c\u8ba1\u7b97\u7ed3\u679c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u51fd\u6570\u8c03\u53d6\uff1a ALAudioDevice.getFrontMicEnergy() ALAudioDevice.getRearMicEnergy() ALAudioDevice.getLeftMicEnergy() ALAudioDevice.getRightMicEnergy() ALAudioDevice.flushAudioOutputs() # \u6e05\u7a7a\u6240\u6709\u5c06\u8981\u53d1\u9001\u7ed9\u626c\u58f0\u5668\u7684\u6837\u672c ALAudioDevice.getFrontMicEnergy() # \u8fd4\u56de\u524d\u65b9\u9ea6\u514b\u98ce\u5728170ms\u7f13\u51b2\u533a\u7684\u5e73\u5747\u4fe1\u53f7\u80fd\u91cf\uff0c\u8be5\u529f\u80fd\u8fd0\u884c\u524d\u9996\u5148\u8981\u7528 enableEnergyComputation ()\u4f7f\u80fd Returns: \u80fd\u91cf\u503c\uff0c\u8303\u56f4\u57280~32768\u4e4b\u95f4 from naoqi import ALProxy Eng = ALProxy(\"ALAudioDevice\", \"<IP of your robot>\", 9559) Eng.enableEnergyComputation() leftEng = Eng.getFrontMicEnergy() \u5176\u4f59\u9ea6\u514b\u98ce\u7684\u80fd\u91cf\u8ba1\u7b97\u540c\u7406 ALAudioDevice.getOutputVolume() # \u83b7\u53d6\u7cfb\u7edf\u97f3\u91cf\u5927\u5c0f Returns: \u97f3\u91cf\u5927\u5c0f0~100 ALAudioDevice.isAudioOutMuted() # \u5224\u65ad\u662f\u5426\u58f0\u97f3\u8f93\u51fa\u8bbe\u5907\u88ab\u7981\u6b62 Returns: \u58f0\u97f3\u88ab\u7981\u6b62\u5219\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse ALAudioDevice.muteAudioOut(mute) # \u7981\u6b62\u58f0\u97f3\u8bbe\u5907 Parameters: True\u8868\u793a\u7981\u6b62\uff0cFalse\u8868\u793a\u4e0d\u7981\u6b62 ALAudioDevice.playSine(frequency\uff0cgain,pan,duration) # \u8f93\u51fa\u4e00\u4e2a\u7ed9\u5b9a\u7279\u6027\u7684\u6b63\u5f26\u6ce2 Parameters: frequency \uff1a\u9891\u7387\uff0c\u5355\u4f4d\u8d6b\u5179 gain \uff1a\u97f3\u91cf0~100 pan \uff1a\u7acb\u4f53\u58f0\u50cf\uff0c\u53d6-1\uff0c0\uff0c1 duration \uff1a\u6301\u7eed\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u79d2 ALAudioDevice.sendLocalBufferToOutput(nbOfFrames,buffer) # \u4e00\u4e2a\u672c\u5730\u7684\u6a21\u5757\u4f7f\u7528\u8be5\u51fd\u6570\u53d1\u9001\u4fe1\u53f7\u5230\u673a\u5668\u4eba\u7684\u626c\u58f0\u5668\uff0c\u4fe1\u53f7\u5b58\u5728\u5341\u516d\u4f4d\u7684\u7f13\u5b58\u5668\u4e2d\uff0c\u7f13\u5b58\u5668\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc716384 Parameters: nbOfFrames \uff1a\u7f13\u5b58\u5668\u4e2d\u7684\u7acb\u4f53\u5e27\u6570 buffer \uff1a\u7f13\u5b58\u5668\u7684\u5728\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u5730\u5740 Returns: \u64cd\u4f5c\u6210\u529f\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse ALAudioDevice.setClientPreferences(name,sampleRate,channels,deinterleaved) # \u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u51fd\u6570\u6765\u8bbe\u5b9aALAudioDevice\u4f20\u9012\u7684\u4fe1\u53f7\u7684\u683c\u5f0f\u3002\u5982\u679c\u6ca1\u6709\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u5219\u9ed8\u8ba4\u53d1\u9001\u7ed9\u8fd9\u4e2a\u6a21\u5757\u7684\u683c\u5f0f\u662f\u56db\u4e2a\u4ea4\u7ec7\u901a\u9053\uff0c48000Hz\u3002\u4e0b\u5217\u7684\u683c\u5f0f\u7ec4\u5408\u662f\u53ef\u884c\u7684\uff1a \u56db\u901a\u9053\u4ea4\u7ec7\uff0c48000Hz\uff08\u9ed8\u8ba4\u8bbe\u7f6e\uff09 \u56db\u901a\u9053\u5206\u9009\uff0c48000Hz \u4e00\u901a\u9053\uff08\u524d\uff0c\u540e\uff0c\u5de6\u6216\u53f3\uff09\uff0c16000Hz Parameters: name \uff1a\u6a21\u5757\u540d\u5b57 sampleRte \uff1a\u53d6\u6837\u7387\uff0c16000Hz\u621648000Hz channels \uff1a\u901a\u9053\u914d\u7f6e\uff0cAL.ALLCHANNELS\uff0cAL.FRONTCHANNEL\uff0cAL.LEFTCHANNEL\u6216\u8005AL.REARCHANNEL denterleaved \uff1a\u53ea\u6709\u5f53\u901a\u9053\u914d\u7f6e\u4e3aAL.ALLCHANNELS\u65f6\u624d\u6709\u6548 ALAudioDevice.setFileAsInput(fileName) # \u8be5\u51fd\u6570\u5c06\u7279\u5b9a\u6587\u4ef6\u8bbe\u5b9a\u4e3a\u58f0\u97f3\u8f93\u5165\uff0c\u58f0\u97f3\u6587\u4ef6\u4ee5.wav\u4e3a\u540e\u7f00\uff0c\u5305\u542b48000Hz\uff0c16\u4f4d\uff0c\u56db\u901a\u9053\u4ea4\u7ec7\u4fe1\u53f7 Parameters: fileName \uff1a\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84 ALAudioDevice.setOutputVolume(volume) # \u8be5\u51fd\u6570\u8bbe\u5b9a\u7cfb\u7edf\u7684\u8f93\u5165\u97f3\u91cf\uff0c\u97f3\u91cf\u53ef\u4ee5\u7531ALAudioDevice.getOutputVolume\u83b7\u53d6 ALAudioDevice.startMicrophonesRecording(fileName) # \u8be5\u51fd\u6570\u5c06\u9ea6\u514b\u98ce\u6536\u96c6\u5230\u7684\u4fe1\u53f7\u76f4\u63a5\u8bb0\u5f55\u5728\u7279\u5b9a\u7684\u6587\u4ef6\u4e2d\u3002\u5982\u679c\u6587\u4ef6\u540e\u7f00\u4e3a.wav ALAudioPlayer \u6a21\u5757 # ALAudioPlayer \u4e3a\u591a\u79cd\u97f3\u9891\u6587\u4ef6\u683c\u5f0f\u53ca\u5176\u5173\u8054\u7684\u5e38\u7528\u529f\u80fd\uff08\u64ad\u653e\uff0c\u6682\u505c\uff0c\u505c\u6b62\uff0c\u5faa\u73af\u7b49\uff09\u63d0\u4f9b\u64ad\u653e\u670d\u52a1\u3002\u5728\u6240\u6709\u60c5\u51b5\u4e0b\uff0c\u6700\u7ec8\u7684\u97f3\u9891\u6d41\u90fd\u5c06\u53d1\u9001\u5230\u673a\u5668\u4eba\u7684\u626c\u58f0\u5668\u3002\u5e76\u4f7f\u7528\u5176\u7edd\u5bf9\u8def\u5f84\u8c03\u7528\u5355\u4e2a\u58f0\u97f3\u6587\u4ef6(mp3\u683c\u5f0f\u6587\u4ef6\u652f\u6301\u4e0d\u662f\u5f88\u597d)\uff1a fileId = aup.post.playFile(\"/usr/share/naoqi/wav/filename.wav\") ALAudioPlayer.loadFile(filename) # \u9884\u8f7d\u6587\u4ef6\uff0c\u4f46\u4e0d\u64ad\u653e\u5b83\u3002\u5f53play\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u9884\u52a0\u8f7d\u6587\u4ef6\u662f\u4e00\u79cd\u51cf\u5c11\u5b9e\u9645\u542f\u52a8\u64ad\u653e\u6240\u9700\u65f6\u95f4\u7684\u65b9\u6cd5\u3002\u52a0\u8f7d\u6587\u4ef6\u7684\u64ad\u653e\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528ALAudioPlayer.play\u5f00\u59cb\u3002 Parameters: fileName -\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84 Returns: \u64ad\u653e\u4efb\u52a1\u7684ID ALAudioPlayer.pause (taskID) # \u6682\u505c\u6587\u4ef6\u7684\u64ad\u653e\uff0c\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528ALAudioPlayer.play\u5f00\u59cb\u3002 Parameters: taskID -\u64ad\u653e\u4efb\u52a1\u7684ID ALAudioPlayer.play(taskID, volume\uff0cpan) # \u5f00\u59cb\u64ad\u653e\u6307\u5b9a\u7684\u4efb\u52a1\uff0c\u5177\u6709\u7279\u5b9a\u7684\u97f3\u91cf\u548c\u7acb\u4f53\u58f0\u3002 Parameters: taskID -\u64ad\u653e\u4efb\u52a1\u7684ID volume - \u97f3\u91cf[0.0-1.0] pan - \u7acb\u4f53\u58f0(-1.0(\u5de6) - 1.0(\u53f3)) ALAudioPlayer.playFile (fileName, volume, pan) # \u542f\u52a8\u5bf9\u6307\u5b9a\u6587\u4ef6\u7684\u56de\u653e, \u8fd9\u4e2a\u8c03\u7528\u76f8\u5f53\u4e8e\u4f9d\u6b21\u8c03\u7528ALAudioPlayer.loadFile\u548cALAudioPlayer.play\u3002 Parameters: fileName -\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84 volume - \u97f3\u91cf[0.0-1.0] pan - \u7acb\u4f53\u58f0(-1.0(\u5de6) - 1.0(\u53f3)) ALAudioPlayer.setVolume (taskID, volume) # \u8bbe\u7f6e\u64ad\u653e\u6307\u5b9a\u4efb\u52a1\u7684\u97f3\u91cf\u7ea7\u522b\u3002 Parameters: taskID -\u64ad\u653e\u4efb\u52a1\u7684ID volume - \u97f3\u91cf[0.0-1.0] ALAudioPlayer.stopAll () # \u505c\u6b62\u6240\u6709\u64ad\u653e\u6587\u4ef6","title":"\u673a\u5668\u4eba\u542c\u89c9"},{"location":"audio/#_1","text":"","title":"\u673a\u5668\u4eba\u8bed\u97f3"},{"location":"audio/#alanimatedspeech","text":"\u8be5\u6a21\u5757\u4f7f\u673a\u5668\u4eba\u4ee5\u4e00\u79cd\u6709\u8868\u73b0\u529b\u7684\u5f62\u5f0f\u6765\u8bf4\u8bdd\uff0c\u5305\u62ec\u8bed\u8a00\u548c\u52a8\u4f5c\u7b49\u3002 \u539f\u7406\uff1a\u6a21\u5757\u53ef\u4ee5\u63a5\u6536\u7528\u6307\u4ee4\u6807\u6ce8\u7684\u6587\u672c\uff0c\u6587\u672c\u88ab\u5206\u6210\u4e00\u4e2a\u4e2a\u8bed\u53e5\u548c\u52a8\u4f5c\u5c0f\u5757\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6bcf\u4e2a\u52a8\u4f5c\u548c\u8bed\u53e5\u6267\u884c\u7684\u540c\u6b65\u6027\u548c\u5f02\u6b65\u6027 \u6307\u4ee4\u6587\u672c\uff1a\u4e00\u4e2a\u5305\u542b\u8bed\u53e5\u548c\u52a8\u4f5c\u6307\u4ee4\u7684\u6587\u672c\uff0c\u5982 \"Hello! ^start(animations/Stand/Gestures/Hey_1) Nice to meet you!\" \u6267\u884c\u4e86\u8fd9\u4e2a\u6587\u672c\u4e4b\u540e\uff0c\u673a\u5668\u4eba\u7684\u6267\u884c\u987a\u5e8f\u662f\uff1a \uff081\uff09\u673a\u5668\u4eba\u8bf4\u201cHello\u201d \uff082\uff09\u540c\u65f6\u6267\u884c \u200b a.\u6267\u884c\u547d\u4ee4animations/Stand/Gestures/Hey_1 \u200b b.\u8bf4\u201cNice to meet you!\u201d \u5982\u679c\u60f3\u7ee7\u7eed\u8fd0\u884c\u52a8\u4f5c\uff0c\u53ef\u4ee5\u5728\u540e\u9762\u52a0\u4e00\u4e2a ^wait \u6307\u4ee4\uff0c\u5982 \"Hello! ^start(animations/Stand/Gestures/Hey_1) Nice to meet you ^wait(animations/Stand/Gestures/Hey_1)\" \u5177\u4f53\u7684\u6307\u4ee4\u5982\u4e0b\uff1a \u8bf4\u8bdd\u52a8\u4f5c\u6a21\u5f0f \u6307\u4ee4 \u4f5c\u7528 ^mode( speaking_movement_mode ) \u6539\u53d8\u8bf4\u8bdd\u7684\u65f6\u5019\u7684\u52a8\u4f5c\uff0c speaking_movement_mode \u53ef\u4ee5\u662f\u201cdisabled\u201d\"random\"\"contextual\" \"Hello. Look I can stop moving ^mode(disabled) and after I can resume moving ^mode(contextual), you see ?\" \u52a8\u6001\u52a8\u4f5c \u6307\u4ee4 \u4f5c\u7528 ^run( animation_full_name ) \u4e2d\u6b62\u8bed\u97f3\uff0c\u8fdb\u884c\u52a8\u6001\u52a8\u4f5c\uff0c\u518d\u91cd\u65b0\u5f00\u59cb\u8bed\u97f3 ^start( animation_full_name ) \u5f00\u59cb\u52a8\u4f5c ^stop( animation_full_name ) \u505c\u6b62\u52a8\u4f5c ^wait( animation_full_name ) \u4e2d\u6b62\u8bed\u97f3\uff0c\u7b49\u5230\u52a8\u4f5c\u7ed3\u675f\u518d\u91cd\u65b0\u5f00\u59cb\u8bed\u97f3 \"^start(animations/Stand/Gestures/Enthusiastic_4) Look what I can do while speaking!\" \"^start(animations/Stand/Gestures/Enthusiastic_4) Look what I can do while speaking! ^stop(animations/Stand/Gestures/Enthusiastic_4) Now I am animated by the ALSpeakingMovement module\" \"^start(animations/Stand/Gestures/Hey_1)Hi, guys! ^wait(animations/Stand/Gestures/Hey_1)\" \u8fd0\u884c\u6807\u8bb0\u52a8\u4f5c \u6307\u4ee4 \u4f5c\u7528 ^runTag( tag_name ) \u6216 ^runTag( path , tag_name ) \u4e2d\u6b62\u8bed\u97f3\u2192\u8fd0\u884c\u6709\u6807\u8bb0\u7684\u52a8\u6001\u52a8\u4f5c\uff0c\u5982\u679c\u6307\u5b9a\u8def\u5f84\uff0c\u5219\u53ea\u6709\u8be5\u8def\u5f84\u7684\u52a8\u4f5c\u88ab\u8fd0\u884c\u2192\u91cd\u65b0\u5f00\u59cb\u8bed\u97f3 ^startTag( tag_name ) \u6216 ^runTag( path , tag_name ) \u8fd0\u884c\u6709\u6807\u8bb0\u7684\u52a8\u6001\u52a8\u4f5c\uff0c\u5982\u679c\u6307\u5b9a\u8def\u5f84\uff0c\u5219\u53ea\u6709\u8be5\u8def\u5f84\u7684\u52a8\u4f5c\u88ab\u8fd0\u884c ^stopTag( tag_name ) \u6216 ^stopTag( path , tag_name ) \u505c\u6b62\u6709\u6807\u8bb0\u7684\u52a8\u6001\u52a8\u4f5c\uff0c\u5982\u679c\u6307\u5b9a\u8def\u5f84\uff0c\u5219\u53ea\u6709\u8be5\u8def\u5f84\u7684\u52a8\u4f5c\u88ab\u505c\u6b62 ^waitTag( tag_name ) \u6216 ^waitTag( path , tag_name ) \u4e2d\u6b62\u8bed\u97f3\u2192\u7b49\u5f85\u6709\u6807\u8bb0\u7684\u52a8\u6001\u52a8\u4f5c\u7ed3\u675f\uff0c\u5982\u679c\u6307\u5b9a\u8def\u5f84\uff0c\u5219\u53ea\u7b49\u5f85\u8be5\u8def\u5f84\u6307\u5b9a\u7684\u52a8\u4f5c\u2192\u91cd\u65b0\u5f00\u59cb\u8bed\u97f3 \"^startTag(me) My name is Nao.\" \"^startTag(hello) Hello. ^waitTag(hello)\" \"^startTag(hello) Hello Paul, nice to meet you. ^stopTag(hello) My name is Nao.\" \"^startTag(animations/Stand, hello) Hello. ^waitTag(animations/Stand, hello)\" \u58f0\u97f3 \u6307\u4ee4 \u4f5c\u7528 ^runSound( soundSet/soundFile ) \u6216 ^runSound( soundSet/soundFile , soundVolume ) \u4e2d\u65ad\u8bed\u97f3\u2192\u64ad\u653e\u58f0\u97f3\u2192\u91cd\u65b0\u542f\u52a8\u8bed\u97f3\u3002 soundVolume \u662f0~100\u7684\u6574\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a100 ^startSound( soundSet/soundFile ) \u6216 ^startSound( soundSet/soundFile , soundVolume ) \u64ad\u653e\u58f0\u97f3\u4f5c\u4e3a\u80cc\u666f\u97f3\u4e50\u3002 soundVolume \u662f0~100\u7684\u6574\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a100 ^stopSound( soundSet/soundFile ) \u505c\u6b62\u64ad\u653e ^waitSound( soundSet/soundFile ) \u4e2d\u6b62\u8bed\u97f3\u2192\u7b49\u5f85\u64ad\u653e\u7ed3\u675f\u2192\u91cd\u65b0\u542f\u52a8\u8bed\u97f3 \"^startSound(my_sound_set/my_sound) That's cool.\" \"^startSound(my_sound_set/my_sound, 50) That's cool. ^waitSound(my_sound_set/my_sound)\" \"That's cool. ^runSound(my_sound_set/my_sound) \"","title":"ALAnimatedSpeech\u6a21\u5757"},{"location":"audio/#alanimatedspeechsaytext","text":"\u673a\u5668\u4eba\u8bed\u97f3\u8f93\u51fa\u7ed9\u5b9a\u7684\u8bed\u53e5\uff0c\u5e76\u4e14\u5bf9\u5185\u5d4c\u5728\u8bed\u53e5\u4e2d\u7684\u52a8\u6001\u52a8\u4f5c\u8fdb\u884c\u6f14\u793a Parameters: \u4e00\u4e2a\u7ed9\u5b9a\u7684\u6587\u672c\u8bed\u53e5\uff0c\u4f8b\u5982\u201cHello. ^start(animations/Stand/Gestures/Hey_1) My name is John Doe. Nice to meet you!\u201d) from naoqi import ALProxy speech = ALProxy(\"ALAnimatedSpeech\", \"<IP of your robot>\", 9559) speech.say(\"Hello! ^start(animations/Stand/Gestures/Hey_1) Nice to meet you!\")","title":"ALAnimatedSpeech.say(text)"},{"location":"audio/#alaudiodevice","text":"\u8be5\u6a21\u5757\u63d0\u4f9b\u7ed9\u5176\u5b83 Naoqi \u6a21\u5757\u5230NAO\u7684\u58f0\u97f3\u8f93\u5165\uff08\u9ea6\u514b\u98ce\uff09\u548c\u58f0\u97f3\u8f93\u51fa\uff08\u5587\u53ed\uff09\u7684\u63a5\u53e3\uff0c\u6bcf\u4e2a\u9700\u8981\u5904\u7406\u58f0\u97f3\u4fe1\u53f7\u7684 Naoqi \u6a21\u5757\u90fd\u8981\u4f7f\u7528\u8be5\u6a21\u5757\u6765\u4f20\u9012\u4fe1\u53f7\u3002 ALAudioDevice \u53ef\u4ee5\u4ee5\u4e0b\u5217\u7684\u683c\u5f0f\u6765\u8868\u793a\u7531\u9ea6\u514b\u98ce\u8f93\u5165\u7684\u58f0\u97f3\uff1a \u56db\u4e2a\u901a\u9053\u4ea4\u7ec7\uff0c48000Hz\uff0c170ms\u7f13\u51b2\uff08\u9ed8\u8ba4\uff09 \u56db\u4e2a\u901a\u9053\u5206\u9009\uff0c48000Hz\uff0c170ms\u7f13\u51b2 \u4e00\u4e2a\u901a\u9053\uff08\u524d\uff0c\u540e\uff0c\u5de6\u6216\u8005\u53f3\uff09\uff0c16000Hz\uff0c170ms\u7f13\u51b2 ALAudioDevice \u53ef\u4ee5\u4ee5\u4e0b\u5217\u7684\u5e27\u6570\u6765\u53d1\u9001\u6570\u636e\u5230\u5587\u53ed\uff1a \u4e24\u4e2a\u901a\u9053\u4ea4\u7ec7\uff0c16000Hz\uff08\u4e9a\u6d32\u8bed\u8a00\u9ed8\u8ba4\u8be5\u503c\uff09 \u4e24\u4e2a\u901a\u9053\u4ea4\u7ec7\uff0c22050Hz\uff08\u975e\u4e9a\u6d32\u8bed\u8a00\u9ed8\u8ba4\u8be5\u503c\uff09 \u4e24\u4e2a\u901a\u9053\u4ea4\u7ec7\uff0c44100Hz \u4e24\u4e2a\u901a\u9053\u4ea4\u7ec7\uff0c48000Hz","title":"ALAudioDevice\u6a21\u5757"},{"location":"audio/#alaudiodevicedisableenergycomputation","text":"\u5173\u95ed\u8ba1\u7b97\u6bcf\u4e2a\u8f93\u5165\u901a\u9053\u7684\u80fd\u91cf from naoqi import ALProxy EngCom = ALProxy(\"ALAudioDevice\", \"<IP of your robot>\", 9559) EngCom.disableEnergyComputation()","title":"ALAudioDevice.disableEnergyComputation()"},{"location":"audio/#alaudiodeviceenableenergycomputation","text":"\u4f7f\u80fd\u8ba1\u7b97\u6bcf\u4e2a\u8f93\u5165\u901a\u9053\u7684\u80fd\u91cf\uff08\u9ed8\u8ba4\u662f\u5173\u95ed\u7684\uff09\uff0c\u8ba1\u7b97\u7ed3\u679c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u51fd\u6570\u8c03\u53d6\uff1a ALAudioDevice.getFrontMicEnergy() ALAudioDevice.getRearMicEnergy() ALAudioDevice.getLeftMicEnergy() ALAudioDevice.getRightMicEnergy()","title":"ALAudioDevice.enableEnergyComputation()"},{"location":"audio/#alaudiodeviceflushaudiooutputs","text":"\u6e05\u7a7a\u6240\u6709\u5c06\u8981\u53d1\u9001\u7ed9\u626c\u58f0\u5668\u7684\u6837\u672c","title":"ALAudioDevice.flushAudioOutputs()"},{"location":"audio/#alaudiodevicegetfrontmicenergy","text":"\u8fd4\u56de\u524d\u65b9\u9ea6\u514b\u98ce\u5728170ms\u7f13\u51b2\u533a\u7684\u5e73\u5747\u4fe1\u53f7\u80fd\u91cf\uff0c\u8be5\u529f\u80fd\u8fd0\u884c\u524d\u9996\u5148\u8981\u7528 enableEnergyComputation ()\u4f7f\u80fd Returns: \u80fd\u91cf\u503c\uff0c\u8303\u56f4\u57280~32768\u4e4b\u95f4 from naoqi import ALProxy Eng = ALProxy(\"ALAudioDevice\", \"<IP of your robot>\", 9559) Eng.enableEnergyComputation() leftEng = Eng.getFrontMicEnergy() \u5176\u4f59\u9ea6\u514b\u98ce\u7684\u80fd\u91cf\u8ba1\u7b97\u540c\u7406","title":"ALAudioDevice.getFrontMicEnergy()"},{"location":"audio/#alaudiodevicegetoutputvolume","text":"\u83b7\u53d6\u7cfb\u7edf\u97f3\u91cf\u5927\u5c0f Returns: \u97f3\u91cf\u5927\u5c0f0~100","title":"ALAudioDevice.getOutputVolume()"},{"location":"audio/#alaudiodeviceisaudiooutmuted","text":"\u5224\u65ad\u662f\u5426\u58f0\u97f3\u8f93\u51fa\u8bbe\u5907\u88ab\u7981\u6b62 Returns: \u58f0\u97f3\u88ab\u7981\u6b62\u5219\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse","title":"ALAudioDevice.isAudioOutMuted()"},{"location":"audio/#alaudiodevicemuteaudiooutmute","text":"\u7981\u6b62\u58f0\u97f3\u8bbe\u5907 Parameters: True\u8868\u793a\u7981\u6b62\uff0cFalse\u8868\u793a\u4e0d\u7981\u6b62","title":"ALAudioDevice.muteAudioOut(mute)"},{"location":"audio/#alaudiodeviceplaysinefrequencygainpanduration","text":"\u8f93\u51fa\u4e00\u4e2a\u7ed9\u5b9a\u7279\u6027\u7684\u6b63\u5f26\u6ce2 Parameters: frequency \uff1a\u9891\u7387\uff0c\u5355\u4f4d\u8d6b\u5179 gain \uff1a\u97f3\u91cf0~100 pan \uff1a\u7acb\u4f53\u58f0\u50cf\uff0c\u53d6-1\uff0c0\uff0c1 duration \uff1a\u6301\u7eed\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u79d2","title":"ALAudioDevice.playSine(frequency\uff0cgain,pan,duration)"},{"location":"audio/#alaudiodevicesendlocalbuffertooutputnbofframesbuffer","text":"\u4e00\u4e2a\u672c\u5730\u7684\u6a21\u5757\u4f7f\u7528\u8be5\u51fd\u6570\u53d1\u9001\u4fe1\u53f7\u5230\u673a\u5668\u4eba\u7684\u626c\u58f0\u5668\uff0c\u4fe1\u53f7\u5b58\u5728\u5341\u516d\u4f4d\u7684\u7f13\u5b58\u5668\u4e2d\uff0c\u7f13\u5b58\u5668\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc716384 Parameters: nbOfFrames \uff1a\u7f13\u5b58\u5668\u4e2d\u7684\u7acb\u4f53\u5e27\u6570 buffer \uff1a\u7f13\u5b58\u5668\u7684\u5728\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u5730\u5740 Returns: \u64cd\u4f5c\u6210\u529f\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse","title":"ALAudioDevice.sendLocalBufferToOutput(nbOfFrames,buffer)"},{"location":"audio/#alaudiodevicesetclientpreferencesnamesampleratechannelsdeinterleaved","text":"\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u51fd\u6570\u6765\u8bbe\u5b9aALAudioDevice\u4f20\u9012\u7684\u4fe1\u53f7\u7684\u683c\u5f0f\u3002\u5982\u679c\u6ca1\u6709\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u5219\u9ed8\u8ba4\u53d1\u9001\u7ed9\u8fd9\u4e2a\u6a21\u5757\u7684\u683c\u5f0f\u662f\u56db\u4e2a\u4ea4\u7ec7\u901a\u9053\uff0c48000Hz\u3002\u4e0b\u5217\u7684\u683c\u5f0f\u7ec4\u5408\u662f\u53ef\u884c\u7684\uff1a \u56db\u901a\u9053\u4ea4\u7ec7\uff0c48000Hz\uff08\u9ed8\u8ba4\u8bbe\u7f6e\uff09 \u56db\u901a\u9053\u5206\u9009\uff0c48000Hz \u4e00\u901a\u9053\uff08\u524d\uff0c\u540e\uff0c\u5de6\u6216\u53f3\uff09\uff0c16000Hz Parameters: name \uff1a\u6a21\u5757\u540d\u5b57 sampleRte \uff1a\u53d6\u6837\u7387\uff0c16000Hz\u621648000Hz channels \uff1a\u901a\u9053\u914d\u7f6e\uff0cAL.ALLCHANNELS\uff0cAL.FRONTCHANNEL\uff0cAL.LEFTCHANNEL\u6216\u8005AL.REARCHANNEL denterleaved \uff1a\u53ea\u6709\u5f53\u901a\u9053\u914d\u7f6e\u4e3aAL.ALLCHANNELS\u65f6\u624d\u6709\u6548","title":"ALAudioDevice.setClientPreferences(name,sampleRate,channels,deinterleaved)"},{"location":"audio/#alaudiodevicesetfileasinputfilename","text":"\u8be5\u51fd\u6570\u5c06\u7279\u5b9a\u6587\u4ef6\u8bbe\u5b9a\u4e3a\u58f0\u97f3\u8f93\u5165\uff0c\u58f0\u97f3\u6587\u4ef6\u4ee5.wav\u4e3a\u540e\u7f00\uff0c\u5305\u542b48000Hz\uff0c16\u4f4d\uff0c\u56db\u901a\u9053\u4ea4\u7ec7\u4fe1\u53f7 Parameters: fileName \uff1a\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84","title":"ALAudioDevice.setFileAsInput(fileName)"},{"location":"audio/#alaudiodevicesetoutputvolumevolume","text":"\u8be5\u51fd\u6570\u8bbe\u5b9a\u7cfb\u7edf\u7684\u8f93\u5165\u97f3\u91cf\uff0c\u97f3\u91cf\u53ef\u4ee5\u7531ALAudioDevice.getOutputVolume\u83b7\u53d6","title":"ALAudioDevice.setOutputVolume(volume)"},{"location":"audio/#alaudiodevicestartmicrophonesrecordingfilename","text":"\u8be5\u51fd\u6570\u5c06\u9ea6\u514b\u98ce\u6536\u96c6\u5230\u7684\u4fe1\u53f7\u76f4\u63a5\u8bb0\u5f55\u5728\u7279\u5b9a\u7684\u6587\u4ef6\u4e2d\u3002\u5982\u679c\u6587\u4ef6\u540e\u7f00\u4e3a.wav","title":"ALAudioDevice.startMicrophonesRecording(fileName)"},{"location":"audio/#alaudioplayer","text":"ALAudioPlayer \u4e3a\u591a\u79cd\u97f3\u9891\u6587\u4ef6\u683c\u5f0f\u53ca\u5176\u5173\u8054\u7684\u5e38\u7528\u529f\u80fd\uff08\u64ad\u653e\uff0c\u6682\u505c\uff0c\u505c\u6b62\uff0c\u5faa\u73af\u7b49\uff09\u63d0\u4f9b\u64ad\u653e\u670d\u52a1\u3002\u5728\u6240\u6709\u60c5\u51b5\u4e0b\uff0c\u6700\u7ec8\u7684\u97f3\u9891\u6d41\u90fd\u5c06\u53d1\u9001\u5230\u673a\u5668\u4eba\u7684\u626c\u58f0\u5668\u3002\u5e76\u4f7f\u7528\u5176\u7edd\u5bf9\u8def\u5f84\u8c03\u7528\u5355\u4e2a\u58f0\u97f3\u6587\u4ef6(mp3\u683c\u5f0f\u6587\u4ef6\u652f\u6301\u4e0d\u662f\u5f88\u597d)\uff1a fileId = aup.post.playFile(\"/usr/share/naoqi/wav/filename.wav\")","title":"ALAudioPlayer \u6a21\u5757"},{"location":"audio/#alaudioplayerloadfilefilename","text":"\u9884\u8f7d\u6587\u4ef6\uff0c\u4f46\u4e0d\u64ad\u653e\u5b83\u3002\u5f53play\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u9884\u52a0\u8f7d\u6587\u4ef6\u662f\u4e00\u79cd\u51cf\u5c11\u5b9e\u9645\u542f\u52a8\u64ad\u653e\u6240\u9700\u65f6\u95f4\u7684\u65b9\u6cd5\u3002\u52a0\u8f7d\u6587\u4ef6\u7684\u64ad\u653e\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528ALAudioPlayer.play\u5f00\u59cb\u3002 Parameters: fileName -\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84 Returns: \u64ad\u653e\u4efb\u52a1\u7684ID","title":"ALAudioPlayer.loadFile(filename)"},{"location":"audio/#alaudioplayerpause-taskid","text":"\u6682\u505c\u6587\u4ef6\u7684\u64ad\u653e\uff0c\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528ALAudioPlayer.play\u5f00\u59cb\u3002 Parameters: taskID -\u64ad\u653e\u4efb\u52a1\u7684ID","title":"ALAudioPlayer.pause (taskID)"},{"location":"audio/#alaudioplayerplaytaskid-volumepan","text":"\u5f00\u59cb\u64ad\u653e\u6307\u5b9a\u7684\u4efb\u52a1\uff0c\u5177\u6709\u7279\u5b9a\u7684\u97f3\u91cf\u548c\u7acb\u4f53\u58f0\u3002 Parameters: taskID -\u64ad\u653e\u4efb\u52a1\u7684ID volume - \u97f3\u91cf[0.0-1.0] pan - \u7acb\u4f53\u58f0(-1.0(\u5de6) - 1.0(\u53f3))","title":"ALAudioPlayer.play(taskID, volume\uff0cpan)"},{"location":"audio/#alaudioplayerplayfile-filename-volume-pan","text":"\u542f\u52a8\u5bf9\u6307\u5b9a\u6587\u4ef6\u7684\u56de\u653e, \u8fd9\u4e2a\u8c03\u7528\u76f8\u5f53\u4e8e\u4f9d\u6b21\u8c03\u7528ALAudioPlayer.loadFile\u548cALAudioPlayer.play\u3002 Parameters: fileName -\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84 volume - \u97f3\u91cf[0.0-1.0] pan - \u7acb\u4f53\u58f0(-1.0(\u5de6) - 1.0(\u53f3))","title":"ALAudioPlayer.playFile (fileName, volume, pan)"},{"location":"audio/#alaudioplayersetvolume-taskid-volume","text":"\u8bbe\u7f6e\u64ad\u653e\u6307\u5b9a\u4efb\u52a1\u7684\u97f3\u91cf\u7ea7\u522b\u3002 Parameters: taskID -\u64ad\u653e\u4efb\u52a1\u7684ID volume - \u97f3\u91cf[0.0-1.0]","title":"ALAudioPlayer.setVolume (taskID, volume)"},{"location":"audio/#alaudioplayerstopall","text":"\u505c\u6b62\u6240\u6709\u64ad\u653e\u6587\u4ef6","title":"ALAudioPlayer.stopAll ()"},{"location":"basic/","text":"\u57fa\u672c\u64cd\u4f5c # \u8bbe\u7f6e\u4f60\u7684\u673a\u5668\u4eba # \u4e0b\u8f7d\u673a\u5668\u4eba\u914d\u7f6e\u8f6f\u4ef6 # \u5728\u60a8\u7684\u7535\u8111\u4e0a\uff0c\u6839\u636e\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u8f7d Robot Settings\u5b89\u88c5\u7a0b\u5e8f \u7248\u672c\u3002 \u7cfb\u7edf \u7248\u672c \u4e0b\u8f7d\u94fe\u63a5 Linux Ubuntu 16.04 Xenial Xerus - 64bits only Robot settings Linux 64 - Installer Robot settings Linux 64 - Tar Windows Microsoft Windows 10 - 64bits Robot settings Win 64 - Installer Robot settings Win 64 - Tar Mac Mac OS X 10.12 Sierra Robot settings Mac 64 - Installer Robot settings Mac 64 - Tar \u4e0b\u8f7d\u5b8c\u6210\u76f4\u63a5\u53cc\u51fb\u5b89\u88c5\uff0c\u5b8c\u6210\u540e\u6253\u5f00\u3002 \u83b7\u53d6\u673a\u5668\u4ebaip\u5730\u5740 # 1.\u4f7f\u7528\u7f51\u7ebf\u8fdb\u884c\u8fde\u63a5\u540e\uff0c\u4ece\u7535\u8111\u7aef\u7684app\u4e2d\u8bbe\u7f6e\u673a\u5668\u4eba\u8fde\u63a5\u65e0\u7ebf\u7f51 2.\u5feb\u901f\u6309\u4e0b NAO \u7684\u80f8\u90e8\u6309\u94ae\u4e00\u6b21\u3002NAO\u4f1a\u590d\u8ff0\u4ed6\u7684IP\u5730\u5740\u7684\u56db\u4e2a\u6570\u5b57\uff0c\u7528 \u70b9\u5206\u9694 \u3002 3.\u5c06IP\u5730\u5740\u586b\u5165ROBOT SETTING \u754c\u9762\uff0c\u6309ENTER\u952e\u8fde\u63a5\u673a\u5668\u4ebaNAO\uff0c\u5e76\u5728\u7528\u6237\u754c\u9762\u4e2d\u914d\u7f6e\u9700\u8981\u8fde\u63a5\u7684WIFI\uff0c\u914d\u7f6e\u597d\u5373\u53ef\u62d4\u6389\u7f51\u7ebf\uff0c\u91cd\u65b0\u6309\u538b\u673a\u5668\u4eba\u80f8\u90e8\u6309\u94ae\uff0c\u83b7\u5f97\u65b0\u7684IP\u5730\u5740\u3002 \u4f7f\u7528ALProxy\u4ee3\u7406\u8fde\u63a5 # \u4e0b\u8f7d\u5b89\u88c5Python SDK # \u652f\u6301\u7684\u64cd\u4f5c\u7cfb\u7edf \u7cfb\u7edf \u7248\u672c Linux Ubuntu 16.04 Xenial Xerus - 64bits only Windows Microsoft Windows 10 64bits Mac Mac OS X 10.12 Sierra Mac10.12\u4ee5\u4e0a\u7684\u7248\u672c\u4e5f\u652f\u6301 Windows # \u4e0b\u8f7d\u5b89\u88c5Python 2.7 . \u4e0b\u8f7d\u94fe\u63a5 \u4e0b\u8f7d NAOqi for Python : pynaoqi-python2.7-2.8.6.23-win64-vs2015-20191127_152649.zip \u70b9\u51fb\u4e0b\u8f7d . \u8bbe\u7f6ewindows\u73af\u5883\u53d8\u91cf(\u7f51\u4e0a\u53ef\u641c\u7d22\u6dfb\u52a0\u6559\u7a0b)\uff0c\u6dfb\u52a0\u4e00\u4e2a\u7528\u6237\u53d8\u91cf variable \uff1aPYTHONPATH value :path\\to\\python-sdk\\lib \u4e0b\u8f7d\u5b89\u88c5\u201cMicrosoft Visual C++ 2010 Redistributable Package (x86) Mac # \u786e\u4fdd System Integrity Protection \u88ab\u7981\u7528\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u8003[ Apple] Configuring System Integrity Protection \u5b89\u88c5python2.7 \u4e0b\u8f7d\u94fe\u63a5 : \uff0c\u786e\u4fdd\u5b89\u88c5\u5728 /usr/local/bin/python , \u800c\u4e0d\u662f /usr/bin/python \u4e0b\u8f7dNAOqi Mac\u7248\u672c pynaoqi-python2.7-2.8.6.23-mac64-20191127_144231.tar.gz \u3002 \u70b9\u51fb\u4e0b\u8f7d . \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf $ export PYTHONPATH=${PYTHONPATH}:/path/to/python-sdk/lib/python2.7/site-packages $ export DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:/path/to/python-sdk/lib $ export QI_SDK_PREFIX=/path/to/python-sdk Linux # \u786e\u4fddPython\u7248\u672c\u4e3a2.7 \u4e0b\u8f7d\u5b89\u88c5NAOqi Linux\u7248\u672c\uff0c \u70b9\u51fb\u4e0b\u8f7d . \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u4e5f\u53ef\u66f4\u6539bashrc\u6587\u4ef6\u3002 $ export PYTHONPATH=${PYTHONPATH}:/path/to/python-sdk/lib/python2.7/site-packages $ export QI_SDK_PREFIX=/path/to/python-sdk \u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f # \u5728python2.7\u73af\u5883\u4e2d\u4f7f\u7528 import naoqi ALProxy # ALProxy \u662f\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u5b83\u5141\u8bb8\u7528\u6237\u901a\u8fc7\u673a\u5668\u4ebaNao\u5728\u5c40\u57df\u7f51\u5185\u7684IP\u5730\u5740\u548c\u7aef\u53e3\uff08port\uff09\u8bbf\u95ee\u8fde\u63a5\u5230\u7684\u6240\u6709\u65b9\u6cd5\u6216\u6a21\u5757\uff08\u5982\uff1a ALTextToSpeech \u6a21\u5757\u7b49\u7b49\u3002 class(module_name, ip_address, port) module_name: \u9700\u8981\u8fde\u63a5\u5230\u7684\u529f\u80fd\u6a21\u5757\u7b49 ip_address: \u673a\u5668\u4ebanao\u7684ip\u5730\u5740 port\uff1aNao\u673a\u5668\u4eba\u4fa6\u542c\u7684\u7aef\u53e3\uff08\u9ed8\u8ba4\u4e3a9559\uff09 \u6a21\u5757\u7684\u6bcf\u4e2a\u65b9\u6cd5\u90fd\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\uff0c\u4f8b\u5982\u4ee5\u4e0b\u4f8b\u7a0b\u901a\u8fc7 ALTextToSpeech \u7684 say \u65b9\u6cd5\u5b9e\u73b0\u8fdc\u7a0b\u63a7\u5236Nao\u673a\u5668\u4eba\u8bf4Hello World\uff1a from naoqi import ALProxy tts = ALProxy(\"ALTextToSpeech\", \"<IP of your robot>\", 9559) tts.say(\"Hello, world!\") \u5e76\u884c\u4efb\u52a1\u6267\u884c # \u7528\u6237\u521d\u59cb\u5316\u7684\u6bcf\u4e00\u4e2a ALProxy \u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u540d\u4e3a post (\u4ee3\u7801\u4e2d\u7b2c\u4e94\u884c)\u7684\u5c5e\u6027\uff0c\u8fd9\u80fd\u8ba9\u6bcf\u4e00\u4e2a\u4ee3\u7406\u8c03\u7528\u7684\u65b9\u6cd5\u540c\u6b65=\u6267\u884c\uff0c\u800c\u4e0d\u9700\u8981\u6309\u7167\u6b63\u5e38python\u7684\u6267\u884c\u987a\u5e8f\u987a\u5e8f\u6267\u884c\uff0c\u5982\u4ee5\u4e0b\u5b9e\u4f8b\u5b9e\u73b0\u4e86Nao\u673a\u5668\u4eba\u884c\u8d70\u540c\u65f6\u5e76\u8bf4\u8bdd\uff1a from naoqi import ALProxy motion = ALProxy(\"ALMotion\", \"<IP of your robot>\", 9559) tts = ALProxy(\"ALTextToSpeech\", \"<IP of your robot>\", 9559) motion.setStiffnesses(\"Body\", 1.0) motion.moveInit() motion.post.moveTo(0.5, 0, 0) tts.say(\"I'm walking\") \u9664\u975e\u60a8\u5c06\u5173\u8282\u7684\u521a\u5ea6\u8bbe\u7f6e\u4e3a\u975e0 \u7684\uff0c\u5426\u5219\u673a\u5668\u4eba\u4e0d\u4f1a\u79fb\u52a8\u3002\u4e3a\u6b64\uff0c\u53ea\u9700\u8c03\u7528 ALMotion.setStiffnesses \u65b9\u6cd5\uff0c \u5982\u4ee3\u7801\u4e2d\u7b2c\u56db\u884c\u6240\u793a ALMotion.moveInit() API \u5c06\u673a\u5668\u4eba\u521d\u59cb\u5316\u5728\u4e00\u4e2a\u5408\u9002\u7684\u4f4d\u7f6e\uff08\u51c6\u5907\u79fb\u52a8\uff09 ALMotion.moveTo() API \u662f\u673a\u5668\u4eba\u671d\u5236\u5b9a\u65b9\u5411\u79fb\u52a8\u4e00\u6bb5\u8ddd\u79bb\uff0c\u5355\u4f4d\uff08m) ALMotion.post \u4f7f\u5e76\u884c\u6267\u884c\u80fd \u5982\u679c\u60a8\u9700\u8981\u7b49\u5f85\u76f4\u5230\u7ed9\u5b9a\u4efb\u52a1\u5b8c\u6210\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528ALProxy\u7684wait\u65b9\u6cd5\uff0c\u53c2\u6570\u4e3apost\u65b9\u6cd5\u8fd4\u56de\u7684\u4efb\u52a1id\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a from naoqi import ALProxy motion = ALProxy(\"ALMotion\", \"<IP of your robot>\", 9559) motion.moveInit() id = motion.post.moveTo(0.5, 0, 0) motion.wait(id, 0)","title":"\u57fa\u672c\u64cd\u4f5c"},{"location":"basic/#_1","text":"","title":"\u57fa\u672c\u64cd\u4f5c"},{"location":"basic/#_2","text":"","title":"\u8bbe\u7f6e\u4f60\u7684\u673a\u5668\u4eba"},{"location":"basic/#_3","text":"\u5728\u60a8\u7684\u7535\u8111\u4e0a\uff0c\u6839\u636e\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u8f7d Robot Settings\u5b89\u88c5\u7a0b\u5e8f \u7248\u672c\u3002 \u7cfb\u7edf \u7248\u672c \u4e0b\u8f7d\u94fe\u63a5 Linux Ubuntu 16.04 Xenial Xerus - 64bits only Robot settings Linux 64 - Installer Robot settings Linux 64 - Tar Windows Microsoft Windows 10 - 64bits Robot settings Win 64 - Installer Robot settings Win 64 - Tar Mac Mac OS X 10.12 Sierra Robot settings Mac 64 - Installer Robot settings Mac 64 - Tar \u4e0b\u8f7d\u5b8c\u6210\u76f4\u63a5\u53cc\u51fb\u5b89\u88c5\uff0c\u5b8c\u6210\u540e\u6253\u5f00\u3002","title":"\u4e0b\u8f7d\u673a\u5668\u4eba\u914d\u7f6e\u8f6f\u4ef6"},{"location":"basic/#ip","text":"1.\u4f7f\u7528\u7f51\u7ebf\u8fdb\u884c\u8fde\u63a5\u540e\uff0c\u4ece\u7535\u8111\u7aef\u7684app\u4e2d\u8bbe\u7f6e\u673a\u5668\u4eba\u8fde\u63a5\u65e0\u7ebf\u7f51 2.\u5feb\u901f\u6309\u4e0b NAO \u7684\u80f8\u90e8\u6309\u94ae\u4e00\u6b21\u3002NAO\u4f1a\u590d\u8ff0\u4ed6\u7684IP\u5730\u5740\u7684\u56db\u4e2a\u6570\u5b57\uff0c\u7528 \u70b9\u5206\u9694 \u3002 3.\u5c06IP\u5730\u5740\u586b\u5165ROBOT SETTING \u754c\u9762\uff0c\u6309ENTER\u952e\u8fde\u63a5\u673a\u5668\u4ebaNAO\uff0c\u5e76\u5728\u7528\u6237\u754c\u9762\u4e2d\u914d\u7f6e\u9700\u8981\u8fde\u63a5\u7684WIFI\uff0c\u914d\u7f6e\u597d\u5373\u53ef\u62d4\u6389\u7f51\u7ebf\uff0c\u91cd\u65b0\u6309\u538b\u673a\u5668\u4eba\u80f8\u90e8\u6309\u94ae\uff0c\u83b7\u5f97\u65b0\u7684IP\u5730\u5740\u3002","title":"\u83b7\u53d6\u673a\u5668\u4ebaip\u5730\u5740"},{"location":"basic/#alproxy","text":"","title":"\u4f7f\u7528ALProxy\u4ee3\u7406\u8fde\u63a5"},{"location":"basic/#python-sdk","text":"\u652f\u6301\u7684\u64cd\u4f5c\u7cfb\u7edf \u7cfb\u7edf \u7248\u672c Linux Ubuntu 16.04 Xenial Xerus - 64bits only Windows Microsoft Windows 10 64bits Mac Mac OS X 10.12 Sierra Mac10.12\u4ee5\u4e0a\u7684\u7248\u672c\u4e5f\u652f\u6301","title":"\u4e0b\u8f7d\u5b89\u88c5Python SDK"},{"location":"basic/#windows","text":"\u4e0b\u8f7d\u5b89\u88c5Python 2.7 . \u4e0b\u8f7d\u94fe\u63a5 \u4e0b\u8f7d NAOqi for Python : pynaoqi-python2.7-2.8.6.23-win64-vs2015-20191127_152649.zip \u70b9\u51fb\u4e0b\u8f7d . \u8bbe\u7f6ewindows\u73af\u5883\u53d8\u91cf(\u7f51\u4e0a\u53ef\u641c\u7d22\u6dfb\u52a0\u6559\u7a0b)\uff0c\u6dfb\u52a0\u4e00\u4e2a\u7528\u6237\u53d8\u91cf variable \uff1aPYTHONPATH value :path\\to\\python-sdk\\lib \u4e0b\u8f7d\u5b89\u88c5\u201cMicrosoft Visual C++ 2010 Redistributable Package (x86)","title":"Windows"},{"location":"basic/#mac","text":"\u786e\u4fdd System Integrity Protection \u88ab\u7981\u7528\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u8003[ Apple] Configuring System Integrity Protection \u5b89\u88c5python2.7 \u4e0b\u8f7d\u94fe\u63a5 : \uff0c\u786e\u4fdd\u5b89\u88c5\u5728 /usr/local/bin/python , \u800c\u4e0d\u662f /usr/bin/python \u4e0b\u8f7dNAOqi Mac\u7248\u672c pynaoqi-python2.7-2.8.6.23-mac64-20191127_144231.tar.gz \u3002 \u70b9\u51fb\u4e0b\u8f7d . \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf $ export PYTHONPATH=${PYTHONPATH}:/path/to/python-sdk/lib/python2.7/site-packages $ export DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:/path/to/python-sdk/lib $ export QI_SDK_PREFIX=/path/to/python-sdk","title":"Mac"},{"location":"basic/#linux","text":"\u786e\u4fddPython\u7248\u672c\u4e3a2.7 \u4e0b\u8f7d\u5b89\u88c5NAOqi Linux\u7248\u672c\uff0c \u70b9\u51fb\u4e0b\u8f7d . \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u4e5f\u53ef\u66f4\u6539bashrc\u6587\u4ef6\u3002 $ export PYTHONPATH=${PYTHONPATH}:/path/to/python-sdk/lib/python2.7/site-packages $ export QI_SDK_PREFIX=/path/to/python-sdk","title":"Linux"},{"location":"basic/#_4","text":"\u5728python2.7\u73af\u5883\u4e2d\u4f7f\u7528 import naoqi","title":"\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f"},{"location":"basic/#alproxy_1","text":"ALProxy \u662f\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u5b83\u5141\u8bb8\u7528\u6237\u901a\u8fc7\u673a\u5668\u4ebaNao\u5728\u5c40\u57df\u7f51\u5185\u7684IP\u5730\u5740\u548c\u7aef\u53e3\uff08port\uff09\u8bbf\u95ee\u8fde\u63a5\u5230\u7684\u6240\u6709\u65b9\u6cd5\u6216\u6a21\u5757\uff08\u5982\uff1a ALTextToSpeech \u6a21\u5757\u7b49\u7b49\u3002 class(module_name, ip_address, port) module_name: \u9700\u8981\u8fde\u63a5\u5230\u7684\u529f\u80fd\u6a21\u5757\u7b49 ip_address: \u673a\u5668\u4ebanao\u7684ip\u5730\u5740 port\uff1aNao\u673a\u5668\u4eba\u4fa6\u542c\u7684\u7aef\u53e3\uff08\u9ed8\u8ba4\u4e3a9559\uff09 \u6a21\u5757\u7684\u6bcf\u4e2a\u65b9\u6cd5\u90fd\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\uff0c\u4f8b\u5982\u4ee5\u4e0b\u4f8b\u7a0b\u901a\u8fc7 ALTextToSpeech \u7684 say \u65b9\u6cd5\u5b9e\u73b0\u8fdc\u7a0b\u63a7\u5236Nao\u673a\u5668\u4eba\u8bf4Hello World\uff1a from naoqi import ALProxy tts = ALProxy(\"ALTextToSpeech\", \"<IP of your robot>\", 9559) tts.say(\"Hello, world!\")","title":"ALProxy"},{"location":"basic/#_5","text":"\u7528\u6237\u521d\u59cb\u5316\u7684\u6bcf\u4e00\u4e2a ALProxy \u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u540d\u4e3a post (\u4ee3\u7801\u4e2d\u7b2c\u4e94\u884c)\u7684\u5c5e\u6027\uff0c\u8fd9\u80fd\u8ba9\u6bcf\u4e00\u4e2a\u4ee3\u7406\u8c03\u7528\u7684\u65b9\u6cd5\u540c\u6b65=\u6267\u884c\uff0c\u800c\u4e0d\u9700\u8981\u6309\u7167\u6b63\u5e38python\u7684\u6267\u884c\u987a\u5e8f\u987a\u5e8f\u6267\u884c\uff0c\u5982\u4ee5\u4e0b\u5b9e\u4f8b\u5b9e\u73b0\u4e86Nao\u673a\u5668\u4eba\u884c\u8d70\u540c\u65f6\u5e76\u8bf4\u8bdd\uff1a from naoqi import ALProxy motion = ALProxy(\"ALMotion\", \"<IP of your robot>\", 9559) tts = ALProxy(\"ALTextToSpeech\", \"<IP of your robot>\", 9559) motion.setStiffnesses(\"Body\", 1.0) motion.moveInit() motion.post.moveTo(0.5, 0, 0) tts.say(\"I'm walking\") \u9664\u975e\u60a8\u5c06\u5173\u8282\u7684\u521a\u5ea6\u8bbe\u7f6e\u4e3a\u975e0 \u7684\uff0c\u5426\u5219\u673a\u5668\u4eba\u4e0d\u4f1a\u79fb\u52a8\u3002\u4e3a\u6b64\uff0c\u53ea\u9700\u8c03\u7528 ALMotion.setStiffnesses \u65b9\u6cd5\uff0c \u5982\u4ee3\u7801\u4e2d\u7b2c\u56db\u884c\u6240\u793a ALMotion.moveInit() API \u5c06\u673a\u5668\u4eba\u521d\u59cb\u5316\u5728\u4e00\u4e2a\u5408\u9002\u7684\u4f4d\u7f6e\uff08\u51c6\u5907\u79fb\u52a8\uff09 ALMotion.moveTo() API \u662f\u673a\u5668\u4eba\u671d\u5236\u5b9a\u65b9\u5411\u79fb\u52a8\u4e00\u6bb5\u8ddd\u79bb\uff0c\u5355\u4f4d\uff08m) ALMotion.post \u4f7f\u5e76\u884c\u6267\u884c\u80fd \u5982\u679c\u60a8\u9700\u8981\u7b49\u5f85\u76f4\u5230\u7ed9\u5b9a\u4efb\u52a1\u5b8c\u6210\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528ALProxy\u7684wait\u65b9\u6cd5\uff0c\u53c2\u6570\u4e3apost\u65b9\u6cd5\u8fd4\u56de\u7684\u4efb\u52a1id\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a from naoqi import ALProxy motion = ALProxy(\"ALMotion\", \"<IP of your robot>\", 9559) motion.moveInit() id = motion.post.moveTo(0.5, 0, 0) motion.wait(id, 0)","title":"\u5e76\u884c\u4efb\u52a1\u6267\u884c"},{"location":"dance/","text":"Nao\u673a\u5668\u4eba\u8df3\u821e\u5b9e\u4f8b\u8bb2\u89e3 # \u5bfc\u5165\u76f8\u5e94\u7684\u5e93\u548c naoqi \u6846\u67b6 # from naoqi import ALProxy import motion import almath \u8bbe\u7f6e\u673a\u5668\u4ebaIP # #\u6539\u4e3a\u4f60\u81ea\u5df1\u7684IP\u5730\u5740 robotIP=\"192.168.2.115\" \u521d\u59cb\u5316\u4ee3\u7406 # motionProxy = ALProxy(\"ALMotion\", robotIP, 9559) postureProxy = ALProxy(\"ALRobotPosture\", robotIP, 9559) ttsProxy = ALProxy(\"ALTextToSpeech\", robotIP, 9559) audioProxy = ALProxy(\"ALAudioPlayer\", robotIP, 9559) #isAbsolute variable is used wherever functions require a boolean argument isAbsolute = True CARTESIAN CONTROL # space = motion.FRAME_ROBOT axisMask = almath.AXIS_MASK_ALL #isAbsolute variable is used wherever functions require a boolean argument isAbsolute = False \u821e\u8e48\u52a8\u4f5c\u4e00 # \u4e3b\u8981\u7528\u5230\u7684\u51fd\u6570\u65b9\u6cd5\u4e3a ALMotion.angelInterpolation \u65b9\u6cd5\u63a7\u5236\u673a\u5668\u4eba\u8fd0\u52a8\uff1a def move1(): names = [\"RHipRoll\",\"LHipRoll\", \"LKneePitch\" , \"LAnklePitch\", \"LHipPitch\"] angleLists = [[0.2] ,[0.2] ,[1] ,[-0.5],[-0.5]] times = [[1.0] ,[ 1.0] ,[1.0] ,[1.0] , [1.0]] isAbsolute = True motionProxy.angleInterpolation(names, angleLists, times, isAbsolute) names = [\"RShoulderRoll\" ,\"RHand\",\"HeadYaw\",\"LWristYaw\"] angleLists = [[-1.5],[1,0,1,0] ,[1.5] ,[-1.0]] times = [[2.0] ,[0.5,1.0,1.5,2.0],[2.0] ,[1.0] ] isAbsolute = True motionProxy.angleInterpolation(names, angleLists, times, isAbsolute) \u821e\u8e48\u52a8\u4f5c\u4e8c # def move2(): names = [\"RHipRoll\",\"LHipRoll\" ,\"LKneePitch\" ,\"LAnklePitch\" ,\"LHipPitch\"] angleLists = [[0],[0],[0],[0],[0]] times = [[1.0],[ 1.0],[1.0],[1.0],[1.0]] isAbsolute = True motionProxy.angleInterpolation(names, angleLists, times, isAbsolute) motors = [\"RElbowRoll\" ,\"LElbowRoll\",\"LShoulderRoll\" ,\"RShoulderPitch\" ,\"RHand\", \"LHand\", \"HeadYaw\" ] angles = [[0.5],[-0.5] ,[0.8],[-1] ,[1.0] ,[1.0] , [0.7,0.7] ] times = [[0.5],[0.5] ,[0.5],[0.5],[0.5] ,[0.5] , [0.5,1.0] ] motionProxy.angleInterpolation(motors, angles, times,isAbsolute) motors = [\"RElbowRoll\",\"LElbowRoll\",\"RShoulderRoll\" ,\"LShoulderPitch\" ,\"RHand\", \"LHand\", \"HeadYaw\" ] angles = [[-0.5],[0.5] ,[-0.8] ,[1] ,[1.0] ,[1.0] , [-0.7,-0.7] ] times = [[0.5] ,[0.5] ,[0.5] ,[0.5] ,[0.5] ,[0.5] , [0.5,1] ] motionProxy.angleInterpolation(motors, angles, times,isAbsolute) motors = [\"RElbowRoll\",\"LElbowRoll\",\"RShoulderPitch\",\"LShoulderPitch\" ,\"RHand\" ,\"LHand\" , \"HeadYaw\" ] angles = [[0] ,[0] ,[-1] ,[-1] ,[-1.0] ,[-1.0] , [0] ] times = [[0.3],[0.3] ,[0.3] ,[0.3] ,[0.3] ,[0.3] , [0.3]] motionProxy.angleInterpolation(motors, angles, times,isAbsolute) \u821e\u8e48\u52a8\u4f5c\u4e09 # def move3(): Head_motors = [\"HeadPitch\",\"HeadYaw\" ] Head_angles = [[0.5,-0.5,0.5,-0.5,0.5,-0.5,0.5,-0.5,0.5,-0.5] ,[1.0, -1.0] ] Head_times = [[0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0 ] ,[ 2.5, 5.0] ] UpperBody_motors = [\"RElbowRoll\" ,\"LElbowRoll\" ,\"LShoulderPitch\" ,\"RShoulderPitch\" ] UpperBody_angles = [[0.5],[-0.5],[0.8, -0.8, 0.0, -0.8, 0.8] ,[-0.8, 0.8, 0.0, 0.8, -0.8] ] UpperBody_times = [[1.0],[1.0] ,[1.0, 2.0, 3.0, 4.0, 5.0] ,[ 1.0, 2.0, 3.0, 4.0, 5.0] ] LowerBody_motors = [\"LKneePitch\",\"RKneePitch\",\"RAnklePitch\",\"LAnklePitch\" ,\"RHipPitch\",\"LHipPitch\"] LowerBody_angles = [[1,0] ,[1,0] ,[-0.5,0] ,[-0.5,0] ,[-0.5,0] ,[-0.5,0]] LowerBody_times = [[3,5] ,[3,5] ,[3,5] ,[3,5] ,[3,5] ,[3,5] ] #The motornames_names list has the various MOTOR_NAMES which are used #The angles list has the respective MOTOR_ANGLES which are used #The times list has the recpejtwctive TIMEs at which #the motor holds a particular angle value motor_names = Head_motors + UpperBody_motors + LowerBody_motors times = Head_times + UpperBody_times + LowerBody_times angles = Head_angles + UpperBody_angles + LowerBody_angles isAbsolute = True motionProxy.angleInterpolation(motor_names, angles, times, isAbsolute) names = [\"RHand\",\"RShoulderPitch\"] angleLists = [[1.0],[-1.0]] times = [[0.5],[0.5]] motionProxy.angleInterpolation(names, angleLists, times, isAbsolute) #SET NAO TO INITIAL POSE postureProxy.goToPosture(\"StandInit\", 0.5) \u821e\u8e48\u52a8\u4f5c\u56db # def move4(): #LOWER THE TORSO AND MOVE FROM SIDE TO SIDE effector = \"Torso\" path = [0.0, -0.07, -0.03, 0.0, 0.0, 0.0] time = 1.5 motionProxy.positionInterpolation(effector, space, path,axisMask , time, isAbsolute) effector = \"Torso\" path = [0.0, 0.07, 0.03, 0.0, 0.0, 0.0] time = 1.5 motionProxy.positionInterpolation(effector, space, path,axisMask , time, isAbsolute) effector = \"Torso\" path = [0.0, 0.07, -0.03, 0.0, 0.0, 0.0] time = 1.5 motionProxy.positionInterpolation(effector, space, path,axisMask , time, isAbsolute) \u821e\u8e48\u52a8\u4f5c\u4e94 # def move5(): Head_motors = [\"HeadPitch\" ,\"HeadYaw\" ] Head_angles = [[0.5 ] ,[1.0, -1.0] ] Head_times = [[0.5 ] ,[ 2.5, 5.0] ] UpperBody_motors = [\"RElbowRoll\" ,\"LElbowRoll\" ,\"LShoulderPitch\" ,\"RShoulderPitch\"] UpperBody_angles = [[0.5] ,[-0.5] ,[0.8, 0.8, 0.8, 0.8, 0] ,[-0.8, -0.8, -0.8, -0.8, 0 ] ] UpperBody_times = [[1.0] ,[1.0] ,[1.0, 2.0, 3.0, 4.0, 5.0] ,[ 1.0, 2.0, 3.0, 4.0, 5.0] ] #The motornames_names list has the various MOTOR_NAMES which are used #The angles list has the respective MOTOR_ANGLES which are used #The times list has the recpective TIMEs at which #the motor holds a particular angle value motor_names = UpperBody_motors + Head_motors times = UpperBody_times + Head_times angles = UpperBody_angles + Head_angles isAbsolute = True motionProxy.angleInterpolation(motor_names, angles, times, isAbsolute) \u4e3b\u51fd\u6570 # \u4e3b\u51fd\u6570\u4e2d\u5b8c\u6210\u6574\u4e2a\u8df3\u821e\u7684\u903b\u8f91, \u9700\u8981\u5c06 audioProxy.post.playFile(\"/home/nao/Ficher.wav\") \u4e2d\u7684\u97f3\u9891\u6587\u4ef6\u5730\u5740\u66ff\u6362\u4e3a\u81ea\u5df1\u7684\u6587\u4ef6\u5730\u5740\u3002\u8fdc\u7a0b\u4f20\u8f93\u6587\u4ef6\u53ef\u4f7f\u7528scp\u4f20\u8f93\u3002 def main(robotIP): #ROBOT SPEAKS OUT MESSAGE ttsProxy.say(\"I LIKE TO DANCE!\") #WE SET THE MOTOR STIFFNESS TO 1 AND BRING NAO #TO INITIAL POSTURE BEFORE START OF DANCE #PLAY THE MUSIC motionProxy.setStiffnesses(\"Body\", 1.0) postureProxy.goToPosture(\"StandZero\", 0.5) audioProxy.post.playFile(\"/home/nao/Ficher.wav\") #ALL THE DANCE MOVE FUNCTIONS ARE CALLED ONE BY ONE move1() move2() move3() move4() move5() #STOP THE SONG audioProxy.stopAll() #SET NAO TO INITIAL POSE postureProxy.goToPosture(\"StandInit\", 0.5) #ROBOT SPEAKS OUT MESSAGE ttsProxy.say(\"THANK YOU!\") #WE SET THE MOTOR STIFFNESS TO 0 AT THE END OF DANCE motionProxy.setStiffnesses(\"Body\", 0.0)","title":"\u673a\u5668\u4eba\u8df3\u821e\u5b9e\u4f8b\u89e3\u6790"},{"location":"dance/#nao","text":"","title":"Nao\u673a\u5668\u4eba\u8df3\u821e\u5b9e\u4f8b\u8bb2\u89e3"},{"location":"dance/#naoqi","text":"from naoqi import ALProxy import motion import almath","title":"\u5bfc\u5165\u76f8\u5e94\u7684\u5e93\u548cnaoqi\u6846\u67b6"},{"location":"dance/#ip","text":"#\u6539\u4e3a\u4f60\u81ea\u5df1\u7684IP\u5730\u5740 robotIP=\"192.168.2.115\"","title":"\u8bbe\u7f6e\u673a\u5668\u4ebaIP"},{"location":"dance/#_1","text":"motionProxy = ALProxy(\"ALMotion\", robotIP, 9559) postureProxy = ALProxy(\"ALRobotPosture\", robotIP, 9559) ttsProxy = ALProxy(\"ALTextToSpeech\", robotIP, 9559) audioProxy = ALProxy(\"ALAudioPlayer\", robotIP, 9559) #isAbsolute variable is used wherever functions require a boolean argument isAbsolute = True","title":"\u521d\u59cb\u5316\u4ee3\u7406"},{"location":"dance/#cartesian-control","text":"space = motion.FRAME_ROBOT axisMask = almath.AXIS_MASK_ALL #isAbsolute variable is used wherever functions require a boolean argument isAbsolute = False","title":"CARTESIAN CONTROL"},{"location":"dance/#_2","text":"\u4e3b\u8981\u7528\u5230\u7684\u51fd\u6570\u65b9\u6cd5\u4e3a ALMotion.angelInterpolation \u65b9\u6cd5\u63a7\u5236\u673a\u5668\u4eba\u8fd0\u52a8\uff1a def move1(): names = [\"RHipRoll\",\"LHipRoll\", \"LKneePitch\" , \"LAnklePitch\", \"LHipPitch\"] angleLists = [[0.2] ,[0.2] ,[1] ,[-0.5],[-0.5]] times = [[1.0] ,[ 1.0] ,[1.0] ,[1.0] , [1.0]] isAbsolute = True motionProxy.angleInterpolation(names, angleLists, times, isAbsolute) names = [\"RShoulderRoll\" ,\"RHand\",\"HeadYaw\",\"LWristYaw\"] angleLists = [[-1.5],[1,0,1,0] ,[1.5] ,[-1.0]] times = [[2.0] ,[0.5,1.0,1.5,2.0],[2.0] ,[1.0] ] isAbsolute = True motionProxy.angleInterpolation(names, angleLists, times, isAbsolute)","title":"\u821e\u8e48\u52a8\u4f5c\u4e00"},{"location":"dance/#_3","text":"def move2(): names = [\"RHipRoll\",\"LHipRoll\" ,\"LKneePitch\" ,\"LAnklePitch\" ,\"LHipPitch\"] angleLists = [[0],[0],[0],[0],[0]] times = [[1.0],[ 1.0],[1.0],[1.0],[1.0]] isAbsolute = True motionProxy.angleInterpolation(names, angleLists, times, isAbsolute) motors = [\"RElbowRoll\" ,\"LElbowRoll\",\"LShoulderRoll\" ,\"RShoulderPitch\" ,\"RHand\", \"LHand\", \"HeadYaw\" ] angles = [[0.5],[-0.5] ,[0.8],[-1] ,[1.0] ,[1.0] , [0.7,0.7] ] times = [[0.5],[0.5] ,[0.5],[0.5],[0.5] ,[0.5] , [0.5,1.0] ] motionProxy.angleInterpolation(motors, angles, times,isAbsolute) motors = [\"RElbowRoll\",\"LElbowRoll\",\"RShoulderRoll\" ,\"LShoulderPitch\" ,\"RHand\", \"LHand\", \"HeadYaw\" ] angles = [[-0.5],[0.5] ,[-0.8] ,[1] ,[1.0] ,[1.0] , [-0.7,-0.7] ] times = [[0.5] ,[0.5] ,[0.5] ,[0.5] ,[0.5] ,[0.5] , [0.5,1] ] motionProxy.angleInterpolation(motors, angles, times,isAbsolute) motors = [\"RElbowRoll\",\"LElbowRoll\",\"RShoulderPitch\",\"LShoulderPitch\" ,\"RHand\" ,\"LHand\" , \"HeadYaw\" ] angles = [[0] ,[0] ,[-1] ,[-1] ,[-1.0] ,[-1.0] , [0] ] times = [[0.3],[0.3] ,[0.3] ,[0.3] ,[0.3] ,[0.3] , [0.3]] motionProxy.angleInterpolation(motors, angles, times,isAbsolute)","title":"\u821e\u8e48\u52a8\u4f5c\u4e8c"},{"location":"dance/#_4","text":"def move3(): Head_motors = [\"HeadPitch\",\"HeadYaw\" ] Head_angles = [[0.5,-0.5,0.5,-0.5,0.5,-0.5,0.5,-0.5,0.5,-0.5] ,[1.0, -1.0] ] Head_times = [[0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0 ] ,[ 2.5, 5.0] ] UpperBody_motors = [\"RElbowRoll\" ,\"LElbowRoll\" ,\"LShoulderPitch\" ,\"RShoulderPitch\" ] UpperBody_angles = [[0.5],[-0.5],[0.8, -0.8, 0.0, -0.8, 0.8] ,[-0.8, 0.8, 0.0, 0.8, -0.8] ] UpperBody_times = [[1.0],[1.0] ,[1.0, 2.0, 3.0, 4.0, 5.0] ,[ 1.0, 2.0, 3.0, 4.0, 5.0] ] LowerBody_motors = [\"LKneePitch\",\"RKneePitch\",\"RAnklePitch\",\"LAnklePitch\" ,\"RHipPitch\",\"LHipPitch\"] LowerBody_angles = [[1,0] ,[1,0] ,[-0.5,0] ,[-0.5,0] ,[-0.5,0] ,[-0.5,0]] LowerBody_times = [[3,5] ,[3,5] ,[3,5] ,[3,5] ,[3,5] ,[3,5] ] #The motornames_names list has the various MOTOR_NAMES which are used #The angles list has the respective MOTOR_ANGLES which are used #The times list has the recpejtwctive TIMEs at which #the motor holds a particular angle value motor_names = Head_motors + UpperBody_motors + LowerBody_motors times = Head_times + UpperBody_times + LowerBody_times angles = Head_angles + UpperBody_angles + LowerBody_angles isAbsolute = True motionProxy.angleInterpolation(motor_names, angles, times, isAbsolute) names = [\"RHand\",\"RShoulderPitch\"] angleLists = [[1.0],[-1.0]] times = [[0.5],[0.5]] motionProxy.angleInterpolation(names, angleLists, times, isAbsolute) #SET NAO TO INITIAL POSE postureProxy.goToPosture(\"StandInit\", 0.5)","title":"\u821e\u8e48\u52a8\u4f5c\u4e09"},{"location":"dance/#_5","text":"def move4(): #LOWER THE TORSO AND MOVE FROM SIDE TO SIDE effector = \"Torso\" path = [0.0, -0.07, -0.03, 0.0, 0.0, 0.0] time = 1.5 motionProxy.positionInterpolation(effector, space, path,axisMask , time, isAbsolute) effector = \"Torso\" path = [0.0, 0.07, 0.03, 0.0, 0.0, 0.0] time = 1.5 motionProxy.positionInterpolation(effector, space, path,axisMask , time, isAbsolute) effector = \"Torso\" path = [0.0, 0.07, -0.03, 0.0, 0.0, 0.0] time = 1.5 motionProxy.positionInterpolation(effector, space, path,axisMask , time, isAbsolute)","title":"\u821e\u8e48\u52a8\u4f5c\u56db"},{"location":"dance/#_6","text":"def move5(): Head_motors = [\"HeadPitch\" ,\"HeadYaw\" ] Head_angles = [[0.5 ] ,[1.0, -1.0] ] Head_times = [[0.5 ] ,[ 2.5, 5.0] ] UpperBody_motors = [\"RElbowRoll\" ,\"LElbowRoll\" ,\"LShoulderPitch\" ,\"RShoulderPitch\"] UpperBody_angles = [[0.5] ,[-0.5] ,[0.8, 0.8, 0.8, 0.8, 0] ,[-0.8, -0.8, -0.8, -0.8, 0 ] ] UpperBody_times = [[1.0] ,[1.0] ,[1.0, 2.0, 3.0, 4.0, 5.0] ,[ 1.0, 2.0, 3.0, 4.0, 5.0] ] #The motornames_names list has the various MOTOR_NAMES which are used #The angles list has the respective MOTOR_ANGLES which are used #The times list has the recpective TIMEs at which #the motor holds a particular angle value motor_names = UpperBody_motors + Head_motors times = UpperBody_times + Head_times angles = UpperBody_angles + Head_angles isAbsolute = True motionProxy.angleInterpolation(motor_names, angles, times, isAbsolute)","title":"\u821e\u8e48\u52a8\u4f5c\u4e94"},{"location":"dance/#_7","text":"\u4e3b\u51fd\u6570\u4e2d\u5b8c\u6210\u6574\u4e2a\u8df3\u821e\u7684\u903b\u8f91, \u9700\u8981\u5c06 audioProxy.post.playFile(\"/home/nao/Ficher.wav\") \u4e2d\u7684\u97f3\u9891\u6587\u4ef6\u5730\u5740\u66ff\u6362\u4e3a\u81ea\u5df1\u7684\u6587\u4ef6\u5730\u5740\u3002\u8fdc\u7a0b\u4f20\u8f93\u6587\u4ef6\u53ef\u4f7f\u7528scp\u4f20\u8f93\u3002 def main(robotIP): #ROBOT SPEAKS OUT MESSAGE ttsProxy.say(\"I LIKE TO DANCE!\") #WE SET THE MOTOR STIFFNESS TO 1 AND BRING NAO #TO INITIAL POSTURE BEFORE START OF DANCE #PLAY THE MUSIC motionProxy.setStiffnesses(\"Body\", 1.0) postureProxy.goToPosture(\"StandZero\", 0.5) audioProxy.post.playFile(\"/home/nao/Ficher.wav\") #ALL THE DANCE MOVE FUNCTIONS ARE CALLED ONE BY ONE move1() move2() move3() move4() move5() #STOP THE SONG audioProxy.stopAll() #SET NAO TO INITIAL POSE postureProxy.goToPosture(\"StandInit\", 0.5) #ROBOT SPEAKS OUT MESSAGE ttsProxy.say(\"THANK YOU!\") #WE SET THE MOTOR STIFFNESS TO 0 AT THE END OF DANCE motionProxy.setStiffnesses(\"Body\", 0.0)","title":"\u4e3b\u51fd\u6570"},{"location":"emotion/","text":"\u673a\u5668\u4eba\u60c5\u7eea\u611f\u77e5 # ALMood\u6a21\u5757 # ALMood \u6a21\u5757\u80fd\u591f\u9884\u6d4b\u673a\u5668\u524d\u65b9\u884c\u4eba\u7684\u8868\u60c5\u3001\u5bf9\u673a\u5668\u4eba\u7684\u884c\u4e3a\u76ee\u7684\u548c\u673a\u5668\u4eba\u5468\u56f4\u73af\u5883\u6c1b\u56f4\u3002 \u4f7f\u7528\u8fd9\u9879\u670d\u52a1\uff0c\u4f60\u53ef\u4ee5\u67e5\u8be2\u4ee5\u4e0b\u60c5\u7eea\u611f\u77e5\u7684\u57fa\u672c\u8868\u73b0\u5f62\u5f0f\uff0c\u83b7\u5f97\u4e00\u7ec4\u5982\u79ef\u6781\u3001\u6d88\u6781\u3001\u8c28\u614e\u7b49\u60c5\u7eea\u7684\u63cf\u8ff0\u7b26 \u8fde\u63a5\u5230 ALMood \u6a21\u5757\u7684\u4fe1\u53f7\u548c\u5c5e\u6027\uff0c\u83b7\u77e5\u673a\u5668\u4eba\u524d\u9762\u7684\u4eba\u662f\u79ef\u6781\u7684\u3001\u6d88\u6781\u7684\u8fd8\u662f\u4e2d\u7acb\u7684\uff0c\u7528\u6237\u5bf9\u673a\u5668\u4eba\u662f\u4e0d\u6295\u5165\u7684\uff0c\u534a\u6295\u5165\u7684\u8fd8\u662f\u5b8c\u5168\u6295\u5165\u7684\uff0c\u5468\u56f4\u7684\u73af\u5883\u662f\u5e73\u9759\u7684\u8fd8\u662f\u5174\u594b\u7684\u3002 ALMood.currentPersonState() # \u8be5\u51fd\u6570\u5f97\u5230\u4e00\u4e2a\u63cf\u8ff0\u5f53\u524d\u7528\u6237\u7684\u60c5\u7eea\u72b6\u6001\u7684\u7ed3\u6784\u4f53 PersonState Returns: \u4e00\u4e2a\u8be6\u7ec6\u63cf\u8ff0\u4e00\u4e2a\u4eba\u7684\u60c5\u7eea\u7684\u7ed3\u6784\u4f53 from naoqi import ALProxy mood = ALProxy(\"ALMood\", \"<IP of your robot>\", 9559) mood.currentPersonState() PersonState \u7ed3\u6784\u4f53\u7684\u7ec4\u6210\u5982\u4e0b\u3002\u5176\u4e2d valence \u7684\u503c\u57df\u662f-1\uff08\u6d88\u6781\uff09~1\uff08\u79ef\u6781\uff09\uff0c\u5176\u4f59\u7684\u503c\u7684\u503c\u57df\u662f0~1 PersonData = { \"valence\" : { value, confidence }, \"attention\" : { value, confidence }, \"bodyLanguageState\" : { \"ease\" : { level, confidence } }, \"smile\" : { value, confidence }, \"expressions\" : { \"calm\" : { value, confidence }, \"anger\" : { value, confidence }, \"joy\" : { value, confidence }, \"sorrow\" : { value, confidence }, \"laughter\" : { value, confidence }, \"excitement\" : { value, confidence }, \"surprise\" : { value, confidence } } } ALMood.currentPersonStateFromPeoplePerception(ID) # \u8be5\u51fd\u6570\u5f97\u5230\u67d0\u4e2aID\u7684\u7528\u6237\u7684\u60c5\u7eea\u72b6\u6001 Parameters: ALUserSession \u7684\u8fa8\u8bc6\u7b26\uff0c\u5177\u4f53\u53c2\u8003 ALUserSession -API Returns: \u4e00\u4e2a\u8be6\u7ec6\u63cf\u8ff0\u4e00\u4e2a\u4eba\u7684\u60c5\u7eea\u7684\u7ed3\u6784\u4f53,\u540c\u4e0a ALMood.persons() # \u8be5\u51fd\u6570\u5f97\u5230\u4e00\u4e2a\u5217\u8868\uff0c\u5305\u542b\u5728\u6a21\u5757\u5185\u5b58\u4e2d\u7684\u6240\u6709\u7528\u6237 Returns: \u4e00\u4e2a Person \u7ed3\u6784\u4f53\u5305\u542bALMood\u68c0\u6d4b\u5230\u7684\u7528\u6237\u7684ID\u53ca\u5176\u60c5\u7eea\u72b6\u6001 Person \u7ed3\u6784\u4f53\u5982\u4e0b\uff1a Person = { \"userSessionID\" : usid, \"personState\" : { ... *See above* ... } } ALMood.ambianceState() # \u8be5\u51fd\u6570\u5f97\u5230\u4e00\u4e2a\u8868\u793a\u5468\u56f4\u73af\u5883\u72b6\u6001\u7684\u7ed3\u6784\u4f53 AmbianceState Returns: \u4e00\u4e2a\u63cf\u8ff0\u73af\u5883\u72b6\u6001\u7684\u7ed3\u6784\u4f53 AmbianceState AmbianceState \u7ed3\u6784\u4f53\u5982\u4e0b\uff0c\u503c\u57df\u4e3a0~1 AmbianceData = { \"agitationLevel\" : value, \"calmLevel\" : value } ALMood.getEmotionalReaction() # \u83b7\u53d6\u7528\u6237\u7684\u60c5\u611f\u53cd\u5e94\u3002\u8be5\u51fd\u6570\u5bfb\u627e\u7528\u6237\u7684\u9996\u6b21\u60c5\u611f\u53cd\u5e94\uff0c\u5f53\u51fa\u73b0\u4ee5\u4e0b\u4efb\u4e00\u60c5\u51b5\u65f6\u8fd4\u56de\uff1a \uff081\uff09\u627e\u5230\u4e00\u4e2a\u79ef\u6781\u6216\u8005\u6d88\u6781\u7684\u60c5\u7eea\u53cd\u5e94 \uff082\uff09\u8d85\u51fa\u8bbe\u5b9a\u65f6\u95f4 Returns: \u68c0\u6d4b\u5230\u7684\u60c5\u7eea\u53cd\u5e94","title":"\u673a\u5668\u4eba\u60c5\u7eea\u611f\u77e5"},{"location":"emotion/#_1","text":"","title":"\u673a\u5668\u4eba\u60c5\u7eea\u611f\u77e5"},{"location":"emotion/#almood","text":"ALMood \u6a21\u5757\u80fd\u591f\u9884\u6d4b\u673a\u5668\u524d\u65b9\u884c\u4eba\u7684\u8868\u60c5\u3001\u5bf9\u673a\u5668\u4eba\u7684\u884c\u4e3a\u76ee\u7684\u548c\u673a\u5668\u4eba\u5468\u56f4\u73af\u5883\u6c1b\u56f4\u3002 \u4f7f\u7528\u8fd9\u9879\u670d\u52a1\uff0c\u4f60\u53ef\u4ee5\u67e5\u8be2\u4ee5\u4e0b\u60c5\u7eea\u611f\u77e5\u7684\u57fa\u672c\u8868\u73b0\u5f62\u5f0f\uff0c\u83b7\u5f97\u4e00\u7ec4\u5982\u79ef\u6781\u3001\u6d88\u6781\u3001\u8c28\u614e\u7b49\u60c5\u7eea\u7684\u63cf\u8ff0\u7b26 \u8fde\u63a5\u5230 ALMood \u6a21\u5757\u7684\u4fe1\u53f7\u548c\u5c5e\u6027\uff0c\u83b7\u77e5\u673a\u5668\u4eba\u524d\u9762\u7684\u4eba\u662f\u79ef\u6781\u7684\u3001\u6d88\u6781\u7684\u8fd8\u662f\u4e2d\u7acb\u7684\uff0c\u7528\u6237\u5bf9\u673a\u5668\u4eba\u662f\u4e0d\u6295\u5165\u7684\uff0c\u534a\u6295\u5165\u7684\u8fd8\u662f\u5b8c\u5168\u6295\u5165\u7684\uff0c\u5468\u56f4\u7684\u73af\u5883\u662f\u5e73\u9759\u7684\u8fd8\u662f\u5174\u594b\u7684\u3002","title":"ALMood\u6a21\u5757"},{"location":"emotion/#almoodcurrentpersonstate","text":"\u8be5\u51fd\u6570\u5f97\u5230\u4e00\u4e2a\u63cf\u8ff0\u5f53\u524d\u7528\u6237\u7684\u60c5\u7eea\u72b6\u6001\u7684\u7ed3\u6784\u4f53 PersonState Returns: \u4e00\u4e2a\u8be6\u7ec6\u63cf\u8ff0\u4e00\u4e2a\u4eba\u7684\u60c5\u7eea\u7684\u7ed3\u6784\u4f53 from naoqi import ALProxy mood = ALProxy(\"ALMood\", \"<IP of your robot>\", 9559) mood.currentPersonState() PersonState \u7ed3\u6784\u4f53\u7684\u7ec4\u6210\u5982\u4e0b\u3002\u5176\u4e2d valence \u7684\u503c\u57df\u662f-1\uff08\u6d88\u6781\uff09~1\uff08\u79ef\u6781\uff09\uff0c\u5176\u4f59\u7684\u503c\u7684\u503c\u57df\u662f0~1 PersonData = { \"valence\" : { value, confidence }, \"attention\" : { value, confidence }, \"bodyLanguageState\" : { \"ease\" : { level, confidence } }, \"smile\" : { value, confidence }, \"expressions\" : { \"calm\" : { value, confidence }, \"anger\" : { value, confidence }, \"joy\" : { value, confidence }, \"sorrow\" : { value, confidence }, \"laughter\" : { value, confidence }, \"excitement\" : { value, confidence }, \"surprise\" : { value, confidence } } }","title":"ALMood.currentPersonState()"},{"location":"emotion/#almoodcurrentpersonstatefrompeopleperceptionid","text":"\u8be5\u51fd\u6570\u5f97\u5230\u67d0\u4e2aID\u7684\u7528\u6237\u7684\u60c5\u7eea\u72b6\u6001 Parameters: ALUserSession \u7684\u8fa8\u8bc6\u7b26\uff0c\u5177\u4f53\u53c2\u8003 ALUserSession -API Returns: \u4e00\u4e2a\u8be6\u7ec6\u63cf\u8ff0\u4e00\u4e2a\u4eba\u7684\u60c5\u7eea\u7684\u7ed3\u6784\u4f53,\u540c\u4e0a","title":"ALMood.currentPersonStateFromPeoplePerception(ID)"},{"location":"emotion/#almoodpersons","text":"\u8be5\u51fd\u6570\u5f97\u5230\u4e00\u4e2a\u5217\u8868\uff0c\u5305\u542b\u5728\u6a21\u5757\u5185\u5b58\u4e2d\u7684\u6240\u6709\u7528\u6237 Returns: \u4e00\u4e2a Person \u7ed3\u6784\u4f53\u5305\u542bALMood\u68c0\u6d4b\u5230\u7684\u7528\u6237\u7684ID\u53ca\u5176\u60c5\u7eea\u72b6\u6001 Person \u7ed3\u6784\u4f53\u5982\u4e0b\uff1a Person = { \"userSessionID\" : usid, \"personState\" : { ... *See above* ... } }","title":"ALMood.persons()"},{"location":"emotion/#almoodambiancestate","text":"\u8be5\u51fd\u6570\u5f97\u5230\u4e00\u4e2a\u8868\u793a\u5468\u56f4\u73af\u5883\u72b6\u6001\u7684\u7ed3\u6784\u4f53 AmbianceState Returns: \u4e00\u4e2a\u63cf\u8ff0\u73af\u5883\u72b6\u6001\u7684\u7ed3\u6784\u4f53 AmbianceState AmbianceState \u7ed3\u6784\u4f53\u5982\u4e0b\uff0c\u503c\u57df\u4e3a0~1 AmbianceData = { \"agitationLevel\" : value, \"calmLevel\" : value }","title":"ALMood.ambianceState()"},{"location":"emotion/#almoodgetemotionalreaction","text":"\u83b7\u53d6\u7528\u6237\u7684\u60c5\u611f\u53cd\u5e94\u3002\u8be5\u51fd\u6570\u5bfb\u627e\u7528\u6237\u7684\u9996\u6b21\u60c5\u611f\u53cd\u5e94\uff0c\u5f53\u51fa\u73b0\u4ee5\u4e0b\u4efb\u4e00\u60c5\u51b5\u65f6\u8fd4\u56de\uff1a \uff081\uff09\u627e\u5230\u4e00\u4e2a\u79ef\u6781\u6216\u8005\u6d88\u6781\u7684\u60c5\u7eea\u53cd\u5e94 \uff082\uff09\u8d85\u51fa\u8bbe\u5b9a\u65f6\u95f4 Returns: \u68c0\u6d4b\u5230\u7684\u60c5\u7eea\u53cd\u5e94","title":"ALMood.getEmotionalReaction()"},{"location":"kick_ball/","text":"Nao\u673a\u5668\u4eba\u8e22\u7403\u5b9e\u4f8b\u8bb2\u89e3 # \u8be5\u5b9e\u4f8b\u5305\u542bcolor_threshold.py\u548ckick_ball\u4e24\u4e2a\u6587\u4ef6,\u5176\u4e2dcolor_threshold.py\u7528\u4e8e\u627e\u5230\u5408\u9002\u7684\u9608\u503c\u8fdb\u884c\u56fe\u50cf\u7684\u4e8c\u503c\u5316\uff0ckick_ball.py\u6587\u4ef6\u662f\u8e22\u7403\u7684\u4e3b\u7a0b\u5e8f\u3002 color_threshold.py # \u5728filename\u53d8\u91cf\u4e2d\u586b\u5165\u56fe\u50cf\u6587\u4ef6\u6240\u5728\u7684\u4f4d\u7f6e\u3002 #!/usr/bin/env python import cv2 import numpy as np def callback(object): pass def Choose_Color(): filename = 'Your file location' image0 = cv2.imread(filename,1) img = cv2.cvtColor(image0, cv2.COLOR_BGR2HSV) img = cv2.resize(img,(int(img.shape[1] / 2),int(img.shape[0] / 2))) cv2.imshow(\"image\",img) cv2.createTrackbar(\"H_min\",\"image\",50,255,callback) cv2.createTrackbar(\"H_max\",\"image\",150,255,callback) cv2.createTrackbar(\"S_min\",\"image\",0,255,callback) cv2.createTrackbar(\"S_max\",\"image\",255,255,callback) cv2.createTrackbar(\"V_min\",\"image\",0,255,callback) cv2.createTrackbar(\"V_max\",\"image\",255,255,callback) while(True): H_min = cv2.getTrackbarPos(\"H_min\",\"image\",) S_min = cv2.getTrackbarPos(\"S_min\",\"image\",) V_min = cv2.getTrackbarPos(\"V_min\",\"image\",) H_max = cv2.getTrackbarPos(\"H_max\",\"image\",) S_max = cv2.getTrackbarPos(\"S_max\",\"image\",) V_max = cv2.getTrackbarPos(\"V_max\",\"image\",) lower_hsv = np.array([H_min, S_min, V_min]) upper_hsv = np.array([H_max, S_max, V_max]) mask = cv2.inRange(img,lower_hsv,upper_hsv) cv2.imshow(\"mask\", mask) if cv2.waitKey(1) & 0XFF == 27: break Choose_Color() \u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u51fa\u73b0\u4ea4\u4e92\u754c\u9762\uff0c\u62d6\u52a8HSV\u6ed1\u52a8\u6761\uff0c\u4f7f\u7403\u7684\u4e8c\u503c\u5316\u6548\u679c\u8fbe\u5230\u6700\u4f73\uff0c\u8bb0\u5f55\u4e0bH,S,V\u7684\u6570\u503c\u5927\u5c0f\u3002 kick_ball.py # \u5bfc\u5165\u5e93 # from naoqi import ALProxy from PIL import Image import vision_definitions import numpy as np import motion import cv2 import math import time \u8bbe\u7f6e\u673a\u5668\u4ebaIP # # \u6539\u4e3a\u4f60\u81ea\u5df1\u7684\u673a\u5668\u4eba\u7684IP\u5730\u5740 robotIP=\"192.168.2.115\" PORT = 9559 \u521d\u59cb\u5316\u4ee3\u7406 # motionProxy = ALProxy(\"ALMotion\", robotIP, PORT) posture = ALProxy(\"ALRobotPosture\",robotIP, PORT) camProxy = ALProxy(\"ALVideoDevice\", robotIP, PORT) speech = ALProxy(\"ALTextToSpeech\",robotIP, PORT) \u521d\u59cb\u5316\u673a\u5668\u4eba\u59ff\u6001 # def Init(): posture.goToPosture('Stand',0.5) setHeadAngle(0, 0.25) motionProxy.setStiffnesses(\"Head\", 0.0) \u83b7\u53d6\u56fe\u50cf # def getImage(cameraID): if (cameraID == 0): # Top Camera camProxy.setCameraParameter(\"test\", 18, 0) elif (cameraID == 1): # Bottom Camera camProxy.setCameraParameter(\"test\", 18, 1) resolution = vision_definitions.kVGA # resolution colorSpace = vision_definitions.kRGBColorSpace # fps = 15 nameId = camProxy.subscribe(\"test\", resolution, colorSpace, fps) # naoImage = camProxy.getImageRemote(nameId) imageWidth = naoImage[0] imageHeight = naoImage[1] array = naoImage[6] # binary array of size height * width * nblayers containing image data. im = Image.frombytes(\"RGB\", (imageWidth, imageHeight), array) im.save(\"raw_Image.png\", \"PNG\") camProxy.unsubscribe(nameId) \u56fe\u50cf\u4e8c\u503c\u5316 # def Binarization(image, pattern): # Setting the pattern lower = [] upper = [] if (pattern == \"red\"): lower = np.array([0, 129, 16]) #H_min,S_min,V_min upper = np.array([21, 255, 255]) #H_max,S_max,V_max elif (pattern == \"yellow\"): lower = np.array([20, 100, 100]) #H_min,S_min,V_min upper = np.array([34, 255, 255]) #H_max,S_max,V_max elif (pattern == \"blue\"): lower = np.array([110, 70, 70]) #H_min,S_min,V_min upper = np.array([124, 255, 255]) #H_max,S_max,V_max # BGR to HSV hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV) # Binarization mask = cv2.inRange(hsv, lower, upper) # Opened the image kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (5, 5)) opened = cv2.morphologyEx(mask, cv2.MORPH_OPEN, kernel) cv2.imshow(\"Binarization\", opened) return opened \u904d\u5386\u56fe\u50cf\uff0c\u5bfb\u627e\u662f\u5426\u6709\u7403 # \u82e5\u6709\uff0c\u5219\u8fd4\u56deflag\u4e3atrue\uff0c(x,y)\u662f\u76ee\u6807\u70b9\u7684\u5750\u6807\uff1b\u5426\u5219\u8fd4\u56defalse,(0,0)\u3002 def search(cameraID): getImage(cameraID) img = cv2.imread(\"raw-Image.png\") bina = Binarization(img, \"red\") # color x, y = calcTheLocate(bina) if (x == 0 and y == 0): flag = False else: flag = True return flag, x, y \u5bfb\u627e\u56fe\u50cf\u4e2d\u7403\u7684\u4e2d\u5fc3\u70b9 # def calcTheLocate(img): col = np.ones(640) row = np.ones(480) colsum = [] rowsum = [] x = 0 xw = 0 # w:west xe = 0 # e:est y = 0 yn = 0 #n:north ys = 0 #s:south for i in range(0, 480): product = np.dot(col, img[i][:]) colsum.append(product) for i in range(0, 480): if (colsum[i] == max(colsum)): y = i val = max(colsum) / 255 yn = int(i - val) ys = int(i + val) break for i in range(0, 640): product = np.dot(row, img[:, i]) rowsum.append(product) for i in range(0, 640): if (rowsum[i] == max(rowsum)): x = i val = max(colsum) / 255 xw = int(val - i) xe = int(val + i) break print(\"locate x: \", x, xw, xe, \"........ locate y :\", y, yn, ys) cv2.circle(img, (x, y), 5, (55, 255, 155), -1) cv2.circle(img, (xw, y), 5, (55, 255, 155), -1) cv2.circle(img, (xe, y), 5, (55, 255, 155), -1) cv2.circle(img, (x, yn), 5, (55, 255, 155), -1) cv2.circle(img, (x, ys), 5, (55, 255, 155), -1) cv2.putText(img, \"center\", (x - 20, y - 20), cv2.FONT_HERSHEY_SIMPLEX, 0.75, (55, 255, 155), 2) cv2.imshow(\"two\", img) cv2.imwrite(\"binalizeImage.png\", img) # cv2.waitKey(0) return x, y \u8ba1\u7b97\u7403\u548c\u673a\u5668\u4eba\u7684\u5b9e\u9645\u8ddd\u79bb # \u8be5\u5b9e\u4f8b\u7528\u7684\u662f\u5e95\u7aef\u7684\u6444\u50cf\u5934\uff0c\u82e5\u4f7f\u7528\u9876\u7aef\u7684\u6444\u50cf\u5934\uff0c\u9700\u8981\u91cd\u65b0\u6d4b\u8bd5\u6821\u51c6D_min\u548cD_max\u7684\u503c\u3002 def getDistance(x, y): img_height = 480 img_width = 640 H = 477.33 # Height of bottom camera # Calibrate the two parameters for your own case D_min = 50 # mm, minimum distance D_max = 800 # mm, maximum distance beta = 56.3 * math.pi / 180.0 # HFOV alpha = math.atan(D_min / H) theta = math.atan(D_max / H) - alpha diff_theta = (img_height - y) * theta / img_height x_real = H * math.tan(alpha + diff_theta) /1000 y_unit = (x_real * 1000 + D_min) * math.tan(beta / 2) y_real = -2 * y_unit * (x - img_width / 2) / img_width / 1000 turn = math.atan(y_real / x_real) return x_real, y_real, turn \u673a\u5668\u4eba\u8e22\u7403\u52a8\u4f5c # \u672c\u5b9e\u4f8b\u4e2d\uff0c\u673a\u5668\u4eba\u7528\u53f3\u811a\u8e22\u7403\u3002 def kick_ball(): names = list() times = list() keys = list() names.append(\"HeadPitch\") times.append([ 1.16000, 2.68000, 3.20000, 4.24000, 5.12000, 6.12000]) keys.append([ [ 0.04363, [ 3, -0.38667, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ 0.26180, [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.17453, \\ [ 3, -0.17333, 0.06012], [ 3, 0.34667, -0.12023]], [ -0.27925, [ 3, -0.34667, 0.00000], \\ [ 3, 0.29333, 0.00000]], [ -0.26180, [ 3, -0.29333, -0.00575], [ 3, 0.33333, 0.00653]], \\ [ -0.24241, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"HeadYaw\") times.append([ 1.16000, 2.68000, 3.20000, 4.24000, 5.12000, 6.12000]) keys.append([ [ 0.00464, [ 3, -0.38667, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ -0.00149, [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.00311, \\ [ 3, -0.17333, 0.00000], [ 3, 0.34667, 0.00000]], [ -0.04905, [ 3, -0.34667, 0.00000], \\ [ 3, 0.29333, 0.00000]], [ -0.03371, [ 3, -0.29333, -0.00382], [ 3, 0.33333, 0.00434]], \\ [ -0.02459, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"LAnklePitch\") times.append([ 1.04000, 1.76000, 2.56000, 4.12000, 5.00000, 6.00000]) keys.append([ [ 0.03226, [ 3, -0.34667, 0.00000], [ 3, 0.24000, 0.00000]], \\ [ 0.01745, [ 3, -0.24000, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.01745, [ 3, -0.26667, 0.00000], \\ [ 3, 0.52000, 0.00000]], [ 0.03491, [ 3, -0.52000, 0.00000], [ 3, 0.29333, 0.00000]], \\ [ 0.03491, [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.11501, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"LAnkleRoll\") times.append([ 1.04000, 1.76000, 2.56000, 4.12000, 5.00000, 6.00000]) keys.append([ [ 0.33161, [ 3, -0.34667, 0.00000], [ 3, 0.24000, 0.00000]], \\ [ 0.36652, [ 3, -0.24000, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.36652, \\ [ 3, -0.26667, 0.00000], [ 3, 0.52000, 0.00000]], [ 0.36652, [ 3, -0.52000, 0.00000], \\ [ 3, 0.29333, 0.00000]], [ 0.34732, [ 3, -0.29333, 0.01920], [ 3, 0.33333, -0.02182]], \\ [ -0.08433, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"LElbowRoll\") times.append([ 1.08000, 2.60000, 3.12000, 4.16000, 5.04000, 6.04000]) keys.append([ [ -0.74096, [ 3, -0.36000, 0.00000], [ 3, 0.50667, 0.00000]],\\ [ -1.03396, [ 3, -0.50667, 0.15621], [ 3, 0.17333, -0.05344]], [ -1.36990, \\ [ 3, -0.17333, 0.00000], [ 3, 0.34667, 0.00000]], [ -1.02015, [ 3, -0.34667, -0.11965], \\ [ 3, 0.29333, 0.10124]], [ -0.70722, [ 3, -0.29333, -0.10030], [ 3, 0.33333, 0.11398]], \\ [ -0.37732, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"LElbowYaw\") times.append([ 1.08000, 2.60000, 3.12000, 4.16000, 5.04000, 6.04000]) keys.append([ [ -1.15353, [ 3, -0.36000, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ -0.95411, [ 3, -0.50667, -0.06096], [ 3, 0.17333, 0.02085]], [ -0.90809, [ 3, -0.17333, 0.00000], \\ [ 3, 0.34667, 0.00000]], [ -1.23023, [ 3, -0.34667, 0.11716], [ 3, 0.29333, -0.09913]], \\ [ -1.55697, [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ -1.14441, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"LHand\") times.append([ 1.08000, 2.60000, 3.12000, 4.16000, 5.04000, 6.04000]) keys.append([ [ 0.00317, [ 3, -0.36000, 0.00000], [ 3, 0.50667, 0.00000]], [ 0.00328, \\ [ 3, -0.50667, -0.00003], [ 3, 0.17333, 0.00001]], [ 0.00329, [ 3, -0.17333, 0.00000], \\ [ 3, 0.34667, 0.00000]], [ 0.00317, [ 3, -0.34667, 0.00000], [ 3, 0.29333, 0.00000]], \\ [ 0.00325, [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00187, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"LHipPitch\") times.append([ 1.04000, 2.56000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ 0.23159, [ 3, -0.34667, 0.00000], [ 3, 0.50667, 0.00000]], [ 0.10580, \\ [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.12217, [ 3, -0.17333, 0.00000], \\ [ 3, 0.09333, 0.00000]], [ 0.08433, [ 3, -0.09333, 0.00000], [ 3, 0.25333, 0.00000]], \\ [ 0.09046, [ 3, -0.25333, -0.00614], [ 3, 0.29333, 0.00710]], [ 0.19171, [ 3, -0.29333, -0.01627], \\ [ 3, 0.33333, 0.01849]], [ 0.21020, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"LHipRoll\") times.append([ 1.04000, 2.56000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ -0.34366, [ 3, -0.34667, 0.00000], [ 3, 0.50667, 0.00000]], [ -0.36820, \\ [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.36820, [ 3, -0.17333, 0.00000], \\ [ 3, 0.09333, 0.00000]], [ -0.36513, [ 3, -0.09333, 0.00000], [ 3, 0.25333, 0.00000]], \\ [ -0.36667, [ 3, -0.25333, 0.00000], [ 3, 0.29333, 0.00000]], [ -0.36513, [ 3, -0.29333, \\ -0.00153], [ 3, 0.33333, 0.00174]], [ 0.10129, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"LHipYawPitch\") times.append([ 1.04000, 2.56000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ -0.18097, [ 3, -0.34667, 0.00000], [ 3, 0.50667, 0.00000]], [ -0.25307, \\ [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.06285, [ 3, -0.17333, -0.02279], \\ [ 3, 0.09333, 0.01227]], [ -0.05058, [ 3, -0.09333, 0.00000], [ 3, 0.25333, 0.00000]], \\ [ -0.18711, [ 3, -0.25333, 0.02986], [ 3, 0.29333, -0.03457]], [ -0.24386, [ 3, \\ -0.29333, 0.02058], [ 3, 0.33333, -0.02339]], [ -0.31903, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"LKneePitch\") times.append([ 1.04000, 1.76000, 2.56000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ -0.08727, [ 3, -0.34667, 0.00000], [ 3, 0.24000, 0.00000]], [ -0.08727, \\ [ 3, -0.24000, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.09235, [ 3, -0.26667, 0.00000], \\ [ 3, 0.17333, 0.00000]], [ -0.07973, [ 3, -0.17333, 0.00000], [ 3, 0.09333, 0.00000]], \\ [ -0.07973, [ 3, -0.09333, 0.00000], [ 3, 0.25333, 0.00000]], [ -0.07819, \\ [ 3, -0.25333, -0.00047], [ 3, 0.29333, 0.00055]], [ -0.07666, [ 3, -0.29333, 0.00000], \\ [ 3, 0.33333, 0.00000]], [ -0.09208, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"LShoulderPitch\") times.append([ 1.08000, 2.60000, 3.12000, 4.16000, 5.04000, 6.04000]) keys.append([ [ 1.48649, [ 3, -0.36000, 0.00000], [ 3, 0.50667, 0.00000]], [ 1.35917, \\ [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 1.41746, [ 3, -0.17333, -0.02659], \\ [ 3, 0.34667, 0.05318]], [ 1.59847, [ 3, -0.34667, -0.03988], [ 3, 0.29333, 0.03375]], \\ [ 1.63835, [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.50021, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"LShoulderRoll\") times.append([ 1.08000, 2.60000, 3.12000, 4.16000, 5.04000, 6.04000]) keys.append([ [ 0.02305, [ 3, -0.36000, 0.00000], [ 3, 0.50667, 0.00000]], [ 0.01998, \\ [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.13197, [ 3, -0.17333, 0.00000], \\ [ 3, 0.34667, 0.00000]], [ 0.11816, [ 3, -0.34667, 0.01381], [ 3, 0.29333, -0.01168]], \\ [ 0.02305, [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.03524, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"LWristYaw\") times.append([ 1.08000, 2.60000, 3.12000, 4.16000, 5.04000, 6.04000]) keys.append([ [ 0.24435, [ 3, -0.36000, 0.00000], [ 3, 0.50667, 0.00000]], [ 0.23935, \\ [ 3, -0.50667, 0.00500], [ 3, 0.17333, -0.00171]], [ 0.22094, [ 3, -0.17333, 0.00409], \\ [ 3, 0.34667, -0.00818]], [ 0.20253, [ 3, -0.34667, 0.00554], [ 3, 0.29333, -0.00469]], \\ [ 0.19026, [ 3, -0.29333, 0.01227], [ 3, 0.33333, -0.01394]], [ -0.12736, [ 3, -0.33333, 0.00000],\\ [ 3, 0.00000, 0.00000]]]) names.append(\"RAnklePitch\") times.append([ 1.04000, 1.32000, 1.76000, 2.24000, 2.56000, 2.84000, 3.08000, 3.36000, 3.68000, 4.12000, 5.00000, 6.00000]) keys.append([ [ 0.08727, [ 3, -0.34667, 0.00000], [ 3, 0.09333, 0.00000]], [ -0.08727, \\ [ 3, -0.09333, 0.08824], [ 3, 0.14667, -0.13866]], [ -0.59341, [ 3, -0.14667, 0.00000], \\ [ 3, 0.16000, 0.00000]], [ -0.40143, [ 3, -0.16000, -0.14312], [ 3, 0.10667, 0.09541]], \\ [ 0.12217, [ 3, -0.10667, 0.00000], [ 3, 0.09333, 0.00000]], [ -0.05236, [ 3, -0.09333, 0.04386], \\ [ 3, 0.08000, -0.03759]], [ -0.12217, [ 3, -0.08000, 0.00000], [ 3, 0.09333, 0.00000]], \\ [ 0.24435, [ 3, -0.09333, 0.00000], [ 3, 0.10667, 0.00000]], [ -0.12217, [ 3, -0.10667, 0.12468], \\ [ 3, 0.14667, -0.17144]], [ -0.64403, [ 3, -0.14667, 0.00000], [ 3, 0.29333, 0.00000]], \\ [ -0.21991, [ 3, -0.29333, -0.11820], [ 3, 0.33333, 0.13432]], [ 0.11356, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"RAnkleRoll\") times.append([ 1.04000, 2.56000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ 0.40143, [ 3, -0.34667, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ 0.10887, [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.13802, \\ [ 3, -0.17333, 0.00000], [ 3, 0.09333, 0.00000]], [ 0.00000, [ 3, -0.09333, 0.00000], \\ [ 3, 0.25333, 0.00000]], [ 0.18097, [ 3, -0.25333, -0.05338], [ 3, 0.29333, 0.06181]], \\ [ 0.34558, [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.05066, \\ [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RElbowRoll\") times.append([ 1.00000, 2.52000, 3.04000, 4.08000, 4.96000, 5.96000]) keys.append([ [ 0.64117, [ 3, -0.33333, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ 1.15353, [ 3, -0.50667, -0.18364], [ 3, 0.17333, 0.06282]], [ 1.38056, [ 3, -0.17333, 0.00000], \\ [ 3, 0.34667, 0.00000]], [ 1.36062, [ 3, -0.34667, 0.01994], [ 3, 0.29333, -0.01687]], \\ [ 0.96024, [ 3, -0.29333, 0.14120], [ 3, 0.33333, -0.16046]], [ 0.45564, \\ [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RElbowYaw\") times.append([ 1.00000, 2.52000, 3.04000, 4.08000, 4.96000, 5.96000]) keys.append([ [ 0.99714, [ 3, -0.33333, 0.00000], [ 3, 0.50667, 0.00000]],\\ [ 0.86368, [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.90970, \\ [ 3, -0.17333, 0.00000], [ 3, 0.34667, 0.00000]], [ 0.63205, [ 3, -0.34667, 0.00000], \\ [ 3, 0.29333, 0.00000]], [ 0.84834, [ 3, -0.29333, -0.13498], [ 3, 0.33333, 0.15339]], \\ [ 1.49714, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RHand\") times.append([ 1.00000, 2.52000, 3.04000, 4.08000, 4.96000, 5.96000]) keys.append([ [ 0.00129, [ 3, -0.33333, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ 0.00136, [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.00132, \\ [ 3, -0.17333, 0.00001], [ 3, 0.34667, -0.00002]], [ 0.00128, [ 3, -0.34667, 0.00000], \\ [ 3, 0.29333, 0.00000]], [ 0.00133, [ 3, -0.29333, -0.00005], [ 3, 0.33333, 0.00006]], \\ [ 0.00391, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RHipPitch\") times.append([ 1.04000, 2.56000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ 0.16265, [ 3, -0.34667, 0.00000], [ 3, 0.50667, 0.00000]], [ -0.39726, \\ [ 3, -0.50667, 0.31826], [ 3, 0.17333, -0.10888]], [ -1.11876, [ 3, -0.17333, 0.00190], \\ [ 3, 0.09333, -0.00102]], [ -1.11978, [ 3, -0.09333, 0.00000], [ 3, 0.25333, 0.00000]], \\ [ -0.78540, [ 3, -0.25333, -0.12796], [ 3, 0.29333, 0.14816]], [ -0.29142, [ 3, -0.29333, -0.15581], \\ [ 3, 0.33333, 0.17705]], [ 0.21318, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RHipRoll\") times.append([ 1.04000, 2.56000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ -0.47124, [ 3, -0.34667, 0.00000], [ 3, 0.50667, 0.00000]], [ -0.54001, \\ [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.32218, [ 3, -0.17333, -0.09040], \\ [ 3, 0.09333, 0.04868]], [ -0.12276, [ 3, -0.09333, 0.00000], [ 3, 0.25333, 0.00000]], \\ [ -0.36360, [ 3, -0.25333, 0.04547], [ 3, 0.29333, -0.05265]], [ -0.41713, [ 3, -0.29333, 0.00000], \\ [ 3, 0.33333, 0.00000]], [ -0.05825, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RKneePitch\") times.append([ 1.04000, 2.56000, 2.84000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ -0.08901, [ 3, -0.34667, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ 1.97575, [ 3, -0.50667, 0.00000], [ 3, 0.09333, 0.00000]], [ 1.97222, [ 3, -0.09333, 0.00353], \\ [ 3, 0.08000, -0.00302]], [ 1.23918, [ 3, -0.08000, 0.26583], [ 3, 0.09333, -0.31013]], \\ [ 0.24435, [ 3, -0.09333, 0.00000], [ 3, 0.25333, 0.00000]], [ 1.53589, [ 3, -0.25333, 0.00000], \\ [ 3, 0.29333, 0.00000]], [ 0.62430, [ 3, -0.29333, 0.25160], [ 3, 0.33333, -0.28591]], \\ [ -0.07666, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RShoulderPitch\") times.append([ 1.00000, 2.52000, 3.04000, 4.08000, 4.96000, 5.96000]) keys.append([ [ 1.52782, [ 3, -0.33333, 0.00000], [ 3, 0.50667, 0.00000]], [ 1.46033, \\ [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 1.47413, [ 3, -0.17333, 0.00000], \\ [ 3, 0.34667, 0.00000]], [ 1.24096, [ 3, -0.34667, 0.00000], [ 3, 0.29333, 0.00000]], \\ [ 1.51862, [ 3, -0.29333, -0.02707], [ 3, 0.33333, 0.03076]], [ 1.54938, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"RShoulderRoll\") times.append([ 1.00000, 2.52000, 3.04000, 4.08000, 4.96000, 5.96000]) keys.append([ [ -0.12268, [ 3, -0.33333, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ -0.04138, [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.14569, [ 3, -0.17333, 0.00000], \\ [ 3, 0.34667, 0.00000]], [ -0.13955, [ 3, -0.34667, 0.00000], [ 3, 0.29333, 0.00000]], [ -0.14722, \\ [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.03993, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RWristYaw\") times.append([ 1.00000, 2.52000, 3.04000, 4.08000, 4.96000, 5.96000]) keys.append([ [ -0.08727, [ 3, -0.33333, 0.00000], [ 3, 0.50667, 0.00000]], [ -0.07359, \\ [ 3, -0.50667, -0.00911], [ 3, 0.17333, 0.00312]], [ -0.05058, [ 3, -0.17333, 0.00000], \\ [ 3, 0.34667, 0.00000]], [ -0.06285, [ 3, -0.34667, 0.00000], [ 3, 0.29333, 0.00000]], \\ [ 0.05680, [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00149, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) motionProxy.angleInterpolationBezier(names, times, keys) \u6821\u51c6\u673a\u5668\u4eba\u7684\u4f4d\u7f6e # def getReady(): flag, x, y = search(1) #bottom camera if x < 330: x, y, turn = getDistanceBottom(x, y) print(\"adjust x:\", x, \"y:\", y) speech.say(\"I am adjusting\") moveConfig = [[\"MaxStepFrequency\", 1.0]] motionProxy.moveTo(0, 1.2 * y, turn, moveConfig) \u4e3b\u7a0b\u5e8f # def main(): Init() flag = None while (flag == None): flag, x, y = search(1) while (flag == False): speech.say(\"I don't see the ball.\") motionProxy.moveTo(-0.1, 0.1, math.pi / 3) flag, x, y = search(1) speech.say(\"I see the ball\") print(\"final locate : \", x, y) x, y, turn = getDistance(x, y) print(\"walk 0:\", x, y, turn) moveConfig = [[\"MaxStepFrequency\", 1.0]] motionProxy.moveTo(0.68 * x, 0.85 * y, 0.8 * turn, moveConfig) getReady() speech.say(\"I am ready\") kick_ball() posture.goToPosture('Stand',0.5) if __name__ == '__main__': main()","title":"\u673a\u5668\u4eba\u8e22\u7403\u5b9e\u4f8b\u89e3\u6790"},{"location":"kick_ball/#nao","text":"\u8be5\u5b9e\u4f8b\u5305\u542bcolor_threshold.py\u548ckick_ball\u4e24\u4e2a\u6587\u4ef6,\u5176\u4e2dcolor_threshold.py\u7528\u4e8e\u627e\u5230\u5408\u9002\u7684\u9608\u503c\u8fdb\u884c\u56fe\u50cf\u7684\u4e8c\u503c\u5316\uff0ckick_ball.py\u6587\u4ef6\u662f\u8e22\u7403\u7684\u4e3b\u7a0b\u5e8f\u3002","title":"Nao\u673a\u5668\u4eba\u8e22\u7403\u5b9e\u4f8b\u8bb2\u89e3"},{"location":"kick_ball/#color_thresholdpy","text":"\u5728filename\u53d8\u91cf\u4e2d\u586b\u5165\u56fe\u50cf\u6587\u4ef6\u6240\u5728\u7684\u4f4d\u7f6e\u3002 #!/usr/bin/env python import cv2 import numpy as np def callback(object): pass def Choose_Color(): filename = 'Your file location' image0 = cv2.imread(filename,1) img = cv2.cvtColor(image0, cv2.COLOR_BGR2HSV) img = cv2.resize(img,(int(img.shape[1] / 2),int(img.shape[0] / 2))) cv2.imshow(\"image\",img) cv2.createTrackbar(\"H_min\",\"image\",50,255,callback) cv2.createTrackbar(\"H_max\",\"image\",150,255,callback) cv2.createTrackbar(\"S_min\",\"image\",0,255,callback) cv2.createTrackbar(\"S_max\",\"image\",255,255,callback) cv2.createTrackbar(\"V_min\",\"image\",0,255,callback) cv2.createTrackbar(\"V_max\",\"image\",255,255,callback) while(True): H_min = cv2.getTrackbarPos(\"H_min\",\"image\",) S_min = cv2.getTrackbarPos(\"S_min\",\"image\",) V_min = cv2.getTrackbarPos(\"V_min\",\"image\",) H_max = cv2.getTrackbarPos(\"H_max\",\"image\",) S_max = cv2.getTrackbarPos(\"S_max\",\"image\",) V_max = cv2.getTrackbarPos(\"V_max\",\"image\",) lower_hsv = np.array([H_min, S_min, V_min]) upper_hsv = np.array([H_max, S_max, V_max]) mask = cv2.inRange(img,lower_hsv,upper_hsv) cv2.imshow(\"mask\", mask) if cv2.waitKey(1) & 0XFF == 27: break Choose_Color() \u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u51fa\u73b0\u4ea4\u4e92\u754c\u9762\uff0c\u62d6\u52a8HSV\u6ed1\u52a8\u6761\uff0c\u4f7f\u7403\u7684\u4e8c\u503c\u5316\u6548\u679c\u8fbe\u5230\u6700\u4f73\uff0c\u8bb0\u5f55\u4e0bH,S,V\u7684\u6570\u503c\u5927\u5c0f\u3002","title":"color_threshold.py"},{"location":"kick_ball/#kick_ballpy","text":"","title":"kick_ball.py"},{"location":"kick_ball/#_1","text":"from naoqi import ALProxy from PIL import Image import vision_definitions import numpy as np import motion import cv2 import math import time","title":"\u5bfc\u5165\u5e93"},{"location":"kick_ball/#ip","text":"# \u6539\u4e3a\u4f60\u81ea\u5df1\u7684\u673a\u5668\u4eba\u7684IP\u5730\u5740 robotIP=\"192.168.2.115\" PORT = 9559","title":"\u8bbe\u7f6e\u673a\u5668\u4ebaIP"},{"location":"kick_ball/#_2","text":"motionProxy = ALProxy(\"ALMotion\", robotIP, PORT) posture = ALProxy(\"ALRobotPosture\",robotIP, PORT) camProxy = ALProxy(\"ALVideoDevice\", robotIP, PORT) speech = ALProxy(\"ALTextToSpeech\",robotIP, PORT)","title":"\u521d\u59cb\u5316\u4ee3\u7406"},{"location":"kick_ball/#_3","text":"def Init(): posture.goToPosture('Stand',0.5) setHeadAngle(0, 0.25) motionProxy.setStiffnesses(\"Head\", 0.0)","title":"\u521d\u59cb\u5316\u673a\u5668\u4eba\u59ff\u6001"},{"location":"kick_ball/#_4","text":"def getImage(cameraID): if (cameraID == 0): # Top Camera camProxy.setCameraParameter(\"test\", 18, 0) elif (cameraID == 1): # Bottom Camera camProxy.setCameraParameter(\"test\", 18, 1) resolution = vision_definitions.kVGA # resolution colorSpace = vision_definitions.kRGBColorSpace # fps = 15 nameId = camProxy.subscribe(\"test\", resolution, colorSpace, fps) # naoImage = camProxy.getImageRemote(nameId) imageWidth = naoImage[0] imageHeight = naoImage[1] array = naoImage[6] # binary array of size height * width * nblayers containing image data. im = Image.frombytes(\"RGB\", (imageWidth, imageHeight), array) im.save(\"raw_Image.png\", \"PNG\") camProxy.unsubscribe(nameId)","title":"\u83b7\u53d6\u56fe\u50cf"},{"location":"kick_ball/#_5","text":"def Binarization(image, pattern): # Setting the pattern lower = [] upper = [] if (pattern == \"red\"): lower = np.array([0, 129, 16]) #H_min,S_min,V_min upper = np.array([21, 255, 255]) #H_max,S_max,V_max elif (pattern == \"yellow\"): lower = np.array([20, 100, 100]) #H_min,S_min,V_min upper = np.array([34, 255, 255]) #H_max,S_max,V_max elif (pattern == \"blue\"): lower = np.array([110, 70, 70]) #H_min,S_min,V_min upper = np.array([124, 255, 255]) #H_max,S_max,V_max # BGR to HSV hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV) # Binarization mask = cv2.inRange(hsv, lower, upper) # Opened the image kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (5, 5)) opened = cv2.morphologyEx(mask, cv2.MORPH_OPEN, kernel) cv2.imshow(\"Binarization\", opened) return opened","title":"\u56fe\u50cf\u4e8c\u503c\u5316"},{"location":"kick_ball/#_6","text":"\u82e5\u6709\uff0c\u5219\u8fd4\u56deflag\u4e3atrue\uff0c(x,y)\u662f\u76ee\u6807\u70b9\u7684\u5750\u6807\uff1b\u5426\u5219\u8fd4\u56defalse,(0,0)\u3002 def search(cameraID): getImage(cameraID) img = cv2.imread(\"raw-Image.png\") bina = Binarization(img, \"red\") # color x, y = calcTheLocate(bina) if (x == 0 and y == 0): flag = False else: flag = True return flag, x, y","title":"\u904d\u5386\u56fe\u50cf\uff0c\u5bfb\u627e\u662f\u5426\u6709\u7403"},{"location":"kick_ball/#_7","text":"def calcTheLocate(img): col = np.ones(640) row = np.ones(480) colsum = [] rowsum = [] x = 0 xw = 0 # w:west xe = 0 # e:est y = 0 yn = 0 #n:north ys = 0 #s:south for i in range(0, 480): product = np.dot(col, img[i][:]) colsum.append(product) for i in range(0, 480): if (colsum[i] == max(colsum)): y = i val = max(colsum) / 255 yn = int(i - val) ys = int(i + val) break for i in range(0, 640): product = np.dot(row, img[:, i]) rowsum.append(product) for i in range(0, 640): if (rowsum[i] == max(rowsum)): x = i val = max(colsum) / 255 xw = int(val - i) xe = int(val + i) break print(\"locate x: \", x, xw, xe, \"........ locate y :\", y, yn, ys) cv2.circle(img, (x, y), 5, (55, 255, 155), -1) cv2.circle(img, (xw, y), 5, (55, 255, 155), -1) cv2.circle(img, (xe, y), 5, (55, 255, 155), -1) cv2.circle(img, (x, yn), 5, (55, 255, 155), -1) cv2.circle(img, (x, ys), 5, (55, 255, 155), -1) cv2.putText(img, \"center\", (x - 20, y - 20), cv2.FONT_HERSHEY_SIMPLEX, 0.75, (55, 255, 155), 2) cv2.imshow(\"two\", img) cv2.imwrite(\"binalizeImage.png\", img) # cv2.waitKey(0) return x, y","title":"\u5bfb\u627e\u56fe\u50cf\u4e2d\u7403\u7684\u4e2d\u5fc3\u70b9"},{"location":"kick_ball/#_8","text":"\u8be5\u5b9e\u4f8b\u7528\u7684\u662f\u5e95\u7aef\u7684\u6444\u50cf\u5934\uff0c\u82e5\u4f7f\u7528\u9876\u7aef\u7684\u6444\u50cf\u5934\uff0c\u9700\u8981\u91cd\u65b0\u6d4b\u8bd5\u6821\u51c6D_min\u548cD_max\u7684\u503c\u3002 def getDistance(x, y): img_height = 480 img_width = 640 H = 477.33 # Height of bottom camera # Calibrate the two parameters for your own case D_min = 50 # mm, minimum distance D_max = 800 # mm, maximum distance beta = 56.3 * math.pi / 180.0 # HFOV alpha = math.atan(D_min / H) theta = math.atan(D_max / H) - alpha diff_theta = (img_height - y) * theta / img_height x_real = H * math.tan(alpha + diff_theta) /1000 y_unit = (x_real * 1000 + D_min) * math.tan(beta / 2) y_real = -2 * y_unit * (x - img_width / 2) / img_width / 1000 turn = math.atan(y_real / x_real) return x_real, y_real, turn","title":"\u8ba1\u7b97\u7403\u548c\u673a\u5668\u4eba\u7684\u5b9e\u9645\u8ddd\u79bb"},{"location":"kick_ball/#_9","text":"\u672c\u5b9e\u4f8b\u4e2d\uff0c\u673a\u5668\u4eba\u7528\u53f3\u811a\u8e22\u7403\u3002 def kick_ball(): names = list() times = list() keys = list() names.append(\"HeadPitch\") times.append([ 1.16000, 2.68000, 3.20000, 4.24000, 5.12000, 6.12000]) keys.append([ [ 0.04363, [ 3, -0.38667, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ 0.26180, [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.17453, \\ [ 3, -0.17333, 0.06012], [ 3, 0.34667, -0.12023]], [ -0.27925, [ 3, -0.34667, 0.00000], \\ [ 3, 0.29333, 0.00000]], [ -0.26180, [ 3, -0.29333, -0.00575], [ 3, 0.33333, 0.00653]], \\ [ -0.24241, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"HeadYaw\") times.append([ 1.16000, 2.68000, 3.20000, 4.24000, 5.12000, 6.12000]) keys.append([ [ 0.00464, [ 3, -0.38667, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ -0.00149, [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.00311, \\ [ 3, -0.17333, 0.00000], [ 3, 0.34667, 0.00000]], [ -0.04905, [ 3, -0.34667, 0.00000], \\ [ 3, 0.29333, 0.00000]], [ -0.03371, [ 3, -0.29333, -0.00382], [ 3, 0.33333, 0.00434]], \\ [ -0.02459, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"LAnklePitch\") times.append([ 1.04000, 1.76000, 2.56000, 4.12000, 5.00000, 6.00000]) keys.append([ [ 0.03226, [ 3, -0.34667, 0.00000], [ 3, 0.24000, 0.00000]], \\ [ 0.01745, [ 3, -0.24000, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.01745, [ 3, -0.26667, 0.00000], \\ [ 3, 0.52000, 0.00000]], [ 0.03491, [ 3, -0.52000, 0.00000], [ 3, 0.29333, 0.00000]], \\ [ 0.03491, [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.11501, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"LAnkleRoll\") times.append([ 1.04000, 1.76000, 2.56000, 4.12000, 5.00000, 6.00000]) keys.append([ [ 0.33161, [ 3, -0.34667, 0.00000], [ 3, 0.24000, 0.00000]], \\ [ 0.36652, [ 3, -0.24000, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.36652, \\ [ 3, -0.26667, 0.00000], [ 3, 0.52000, 0.00000]], [ 0.36652, [ 3, -0.52000, 0.00000], \\ [ 3, 0.29333, 0.00000]], [ 0.34732, [ 3, -0.29333, 0.01920], [ 3, 0.33333, -0.02182]], \\ [ -0.08433, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"LElbowRoll\") times.append([ 1.08000, 2.60000, 3.12000, 4.16000, 5.04000, 6.04000]) keys.append([ [ -0.74096, [ 3, -0.36000, 0.00000], [ 3, 0.50667, 0.00000]],\\ [ -1.03396, [ 3, -0.50667, 0.15621], [ 3, 0.17333, -0.05344]], [ -1.36990, \\ [ 3, -0.17333, 0.00000], [ 3, 0.34667, 0.00000]], [ -1.02015, [ 3, -0.34667, -0.11965], \\ [ 3, 0.29333, 0.10124]], [ -0.70722, [ 3, -0.29333, -0.10030], [ 3, 0.33333, 0.11398]], \\ [ -0.37732, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"LElbowYaw\") times.append([ 1.08000, 2.60000, 3.12000, 4.16000, 5.04000, 6.04000]) keys.append([ [ -1.15353, [ 3, -0.36000, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ -0.95411, [ 3, -0.50667, -0.06096], [ 3, 0.17333, 0.02085]], [ -0.90809, [ 3, -0.17333, 0.00000], \\ [ 3, 0.34667, 0.00000]], [ -1.23023, [ 3, -0.34667, 0.11716], [ 3, 0.29333, -0.09913]], \\ [ -1.55697, [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ -1.14441, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"LHand\") times.append([ 1.08000, 2.60000, 3.12000, 4.16000, 5.04000, 6.04000]) keys.append([ [ 0.00317, [ 3, -0.36000, 0.00000], [ 3, 0.50667, 0.00000]], [ 0.00328, \\ [ 3, -0.50667, -0.00003], [ 3, 0.17333, 0.00001]], [ 0.00329, [ 3, -0.17333, 0.00000], \\ [ 3, 0.34667, 0.00000]], [ 0.00317, [ 3, -0.34667, 0.00000], [ 3, 0.29333, 0.00000]], \\ [ 0.00325, [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00187, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"LHipPitch\") times.append([ 1.04000, 2.56000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ 0.23159, [ 3, -0.34667, 0.00000], [ 3, 0.50667, 0.00000]], [ 0.10580, \\ [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.12217, [ 3, -0.17333, 0.00000], \\ [ 3, 0.09333, 0.00000]], [ 0.08433, [ 3, -0.09333, 0.00000], [ 3, 0.25333, 0.00000]], \\ [ 0.09046, [ 3, -0.25333, -0.00614], [ 3, 0.29333, 0.00710]], [ 0.19171, [ 3, -0.29333, -0.01627], \\ [ 3, 0.33333, 0.01849]], [ 0.21020, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"LHipRoll\") times.append([ 1.04000, 2.56000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ -0.34366, [ 3, -0.34667, 0.00000], [ 3, 0.50667, 0.00000]], [ -0.36820, \\ [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.36820, [ 3, -0.17333, 0.00000], \\ [ 3, 0.09333, 0.00000]], [ -0.36513, [ 3, -0.09333, 0.00000], [ 3, 0.25333, 0.00000]], \\ [ -0.36667, [ 3, -0.25333, 0.00000], [ 3, 0.29333, 0.00000]], [ -0.36513, [ 3, -0.29333, \\ -0.00153], [ 3, 0.33333, 0.00174]], [ 0.10129, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"LHipYawPitch\") times.append([ 1.04000, 2.56000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ -0.18097, [ 3, -0.34667, 0.00000], [ 3, 0.50667, 0.00000]], [ -0.25307, \\ [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.06285, [ 3, -0.17333, -0.02279], \\ [ 3, 0.09333, 0.01227]], [ -0.05058, [ 3, -0.09333, 0.00000], [ 3, 0.25333, 0.00000]], \\ [ -0.18711, [ 3, -0.25333, 0.02986], [ 3, 0.29333, -0.03457]], [ -0.24386, [ 3, \\ -0.29333, 0.02058], [ 3, 0.33333, -0.02339]], [ -0.31903, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"LKneePitch\") times.append([ 1.04000, 1.76000, 2.56000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ -0.08727, [ 3, -0.34667, 0.00000], [ 3, 0.24000, 0.00000]], [ -0.08727, \\ [ 3, -0.24000, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.09235, [ 3, -0.26667, 0.00000], \\ [ 3, 0.17333, 0.00000]], [ -0.07973, [ 3, -0.17333, 0.00000], [ 3, 0.09333, 0.00000]], \\ [ -0.07973, [ 3, -0.09333, 0.00000], [ 3, 0.25333, 0.00000]], [ -0.07819, \\ [ 3, -0.25333, -0.00047], [ 3, 0.29333, 0.00055]], [ -0.07666, [ 3, -0.29333, 0.00000], \\ [ 3, 0.33333, 0.00000]], [ -0.09208, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"LShoulderPitch\") times.append([ 1.08000, 2.60000, 3.12000, 4.16000, 5.04000, 6.04000]) keys.append([ [ 1.48649, [ 3, -0.36000, 0.00000], [ 3, 0.50667, 0.00000]], [ 1.35917, \\ [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 1.41746, [ 3, -0.17333, -0.02659], \\ [ 3, 0.34667, 0.05318]], [ 1.59847, [ 3, -0.34667, -0.03988], [ 3, 0.29333, 0.03375]], \\ [ 1.63835, [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.50021, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"LShoulderRoll\") times.append([ 1.08000, 2.60000, 3.12000, 4.16000, 5.04000, 6.04000]) keys.append([ [ 0.02305, [ 3, -0.36000, 0.00000], [ 3, 0.50667, 0.00000]], [ 0.01998, \\ [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.13197, [ 3, -0.17333, 0.00000], \\ [ 3, 0.34667, 0.00000]], [ 0.11816, [ 3, -0.34667, 0.01381], [ 3, 0.29333, -0.01168]], \\ [ 0.02305, [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.03524, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"LWristYaw\") times.append([ 1.08000, 2.60000, 3.12000, 4.16000, 5.04000, 6.04000]) keys.append([ [ 0.24435, [ 3, -0.36000, 0.00000], [ 3, 0.50667, 0.00000]], [ 0.23935, \\ [ 3, -0.50667, 0.00500], [ 3, 0.17333, -0.00171]], [ 0.22094, [ 3, -0.17333, 0.00409], \\ [ 3, 0.34667, -0.00818]], [ 0.20253, [ 3, -0.34667, 0.00554], [ 3, 0.29333, -0.00469]], \\ [ 0.19026, [ 3, -0.29333, 0.01227], [ 3, 0.33333, -0.01394]], [ -0.12736, [ 3, -0.33333, 0.00000],\\ [ 3, 0.00000, 0.00000]]]) names.append(\"RAnklePitch\") times.append([ 1.04000, 1.32000, 1.76000, 2.24000, 2.56000, 2.84000, 3.08000, 3.36000, 3.68000, 4.12000, 5.00000, 6.00000]) keys.append([ [ 0.08727, [ 3, -0.34667, 0.00000], [ 3, 0.09333, 0.00000]], [ -0.08727, \\ [ 3, -0.09333, 0.08824], [ 3, 0.14667, -0.13866]], [ -0.59341, [ 3, -0.14667, 0.00000], \\ [ 3, 0.16000, 0.00000]], [ -0.40143, [ 3, -0.16000, -0.14312], [ 3, 0.10667, 0.09541]], \\ [ 0.12217, [ 3, -0.10667, 0.00000], [ 3, 0.09333, 0.00000]], [ -0.05236, [ 3, -0.09333, 0.04386], \\ [ 3, 0.08000, -0.03759]], [ -0.12217, [ 3, -0.08000, 0.00000], [ 3, 0.09333, 0.00000]], \\ [ 0.24435, [ 3, -0.09333, 0.00000], [ 3, 0.10667, 0.00000]], [ -0.12217, [ 3, -0.10667, 0.12468], \\ [ 3, 0.14667, -0.17144]], [ -0.64403, [ 3, -0.14667, 0.00000], [ 3, 0.29333, 0.00000]], \\ [ -0.21991, [ 3, -0.29333, -0.11820], [ 3, 0.33333, 0.13432]], [ 0.11356, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"RAnkleRoll\") times.append([ 1.04000, 2.56000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ 0.40143, [ 3, -0.34667, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ 0.10887, [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.13802, \\ [ 3, -0.17333, 0.00000], [ 3, 0.09333, 0.00000]], [ 0.00000, [ 3, -0.09333, 0.00000], \\ [ 3, 0.25333, 0.00000]], [ 0.18097, [ 3, -0.25333, -0.05338], [ 3, 0.29333, 0.06181]], \\ [ 0.34558, [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.05066, \\ [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RElbowRoll\") times.append([ 1.00000, 2.52000, 3.04000, 4.08000, 4.96000, 5.96000]) keys.append([ [ 0.64117, [ 3, -0.33333, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ 1.15353, [ 3, -0.50667, -0.18364], [ 3, 0.17333, 0.06282]], [ 1.38056, [ 3, -0.17333, 0.00000], \\ [ 3, 0.34667, 0.00000]], [ 1.36062, [ 3, -0.34667, 0.01994], [ 3, 0.29333, -0.01687]], \\ [ 0.96024, [ 3, -0.29333, 0.14120], [ 3, 0.33333, -0.16046]], [ 0.45564, \\ [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RElbowYaw\") times.append([ 1.00000, 2.52000, 3.04000, 4.08000, 4.96000, 5.96000]) keys.append([ [ 0.99714, [ 3, -0.33333, 0.00000], [ 3, 0.50667, 0.00000]],\\ [ 0.86368, [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.90970, \\ [ 3, -0.17333, 0.00000], [ 3, 0.34667, 0.00000]], [ 0.63205, [ 3, -0.34667, 0.00000], \\ [ 3, 0.29333, 0.00000]], [ 0.84834, [ 3, -0.29333, -0.13498], [ 3, 0.33333, 0.15339]], \\ [ 1.49714, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RHand\") times.append([ 1.00000, 2.52000, 3.04000, 4.08000, 4.96000, 5.96000]) keys.append([ [ 0.00129, [ 3, -0.33333, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ 0.00136, [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.00132, \\ [ 3, -0.17333, 0.00001], [ 3, 0.34667, -0.00002]], [ 0.00128, [ 3, -0.34667, 0.00000], \\ [ 3, 0.29333, 0.00000]], [ 0.00133, [ 3, -0.29333, -0.00005], [ 3, 0.33333, 0.00006]], \\ [ 0.00391, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RHipPitch\") times.append([ 1.04000, 2.56000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ 0.16265, [ 3, -0.34667, 0.00000], [ 3, 0.50667, 0.00000]], [ -0.39726, \\ [ 3, -0.50667, 0.31826], [ 3, 0.17333, -0.10888]], [ -1.11876, [ 3, -0.17333, 0.00190], \\ [ 3, 0.09333, -0.00102]], [ -1.11978, [ 3, -0.09333, 0.00000], [ 3, 0.25333, 0.00000]], \\ [ -0.78540, [ 3, -0.25333, -0.12796], [ 3, 0.29333, 0.14816]], [ -0.29142, [ 3, -0.29333, -0.15581], \\ [ 3, 0.33333, 0.17705]], [ 0.21318, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RHipRoll\") times.append([ 1.04000, 2.56000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ -0.47124, [ 3, -0.34667, 0.00000], [ 3, 0.50667, 0.00000]], [ -0.54001, \\ [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.32218, [ 3, -0.17333, -0.09040], \\ [ 3, 0.09333, 0.04868]], [ -0.12276, [ 3, -0.09333, 0.00000], [ 3, 0.25333, 0.00000]], \\ [ -0.36360, [ 3, -0.25333, 0.04547], [ 3, 0.29333, -0.05265]], [ -0.41713, [ 3, -0.29333, 0.00000], \\ [ 3, 0.33333, 0.00000]], [ -0.05825, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RKneePitch\") times.append([ 1.04000, 2.56000, 2.84000, 3.08000, 3.36000, 4.12000, 5.00000, 6.00000]) keys.append([ [ -0.08901, [ 3, -0.34667, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ 1.97575, [ 3, -0.50667, 0.00000], [ 3, 0.09333, 0.00000]], [ 1.97222, [ 3, -0.09333, 0.00353], \\ [ 3, 0.08000, -0.00302]], [ 1.23918, [ 3, -0.08000, 0.26583], [ 3, 0.09333, -0.31013]], \\ [ 0.24435, [ 3, -0.09333, 0.00000], [ 3, 0.25333, 0.00000]], [ 1.53589, [ 3, -0.25333, 0.00000], \\ [ 3, 0.29333, 0.00000]], [ 0.62430, [ 3, -0.29333, 0.25160], [ 3, 0.33333, -0.28591]], \\ [ -0.07666, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RShoulderPitch\") times.append([ 1.00000, 2.52000, 3.04000, 4.08000, 4.96000, 5.96000]) keys.append([ [ 1.52782, [ 3, -0.33333, 0.00000], [ 3, 0.50667, 0.00000]], [ 1.46033, \\ [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ 1.47413, [ 3, -0.17333, 0.00000], \\ [ 3, 0.34667, 0.00000]], [ 1.24096, [ 3, -0.34667, 0.00000], [ 3, 0.29333, 0.00000]], \\ [ 1.51862, [ 3, -0.29333, -0.02707], [ 3, 0.33333, 0.03076]], [ 1.54938, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) names.append(\"RShoulderRoll\") times.append([ 1.00000, 2.52000, 3.04000, 4.08000, 4.96000, 5.96000]) keys.append([ [ -0.12268, [ 3, -0.33333, 0.00000], [ 3, 0.50667, 0.00000]], \\ [ -0.04138, [ 3, -0.50667, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.14569, [ 3, -0.17333, 0.00000], \\ [ 3, 0.34667, 0.00000]], [ -0.13955, [ 3, -0.34667, 0.00000], [ 3, 0.29333, 0.00000]], [ -0.14722, \\ [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.03993, [ 3, -0.33333, 0.00000], [ 3, 0.00000, 0.00000]]]) names.append(\"RWristYaw\") times.append([ 1.00000, 2.52000, 3.04000, 4.08000, 4.96000, 5.96000]) keys.append([ [ -0.08727, [ 3, -0.33333, 0.00000], [ 3, 0.50667, 0.00000]], [ -0.07359, \\ [ 3, -0.50667, -0.00911], [ 3, 0.17333, 0.00312]], [ -0.05058, [ 3, -0.17333, 0.00000], \\ [ 3, 0.34667, 0.00000]], [ -0.06285, [ 3, -0.34667, 0.00000], [ 3, 0.29333, 0.00000]], \\ [ 0.05680, [ 3, -0.29333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00149, [ 3, -0.33333, 0.00000], \\ [ 3, 0.00000, 0.00000]]]) motionProxy.angleInterpolationBezier(names, times, keys)","title":"\u673a\u5668\u4eba\u8e22\u7403\u52a8\u4f5c"},{"location":"kick_ball/#_10","text":"def getReady(): flag, x, y = search(1) #bottom camera if x < 330: x, y, turn = getDistanceBottom(x, y) print(\"adjust x:\", x, \"y:\", y) speech.say(\"I am adjusting\") moveConfig = [[\"MaxStepFrequency\", 1.0]] motionProxy.moveTo(0, 1.2 * y, turn, moveConfig)","title":"\u6821\u51c6\u673a\u5668\u4eba\u7684\u4f4d\u7f6e"},{"location":"kick_ball/#_11","text":"def main(): Init() flag = None while (flag == None): flag, x, y = search(1) while (flag == False): speech.say(\"I don't see the ball.\") motionProxy.moveTo(-0.1, 0.1, math.pi / 3) flag, x, y = search(1) speech.say(\"I see the ball\") print(\"final locate : \", x, y) x, y, turn = getDistance(x, y) print(\"walk 0:\", x, y, turn) moveConfig = [[\"MaxStepFrequency\", 1.0]] motionProxy.moveTo(0.68 * x, 0.85 * y, 0.8 * turn, moveConfig) getReady() speech.say(\"I am ready\") kick_ball() posture.goToPosture('Stand',0.5) if __name__ == '__main__': main()","title":"\u4e3b\u7a0b\u5e8f"},{"location":"motion/","text":"\u673a\u5668\u4eba\u8fd0\u52a8 # ALMotion\u6a21\u5757 # \u5b83\u5305\u62ec\u56db\u7ec4\u4e3b\u8981\u7684\u63a7\u5236\u65b9\u6cd5: \u5173\u8282\u521a\u5ea6(\u7535\u673a\u57fa\u672c\u5f00\u65ad)\uff1b\u5173\u8282\u4f4d\u7f6e(\u63d2\u8865\u3001\u53cd\u5e94\u63a7\u5236)\uff1b\u6b65\u884c(\u8ddd\u79bb\u548c\u901f\u5ea6\u63a7\u5236\uff0c\u4e16\u754c\u4f4d\u7f6e\u7b49)\uff1b\u7b1b\u5361\u5c14\u7a7a\u95f4\u4e2d\u7684\u673a\u5668\u4eba\u6267\u884c\u5668(\u9006\u8fd0\u52a8\u5b66\uff0c\u5168\u8eab\u7ea6\u675f)\u3002 ALMotion \u6a21\u5757\u8fd8\u5b9e\u73b0\u4e86\u81ea\u78b0\u649e\u907f\u514d\u3001\u5916\u90e8\u78b0\u649e\u907f\u514d\u3001\u8dcc\u843d\u63a7\u5236\u3001\u667a\u80fd\u8c03\u8282\u521a\u5ea6\u548c\u8bca\u65ad\u6548\u679c\u7b49\u529f\u80fd\u3002 ALMotion \u8fd0\u884c\u572850Hz(\u5468\u671f20ms)\u3002\u5728 ALMotion \u4e2d\uff0c\u6bcf\u5f53\u60a8\u8c03\u7528\u4e00\u4e2a\u516c\u5171\u65b9\u6cd5\u6765\u8bf7\u6c42\u4e00\u4e2a\u52a8\u4f5c\u65f6\uff0c\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u201c\u52a8\u4f5c\u4efb\u52a1\u201d\u6765\u5904\u7406\u8be5\u4efb\u52a1\u3002 \u57fa\u672c\u53c2\u6570 # X\u8f74\u6b63\u5411\u673a\u5668\u4eba\u7684\u524d\u65b9\uff0cY\u8f74\u4ece\u53f3\u5230\u5de6\uff0cZ\u8f74\u5782\u76f4\u5411\u4e0a\u3002 \u51fd\u6570\u65b9\u6cd5 # ALMotion \u63d0\u4f9b\u5e2e\u52a9\u673a\u5668\u4eba\u79fb\u52a8\u7684\u65b9\u6cd5\u3002\u5b83\u5305\u542b\u5141\u8bb8\u60a8\u64cd\u4f5c\u5173\u8282\u521a\u5ea6\u3001\u5173\u8282\u89d2\u5ea6\u7684\u547d\u4ee4\uff0c\u4ee5\u53ca\u5141\u8bb8\u60a8\u63a7\u5236\u884c\u8d70\u7684\u66f4\u9ad8\u7ea7\u522bAPI\u3002 \u521a\u5ea6\u63a7\u5236API # ALMotion.wakeUp() # \u5524\u9192\u673a\u5668\u4eba\uff0c\u6253\u5f00\u7535\u673a\uff0c\u5982\u679c\u9700\u8981\uff0c\u6062\u590d\u5230\u521d\u59cb\u4f4d\u7f6e\u3002\u5982\u679c\u673a\u5668\u4eba\u5df2\u7ecf\u6fc0\u6d3b\uff0c\u8c03\u7528\u7acb\u5373\u8fd4\u56deTrue\u3002 \u6210\u529f\u8fd4\u56deTrue, \u5426\u5219\u8fd4\u56deFalse ALMotion.rest() # \u4f7f\u673a\u5668\u4eba\u4f11\u7720: \u5e76\u8fdb\u5165\u4e00\u4e2a\u653e\u677e\u548c\u5b89\u5168\u7684\u4f4d\u7f6e\uff0c\u5e76\u5173\u95ed\u7535\u673a\u3002\u4f8b\u5982\uff0c\u8fdb\u5165\u8e72\u59ff\uff0c\u5e76\u5173\u95ed\u521a\u5ea6\u3002 ALMotion.setStiffnesses(names, stiffnesses) # \u8bbe\u7f6e\u4e00\u4e2a\u6216\u591a\u4e2a\u5173\u8282\u7684\u521a\u5ea6\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u963b\u585e\u8c03\u7528\u3002 Parameters: names - \u5173\u8282\u540d\u79f0, \u201cBody\u201d, \u201cJointActuators\u201d, \u201cJoints\u201d or \u201cActuators\u201d. stiffness - \u57280\u548c1\u4e4b\u95f4\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u521a\u5ea6\u53c2\u6570\u3002 ALMotion.getStiffnesses(names) # \u83b7\u53d6\u4e00\u4e2a\u6216\u591a\u4e2a\u5173\u8282\u7684\u521a\u5ea6\u3002 Parameters: names - \u5173\u8282\u540d\u79f0, \u201cBody\u201d, \u201cJointActuators\u201d, \u201cJoints\u201d or \u201cActuators\u201d. Return \uff1a stiffness - \u57280\u548c1\u4e4b\u95f4\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u521a\u5ea6\u53c2\u6570\u3002 \u5173\u8282\u63a7\u5236 # `ALMotion.angleInterpolation (names,angleLists,timeLists,isAbsolute )` \u63d2\u5165\u4e00\u4e2a\u6216\u591a\u4e2a\u5173\u8282\u5230\u76ee\u6807\u89d2\u5ea6\u6216\u6cbf\u65f6\u95f4\u8f68\u8ff9\u3002\u8fd9\u662f\u4e00\u4e2a\u963b\u585e\u8c03\u7528\u3002 Parameters: names -\u5173\u8282\u540d\u79f0, \u201cBody\u201d, \u201cJointActuators\u201d, \u201cJoints\u201d or \u201cActuators\u201d. angleLists -\u4ee5\u5f27\u5ea6\u8868\u793a\u7684\u89d2\u3001\u89d2\u5217\u8868\u6216\u89d2\u5217\u8868 timeLists - \u65f6\u95f4\uff0c\u65f6\u95f4\u5217\u8868\u6216\u65f6\u95f4\u5217\u8868\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d isAbsolute - \u5982\u679c\u4e3a\u771f\uff0c\u8fd0\u52a8\u88ab\u63cf\u8ff0\u4e3a\u7edd\u5bf9\u89d2\u5ea6\uff0c\u5426\u5219\u89d2\u5ea6\u662f\u76f8\u5bf9\u4e8e\u5f53\u524d\u7684\u89d2\u5ea6 ALMotion.angleInterpolationWithSpeed(names,targetAngles,maxSpeedFraction) # \u63d2\u503c\u4f7f\u4e00\u4e2a\u6216\u591a\u4e2a\u5173\u8282\u5230\u4e00\u4e2a\u76ee\u6807\u89d2\u5ea6\uff0c\u4f7f\u7528\u4e00\u4e2a\u6700\u5927\u5173\u8282\u901f\u5ea6\u7684\u767e\u5206\u6bd4\u3002\u6bcf\u4e2a\u5173\u8282\u53ea\u5141\u8bb8\u4e00\u4e2a\u76ee\u6807\u89d2\u3002\u8fd9\u662f\u4e00\u4e2a\u963b\u585e\u8c03\u7528\u3002 Parameters: names -\u5173\u8282\u540d\u79f0, \u201cBody\u201d, \u201cJointActuators\u201d, \u201cJoints\u201d or \u201cActuators\u201d. targetAngles -\u4ee5\u5f27\u5ea6\u8868\u793a\u7684\u89d2\u3001\u89d2\u5217\u8868\u6216\u89d2\u5217\u8868 maxSpeedFraction - \u4e00\u4e2a\u767e\u5206\u6bd4 ALMotion.setAngles(names, angles, fractionMaxSpeed) # \u8bbe\u7f6e\u89d2\u5ea6\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u963b\u585e\u8c03\u7528\u3002 Parameters: names -\u5173\u8282\u540d\u79f0, \u201cBody\u201d, \u201cJointActuators\u201d, \u201cJoints\u201d or \u201cActuators\u201d. targetAngles -\u4ee5\u5f27\u5ea6\u8868\u793a\u7684\u89d2\u3001\u89d2\u5217\u8868\u6216\u89d2\u5217\u8868 fractionMaxSpeed - \u5360\u6700\u5927\u901f\u5ea6\u7684\u767e\u5206\u6bd4 ALMotion.changeAngles(names, angles, fractionMaxSpeed) # \u6539\u53d8\u89d2\u5ea6\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u963b\u585e\u8c03\u7528\u3002 Parameters: names -\u5173\u8282\u540d\u79f0, \u201cBody\u201d, \u201cJointActuators\u201d, \u201cJoints\u201d or \u201cActuators\u201d. targetAngles -\u4ee5\u5f27\u5ea6\u8868\u793a\u7684\u89d2\u3001\u89d2\u5217\u8868\u6216\u89d2\u5217\u8868 fractionMaxSpeed - \u5360\u6700\u5927\u901f\u5ea6\u7684\u767e\u5206\u6bd4 ALMotion.getAngles(names, useSensors) # \u83b7\u5f97\u6240\u6709\u5173\u8282\u7684\u89d2\u5ea6 Parameters: names -\u5173\u8282\u540d\u79f0, \u201c Body \u201d, \u201c JointActuators \u201d, \u201c Joints \u201d or \u201c Actuators \u201d. useSensors -\u5982\u679c\u8bbe\u7f6e\u4e3aTrue\uff0c \u4f20\u611f\u5668\u89d2\u5ea6\u4f1a\u88ab\u8fd4\u56de Return\uff1a \u4ee5\u5f27\u5ea6\u4e3a\u5355\u4f4d\u7684\u5173\u8282\u89d2\u5ea6 \u8fd0\u52a8\u63a7\u5236 # ALMotion.move(x, y, theta) # \u4f7f\u673a\u5668\u4eba\u4ee5\u7ed9\u5b9a\u7684\u901f\u5ea6\u8fd0\u52a8\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u963b\u585e\u8c03\u7528\u3002 Parameters: x -\u6cbfx\u8f74\u7684\u901f\u5ea6\uff0c\u5355\u4f4d\u662f\u7c73\u6bcf\u79d2\u3002\u5411\u540e\u8fd0\u52a8\u4e3a\u8d1f\u503c y -\u6cbfy\u8f74\u7684\u901f\u5ea6\uff0c\u5355\u4f4d\u662f\u7c73\u6bcf\u79d2\u3002\u5411\u5de6\u79fb\u52a8\u4e3a\u6b63\u503c theta - \u7ed5z\u8f74\u7684\u901f\u5ea6\uff0c\u5355\u4f4d\u662f\u5f27\u5ea6/\u79d2\u3002\u987a\u65f6\u9488\u65cb\u8f6c\u4e3a\u8d1f\u503c\u3002 ALMotion.moveToward(x, y, theta) # \u4f7f\u673a\u5668\u4eba\u4ee5\u7ed9\u5b9a\u7684\u5f52\u4e00\u5316\u901f\u5ea6\u8fd0\u52a8\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u963b\u585e\u8c03\u7528\u3002 Parameters: x -\u6cbfx\u8f74\u7684\u5f52\u4e00\u5316\u901f\u5ea6\uff0c\u5355\u4f4d\u662f\u7c73\u6bcf\u79d2\u3002\u5411\u540e\u8fd0\u52a8\u4e3a\u8d1f\u503c\uff0c+1\u4e3a\u6700\u5927\u503c y -\u6cbfy\u8f74\u7684\u5f52\u4e00\u5316\u901f\u5ea6\uff0c\u5355\u4f4d\u662f\u7c73\u6bcf\u79d2\u3002\u5411\u5de6\u79fb\u52a8\u4e3a\u6b63\u503c\uff0c+1\u4e3a\u6700\u5c0f\u503c theta - \u7ed5z\u8f74\u7684\u5f52\u4e00\u5316\u901f\u5ea6\uff0c\u5355\u4f4d\u662f\u5f27\u5ea6/\u79d2\u3002\u987a\u65f6\u9488\u65cb\u8f6c\u4e3a\u8d1f\u503c\u3002 ALMotion.moveTo(x, y, theta) # \u4f7f\u673a\u5668\u4eba\u4ee5\u7ed9\u5b9a\u7684\u5f52\u4e00\u5316\u901f\u5ea6\u8fd0\u52a8\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u963b\u585e\u8c03\u7528\u3002 Parameters: x -\u6cbfx\u8f74\u7684\u8ddd\u79bb\uff0c\u5355\u4f4d\u662f\u7c73 y -\u6cbfy\u8f74\u7684\u8ddd\u79bb\uff0c\u5355\u4f4d\u662f\u7c73 theta - \u7ed5z\u8f74\u7684\u65cb\u8f6c\uff0c\u5355\u4f4d\u662f\u5f27\u5ea6\uff0c \u8303\u56f4\u4e3a[-3.1415 to 3.1415]\u3002 Return\uff1a \u5982\u679c\u62b5\u8fbe\u8fd4\u56deTrue, \u88ab\u4e2d\u65ad\u5219\u8fd4\u56deFalse ALMotion.stopMove() # \u505c\u6b62\u8fd0\u52a8 \u7b1b\u5361\u5c14\u63a7\u5236 # ALMotion.setPositions(effectorNames, frame, position, fractionMaxSpeed, axisMask) # \u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u79fb\u52a8\u672b\u7aef\u6267\u884c\u5668\u5230\u7ed9\u5b9a\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u3002\u8fd9\u662f\u4e00\u4e2a\u963b\u585e\u8c03\u7528\u3002 Parameters: effectorNames - Name or names of effector. Could be: \u201cTorso\u201d or chain name. frame -\u4efb\u52a1\u5750\u6807\u7cfb position - Position6D array (x,y,z,wx,wy,wz) in meters and radians fractionMaxSpeed - \u6700\u5927\u901f\u5ea6\u7684\u767e\u5206\u6bd4 axisMask - The Axis Mask or Axis Mask list. True for axes that you wish to control. e.g. 7 for position only, 56 for rotation only and 63 for both #! /usr/bin/env python # -*- encoding: UTF-8 -*- \"\"\"Example: Use setPositions Method\"\"\" import qi import argparse import sys import time import motion def main(session): \"\"\" This example uses the setPositions method. \"\"\" # Get the services ALMotion & ALRobotPosture. motion_service = session.service(\"ALMotion\") posture_service = session.service(\"ALRobotPosture\") # Wake up robot motion_service.wakeUp() # Send robot to Pose Init posture_service.goToPosture(\"StandInit\", 0.5) # Example showing how to set LArm Position, using a fraction of max speed chainName = \"LArm\" frame = motion.FRAME_TORSO useSensor = False # Get the current position of the chainName in the same frame current = motion_service.getPosition(chainName, frame, useSensor) target = [ current[0] + 0.05, current[1] + 0.05, current[2] + 0.05, current[3] + 0.0, current[4] + 0.0, current[5] + 0.0] fractionMaxSpeed = 0.5 axisMask = 7 # just control position motion_service.setPositions(chainName, frame, target, fractionMaxSpeed, axisMask) time.sleep(1.0) # Example showing how to set Torso Position, using a fraction of max speed chainName = \"Torso\" frame = motion.FRAME_ROBOT position = [0.0, 0.0, 0.25, 0.0, 0.0, 0.0] # Absolute Position fractionMaxSpeed = 0.2 axisMask = 63 motion_service.setPositions(chainName, frame, position, fractionMaxSpeed, axisMask) time.sleep(4.0) # Go to rest position motion_service.rest() if __name__ == \"__main__\": parser = argparse.ArgumentParser() parser.add_argument(\"--ip\", type=str, default=\"127.0.0.1\", help=\"Robot IP address. On robot or Local Naoqi: use '127.0.0.1'.\") parser.add_argument(\"--port\", type=int, default=9559, help=\"Naoqi port number\") args = parser.parse_args() session = qi.Session() try: session.connect(\"tcp://\" + args.ip + \":\" + str(args.port)) except RuntimeError: print (\"Can't connect to Naoqi at ip \\\"\" + args.ip + \"\\\" on port \" + str(args.port) +\".\\n\" \"Please check your script arguments. Run with -h option for help.\") sys.exit(1) main(session) ALMotion.getPositions(name, frame, useSensorValues) # \u83b7\u53d6\u76f8\u5bf9\u4e8e\u5750\u6807\u7cfb\u7684\u4f4d\u7f6e\u3002x\u8f74\u4e3a\u6b63\u65b9\u5411\uff0cy\u8f74\u4ece\u53f3\u5230\u5de6\uff0cz\u8f74\u4e3a\u5782\u76f4\u65b9\u5411\u3002Position6D\u7684\u89d2\u5ea6\u7ea6\u5b9a\u662fRot_z(wz). rot_y (wy). rot_x (wx)\u3002 Parameters: name - Name or names of effector. Could be: \u201cTorso\u201d or chain name. frame -\u4efb\u52a1\u5750\u6807\u7cfb useSensorValues - \u5982\u679c\u4e3a\u771f\uff0c\u4f20\u611f\u5668\u503c\u5c06\u7528\u4e8e\u786e\u5b9a\u4f4d\u7f6e\u3002 ALRobotPosture\u6a21\u5757 # ALRobotPosture \u6a21\u5757\u53ef\u4ee5\u8ba9\u673a\u5668\u4eba\u5207\u6362\u5230\u4e0d\u540c\u7684\u9884\u5b9a\u4e49\u59ff\u52bf\u3002\u60a8\u53ef\u4ee5\u5728 ALRobot.goToPosture \u548c ALRobotPosture.applyPosture \u4e4b\u95f4\u9009\u62e9\u3002 \u5982\u679c\u4f60\u60f3\u521b\u5efa\u4e00\u4e2a\u673a\u5668\u4eba\u81ea\u52a8\u6267\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u8bf7\u59cb\u7ec8\u9009\u62e9 ALRobotPosture.goToPosture \u3002 \u5728\u64cd\u4f5c\u673a\u5668\u4eba\u65f6\uff0c\u5982\u679c\u4f60\u53ea\u662f\u60f3\u8981\u5feb\u901f\u5230\u8fbe\u59ff\u52bf\u7684\u6377\u5f84\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 ALRobotPosture.applyPosture (\u4f60\u5c06\u4e0d\u5f97\u4e0d\u5e2e\u52a9\u673a\u5668\u4eba)\u3002 \u673a\u5668\u4eba\u68c0\u6d4b\u5230\u5b83\u5f53\u524d\u7684\u59ff\u6001\uff0c\u5e76\u81ea\u52a8\u8ba1\u7b97\u4ece\u5f53\u524d\u59ff\u6001\u5230\u76ee\u6807\u59ff\u6001\u7684\u8def\u5f84\uff0c\u7136\u540e\u6267\u884c\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u6267\u884c\u901f\u5ea6\u7684\u5feb\u6162\u3002 \u9884\u5b9a\u4e49\u59ff\u52bf # \u673a\u5668\u4eba\u7684\u59ff\u6001\u662f\u5176\u5173\u8282\u548c\u60ef\u6027\u4f20\u611f\u5668\u7684(\u72ec\u7279\u7684)\u7ed3\u6784\u3002\u7531\u4e8e\u59ff\u52bf\u662f\u7531\u4e00\u7ec4\u5b9e\u6570(\u6bd4\u5982\u6d6e\u70b9\u6570)\u5b9a\u4e49\u7684\uff0c\u6240\u4ee5\u59ff\u52bf\u7684\u6570\u91cf\u662f\u65e0\u9650\u7684\u3002 \u4ee5\u4e0b\u662f\u9884\u5148\u5b9a\u4e49\u7684\u59ff\u52bf\u540d\u79f0\u5217\u8868: Crouch , LyingBack , LyingBelly , Sit , SitRelax , Stand , StandInit , StandZero . Posture Family: Posture Family Description \u201c Standing \u201d \u91cd\u91cf\u7531\u811a\u652f\u6491\uff0c\u8eaf\u5e72\u76f4\u7acb\uff0c\u817f\u76f4\u7acb\u3002 \u201c Crouching \u201d \u91cd\u91cf\u7531\u811a\u652f\u6491\uff0c\u8eaf\u5e72\u76f4\u7acb\uff0c\u817f\u5f2f\u66f2\u3002 \u201c Sitting \u201d \u81c0\u90e8\u4e0e\u5730\u9762\u63a5\u89e6\uff0c\u8eaf\u5e72\u76f4\u7acb\u3002 \u201c SittingOnChair \u201d \u81c0\u90e8\u4e0e\u6905\u5b50(10\u5398\u7c73\u9ad8)\u63a5\u89e6\uff0c\u8eaf\u5e72\u76f4\u7acb\u3002 \u201c LyingBelly \u201d \u8eba\u4e0b\uff0c\u8138\u671d\u4e0b\u3002 \u201c LyingBack \u201d \u8eba\u4e0b\uff0c\u8138\u671d\u4e0a\u3002 \u201c LyingLeft \u201d \u8eba\u4e0b\uff0c\u8138\u671d\u5de6\u3002 \u201c LyingRight \u201d \u8eba\u4e0b\uff0c\u8138\u671d\u53f3\u3002 \u201c Belly \u201d \u8138\u671d\u4e0b\uff0c\u8eaf\u5e72\u62ac\u8d77\u3002 \u201c Back \u201d \u8138\u671d\u4e0a\uff0c\u8eaf\u5e72\u62ac\u8d77\u3002 \u201c Left \u201d \u5411\u5de6\u503e\u659c\uff0c\u624b\u89e6\u5730\u3002 \u201c Right \u201d \u5411\u53f3\u503e\u659c\uff0c\u624b\u89e6\u5730\u3002 \u51fd\u6570\u65b9\u6cd5 # ALRobotPosture.getPostureList() # Return\uff1a \u6240\u6709\u9884\u5b9a\u4e49\u7684\u673a\u5668\u4eba\u59ff\u52bf\u7684vector from naoqi import ALProxy posture = ALProxy(\"ALRobotPosture\", \"<IP of your robot>\", 9559) posture.getPostureList() ['Crouch', 'LyingBack', 'LyingBelly', 'Sit', 'SitOnChair', 'SitRelax', 'Stand', 'StandInit', 'StandZero'] ALRobotPosture.getPosture() # \u8fd4\u56de\u5f53\u524d\u9884\u5b9a\u4e49\u59ff\u52bf\u7684\u540d\u79f0\u3002\u5982\u679c\u5f53\u524d\u59ff\u52bf\u4e0d\u5728\u9884\u5b9a\u4e49\u59ff\u52bf\u4e2d\uff0c\u5219\u8fd4\u56de\"\u672a\u77e5\" Return: \u5f53\u524d\u59ff\u52bf\u7684\u5b57\u7b26\u4e32 from naoqi import ALProxy posture = ALProxy(\"ALRobotPosture\", \"<IP of your robot>\", 9559) posture.getPosture() ALRobotPosture.goToPosture (postureName\uff0cspeed) # \u4f7f\u673a\u5668\u4eba\u8fdb\u5165\u53c2\u6570\u4e2d\u8981\u6c42\u7684\u9884\u5b9a\u4e49\u59ff\u6001\uff0c\u53ef\u4ee5\u4fee\u6539\u79fb\u52a8\u7684\u901f\u5ea6\u3002\u673a\u5668\u4eba\u52a8\u4f5c\u662f\u201c\u667a\u80fd\u201d\u7684:\u4ece\u673a\u5668\u4eba\u5f00\u59cb\u7684\u59ff\u6001\u5f00\u59cb\uff0c\u9009\u62e9\u6240\u6709\u5e94\u8be5\u7684\u6b65\u9aa4\u5230\u8fbe\u6240\u8981\u6c42\u7684\u59ff\u6001\u3002 Parameters: postureName \uff1a\u76ee\u6807\u9884\u5b9a\u4e49\u59ff\u52bf\u540d\u79f0\u5b57\u7b26\u4e32 speed \uff1a\u76f8\u5bf9\u901f\u5ea6\uff0c\u5927\u5c0f\u4e3a0.0-1.0 Return\uff1a \u8fbe\u5230\u76ee\u6807\u59ff\u52bf\u540e\u8fd4\u56deTrue from naoqi import ALProxy posture = ALProxy(\"ALRobotPosture\", \"<IP of your robot>\", 9559) posture.goToPosture(postureName\uff0cspeed) ALRobotPosture.applyPosture(postureName,speed) # \u8bbe\u5b9a\u673a\u5668\u4eba\u7684\u9884\u5b9a\u59ff\u52bf\u7684\u6240\u6709\u5173\u8282\u3002\u64cd\u7eb5\u673a\u5668\u4eba\u7684\u52a8\u6001\u884c\u4e3a\u65f6\u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\uff0c\u5982\u679c\u9700\u8981\u673a\u5668\u4eba\u5feb\u901f\u8fbe\u5230\u4e00\u4e2a\u59ff\u52bf\uff0c\u5219\u9700\u8981\u64cd\u4f5c\u8005\u7684\u5e2e\u52a9\u3002\u8c28\u614e\u4f7f\u7528\u6b64\u529f\u80fd\uff0c\u547d\u4ee4\u7684\u4f5c\u7528\u662f\u5373\u65f6\u3001\u65e0\u201c\u667a\u80fd\u201d\u7684\uff0c\u5982\u679c\u673a\u5668\u4eba\u6b63\u5750\u7740\uff0c\u8fd0\u7528\u6b64\u547d\u4ee4\u8981\u6c42\u673a\u5668\u4eba\u7ad9\u8d77\u6765\uff0c\u5219\u5bf9\u673a\u5668\u4eba\u53ef\u80fd\u8dcc\u5230\u3002 Parameters: postureName \uff1a\u76ee\u6807\u9884\u5b9a\u4e49\u59ff\u52bf\u540d\u79f0\u5b57\u7b26\u4e32 speed \uff1a\u76f8\u5bf9\u901f\u5ea6\uff0c\u5927\u5c0f\u4e3a0.0-1.0 Return\uff1a \u8fbe\u5230\u76ee\u6807\u59ff\u52bf\u540e\u8fd4\u56deTrue from naoqi import ALProxy posture = ALProxy(\"ALRobotPosture\", \"<IP of your robot>\", 9559) posture.goToPosture(postureName,speed) ALRobotPosture.stopMove( ) # \u505c\u6b62\u76ee\u524d\u7684\u59ff\u52bf from naoqi import ALProxy posture = ALProxy(\"ALRobotPosture\", \"<IP of your robot>\", 9559) posture.stop() ALRobotPosture.getPostureFamily( ) # \u83b7\u53d6\u5f53\u524d\u59ff\u52bf\u6240\u5728\u7684\u5206\u7c7b Return\uff1a \u5f53\u524d\u59ff\u52bf\u6240\u5728\u7684\u7c7b\u522b ALRobotPostureProxy.getPostureFamilyList( ) # \u83b7\u53d6\u6240\u6709\u9884\u5b9a\u4e49\u7684\u59ff\u52bf\u5206\u7c7b Return\uff1a \u6240\u6709\u9884\u5b9a\u4e49\u7684\u59ff\u52bf\u5206\u7c7b\u7684vector from naoqi import ALProxy posture = ALProxy(\"ALRobotPosture\", \"<IP of your robot>\", 9559) posture.getPosturFamilyeList() ['Belly', 'Crouching', 'Left', 'LyingBack', 'LyingBelly', 'LyingLeft', 'LyingRight', 'Right', 'Sitting', 'SittingOnChair', 'Standing', 'Unknown'] ALRobotPosture.setMaxTryNumber(maxTryNumber) # \u8bbe\u7f6e\u6700\u5927\u5c1d\u8bd5\u6b21\u6570 Parameters: maxTryNumber \uff1a\u5c1d\u8bd5\u6b21\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a3 ALTracker\u6a21\u5757 # ALTracker\u6a21\u5757\u5141\u8bb8\u673a\u5668\u4eba\u7528\u4e0d\u540c\u7684\u65b9\u5f0f(\u5934\u90e8\u3001\u5168\u8eab\u3001\u79fb\u52a8\u7b49)\u8ddf\u8e2a\u4e0d\u540c\u7684\u76ee\u6807(\u7ea2\u8272\u7684\u7403\u3001\u8138\u3001\u5730\u6807\u7b49)\u3002\u8fd9\u4e2a\u6a21\u5757\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5728\u76ee\u6807\u68c0\u6d4b\u548c\u8fd0\u52a8\u4e4b\u95f4\u5efa\u7acb\u4e00\u4e2a\u6865\u6881\uff0c\u4f7f\u673a\u5668\u4eba\u4e00\u76f4\u6ce8\u89c6\u7740\u6444\u50cf\u673a\u4e2d\u95f4\u7684\u76ee\u6807\u3002 \u8ddf\u8e2a\u6a21\u5f0f # ALTracker \u8ddf\u8e2a\u6a21\u5f0f\u5982\u4e0b\u6240\u793a\uff1a \u6a21\u5f0f \u63cf\u8ff0 \u89e3\u91ca Head \u9ed8\u8ba4\u6a21\u5f0f\uff08\u53ea\u52a8\u5934\uff09 \u4e24\u4e2a\u5934\u7684\u5173\u8282\u88ab\u63a7\u5236\u6765\u8ddf\u8e2a\u76ee\u6807\u3002 \u4efb\u4f55\u63a7\u5236\u5934\u90e8\u5173\u8282\u7684\u7528\u6237\u547d\u4ee4\u5c06\u4f18\u5148\u4e8e\u8ddf\u8e2a\u547d\u4ee4\u3002 WholeBody \u52a8\u6574\u4e2a\u8eab\u4f53\u6765\u8ddf\u8e2a \u673a\u5668\u4eba\u81ea\u52a8\u4fdd\u6301\u5e73\u8861\uff0c\u5e76\u8c03\u6574\u59ff\u6001\u8ddf\u8e2a\u76ee\u6807\u3002 Move \u79fb\u52a8\u8ddf\u8e2a \u673a\u5668\u4eba\u79fb\u52a8\u4ee5\u4fdd\u6301\u4e0e\u76ee\u6807\u7684\u56fa\u5b9a\u8ddd\u79bb\u3002 \u5728\u6807\u51c6\u914d\u7f6e\u4e2d\uff0c\u4efb\u4f55\u79fb\u52a8\u7528\u6237\u547d\u4ee4\u5c06\u4f18\u5148\u4e8e\u8ddf\u8e2a\u3002 \u8ddf\u8e2a\u7684\u7269\u4f53\u79cd\u7c7b # ALTracker \u53ef\u4ee5\u8ddf\u8e2a\u4ee5\u4e0b\u7269\u4f53\uff1a \u76ee\u6807 \u53c2\u6570 \u89e3\u91ca RedBall \u7403\u76f4\u5f84(\u7c73) \u7528\u4e8e\u8ba1\u7b97\u673a\u5668\u4eba\u4e0e\u7403\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 Face \u8138\u5bbd(\u7c73) \u7528\u4e8e\u8ba1\u7b97\u673a\u5668\u4eba\u4e0e\u4eba\u8138\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 LandMark [size, [LandMarkId, ...]] size\u7528\u4e8e\u8ba1\u7b97\u673a\u5668\u4eba\u4e0e\u5730\u6807\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 LandMarkId\u6307\u5b9a\u8981\u8ddf\u8e2a\u7684\u5730\u6807\u3002 LandMarks [[size, [LandMarkId, ...]], [size, [LandMarkId, ...]]] \u4e0e LandMark \u76f8\u540c\u7684\u53c2\u6570\u3002 \u4e00\u4e2a\u7531\u5730\u6807\u7ec4\u6210\u7684\u6570\u7ec4\u3002 People [peopleId, ...] \u7528\u6765\u8ffd\u8e2a\u6307\u5b9a\u7684\u4eba Sound [distance, confidence] \u5229\u7528distance\u4f30\u8ba1\u58f0\u97f3\u4f4d\u7f6e\uff0c\u5229\u7528confidence\u8fc7\u6ee4\u58f0\u97f3\u4f4d\u7f6e\u3002 \u7269\u4f53\u4f4d\u7f6e\u8bc6\u522b\u5750\u6807\u7cfb # \u8ddf\u8e2a\u6a21\u5757\u8bc6\u522b\u673a\u5668\u4eba\u770b\u5230\u7684\u76ee\u6807\u7684\u4f4d\u7f6e \u5b83\u53ef\u4ee5\u7ed9\u51fa\u76ee\u6807\u5728\u76ee\u6807\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u3002 \u51fd\u6570 ALTracker.getTargetPosition \u8fd4\u56de\u6d3b\u52a8\u76ee\u6807\u7684[x, y, z]\u4f4d\u7f6e\u3002 \u524d\u63d0\u6761\u4ef6 # \u6839\u636e\u6240\u9009\u62e9\u7684 \u6a21\u5f0f \uff0c\u6240\u4f7f\u7528\u7684\u8eab\u4f53\u90e8\u4f4d\u7684 Stiffness \u5fc5\u987b\u8bbe\u7f6e\u4e3a1.0\uff0c\u5426\u5219\u4e0d\u80fd\u79fb\u52a8\u3002\u6b64\u5916\uff0c\u5bf9\u4e8e move \u548c\u5168\u8eab WholeBody \uff0c\u673a\u5668\u4eba\u5fc5\u987b\u5904\u4e8e\u7ad9\u7acb\u59ff\u52bf\uff0c\u51c6\u5907\u79fb\u52a8\u3002 \u8981\u8bbe\u7f6e\u521a\u5ea6\uff0c\u4f7f\u7528motion api ALMotion.stiffnessInterpolation \u3002\u8981\u5230\u8fbe\u9884\u5b9a\u4e49\u7684\u59ff\u52bf\uff0c\u8bf7\u53c2\u8003: ALRobotPosture::goToPosture \u3002 \u51fd\u6570\u65b9\u6cd5 # ALTracker.getActiveTarget() # \u8fd4\u56de ALTracker::track \u68c0\u6d4b\u5230\u7684\u76ee\u6807\u540d\u5b57 Return \uff1aTracked target name ALTracker.getAvailableModes() # \u8fd4\u56de\u53ef\u884c\u7684\u8ddf\u8e2a\u6a21\u5f0f Return \uff1a\u8ddf\u8e2a\u6a21\u5f0f\u540d\u5b57\u5217\u8868 ALTracker.getEffector() # \u8fd4\u56de\u53ef\u884c\u7684\u8ddf\u8e2a\u6a21\u5f0f\uff0c\u83b7\u53d6\u5f53\u524d\u6267\u884c\u5668\u540d\u79f0\u3002\u4f7f\u7528 ALTrackerProxy::setEffector \u8bbe\u7f6e\u8be5\u503c\u3002 Return \uff1a\u5f53\u524d\u6267\u884c\u5668\u540d\u79f0\u3002\u53ef\u80fd\u662f \u201cArms\u201d, \u201cLArm\u201d, \u201cRArm\u201d or \u201cNone\u201d ALTracker.getMaximumAcceleration() # \u83b7\u5f97\u5934\u90e8\u6700\u5927\u52a0\u901f\u5ea6\u3002\u4f7f\u7528 ALTracker.setMaximumAcceleration \u8bbe\u7f6e\u6b64\u503c\u3002 Return : \u4ee5rad.s^-2\u4e3a\u5355\u4f4d\u8fd4\u56de\u6700\u5927\u52a0\u901f\u5ea6 ALTracker.getMaximumVelocity () # \u83b7\u5f97\u5934\u90e8\u6700\u5927\u901f\u5ea6\u3002\u4f7f\u7528 ALTracker.setMaximumVelocity \u6765\u8bbe\u7f6e\u8fd9\u4e2a\u503c\u3002 Return : \u4ee5rad.s^-1\u4e3a\u5355\u4f4d\u8fd4\u56de\u6700\u5927\u901f\u5ea6 ALTracker.getMode () # \u83b7\u53d6\u4f7f\u7528\u7528 ALTracker.setMode \u5b9a\u4e49\u7684\u5f53\u524d\u6a21\u5f0f\u3002 Return : \u5f53\u524d\u8ddf\u8e2a\u5668\u9884\u5b9a\u4e49\u6a21\u5f0f\u3002\u53c2\u89c1:\u8ddf\u8e2a\u6a21\u5f0f\u3002 ALTracker.getRelativePosition () # \u83b7\u53d6\u79fb\u52a8\u6a21\u5f0f\u4e0b\u673a\u5668\u4eba\u76f8\u5bf9\u4e8e\u76ee\u6807\u7684\u4f4d\u7f6e\u3002\u4f7f\u7528ALTracker.setRelativePosition\u8bbe\u7f6e\u8be5\u503c\u3002 Return : \u8fd4\u56de:\u8ddf\u8e2a\u7684\u6700\u7ec8\u76ee\u6807: [coordX, coordY, coordWz, thresholdX, thresholdY, thresholdWz] \u3002 ALTracker.registerTarget(TargetName, Param) # \u7528\u53c2\u6570 (RedBall, \u7ea2\u7403\u76f4\u5f84) \u6ce8\u518c\u9884\u5b9a\u4e49\u7684\u76ee\u6807\u3002\u5982\u679c\u8ddf\u8e2a\u6b63\u5728\u8fd0\u884c\uff0c\u5219\u8ba2\u9605\u76f8\u5e94\u7684\u63d0\u53d6\u5668\u548c\u5b58\u50a8\u6700\u540e\u4f4d\u7f6e\u3002\u5982\u679c\u76ee\u6807\u5df2\u7ecf\u6ce8\u518c\uff0c\u5219\u53ea\u66f4\u65b0\u53c2\u6570\u3002 Parameters: Targetname - \u9884\u5148\u5b9a\u4e49\u7684\u76ee\u6807\u540d\u5b57 Param - \u76ee\u6807\u53c2\u6570 ALTracker.track(TargetName) # \u8bbe\u5b9a\u9884\u5148\u8bbe\u5b9a\u7684\u76ee\u6807\u8fdb\u884c\u8ddf\u8e2a\uff0c\u5e76\u5f00\u59cb\u8ddf\u8e2a\u8fc7\u7a0b\u3002\u76ee\u6807\u540d\u79f0\u4e4b\u524d\u9700\u8981\u6ce8\u518c ALTracker.registerTarget \u3002 Parameters: Targetname - \u9884\u5148\u5b9a\u4e49\u7684\u76ee\u6807\u540d\u5b57 ALTracker.setEffector (Effector) # \u8bbe\u7f6e\u4e00\u4e2a\u672b\u7aef\u6267\u884c\u5668\u79fb\u52a8\u4ee5\u8fdb\u884c\u8ddf\u8e2a\u3002\u8ffd\u8e2a\u5668\u603b\u662f\u7528\u5934\u90e8, \u4f7f\u7528ALTracker.getEffector\u83b7\u53d6\u8be5\u503c\u3002 Parameters: Effector - \u6267\u884c\u5668\u7684\u540d\u5b57\u3002\u53ef\u4ee5\u662f:\" Arms \"\uff0c \" LArm \"\uff0c \" RArm \"\u6216\" None \" ALTracker.setMaximumAcceleration (MaxAcceleration) # \u8bbe\u7f6e\u5934\u90e8\u7684\u6700\u5927\u7edd\u5bf9\u52a0\u901f\u5ea6\u3002 Parameters: MaxAcceleration - \u4ee5rad.s^-2\u4e3a\u5355\u4f4d\u7684\u975e\u8d1f\u6700\u5927\u52a0\u901f\u5ea6 ALTracker.setMaximumDistanceDetection (MaxDistance) # \u8bbe\u7f6e\u76ee\u6807\u68c0\u6d4b\u7684\u6700\u5927\u7edd\u5bf9\u8ddd\u79bb\u3002\u5982\u679c\u5230\u76ee\u6807\u7684\u8ddd\u79bb\u5927\u4e8e\u8fd9\u91cc\u7ed9\u51fa\u7684\u8ddd\u79bb\uff0c\u5219\u8ba4\u4e3a\u76ee\u6807\u4e22\u5931\u4e86\u3002 Parameters: MaxDistance - \u8ddd\u79bb\uff0c\u6b63\uff0c\u5355\u4f4d\u4e3a\u7c73\u3002 ALTracker.setMaximumVelocity (MaxVelocity ) # \u8bbe\u7f6e\u5934\u7684\u6700\u5927\u7edd\u5bf9\u901f\u5ea6\u3002 Parameters: MaxVelocity \u2013 \u901f\u5ea6\uff0c\u975e\u8d1f\uff0c\u5355\u4f4d\u4e3arad.s^-2 ALTracker.setMode (MaxVelocity) # \u5c06\u8ddf\u8e2a\u5668\u8bbe\u7f6e\u4e3a\u9884\u5b9a\u4e49\u6a21\u5f0f\u3002\u4f7f\u7528 ALTracker.getMode \u83b7\u53d6\u8be5\u503c\u3002 Parameters: Mode - \u9884\u5148\u5b9a\u4e49\u7684\u6a21\u5f0f ALTrackerset.RelativePosition (Target) # \u5728\u79fb\u52a8\u6a21\u5f0f\u4e0b\uff0c\u8bbe\u7f6e\u673a\u5668\u4eba\u76f8\u5bf9\u4e8e\u76ee\u6807\u7684\u4f4d\u7f6e\u3002 \u4f7f\u7528 ALTracker.getRelativePosition \u6765\u83b7\u5f97\u8fd9\u4e2a\u503c\u3002 Parameters: Target - \u8ddf\u8e2a\u7684\u6700\u7ec8\u76ee\u6807: [coordX, coordY, coordWz, thresholdX, thresholdY, thresholdWz] ALTracker.stopTracker() # \u505c\u6b62\u8ffd\u8e2a \u8138\u90e8\u8ffd\u8e2a\u5b9e\u4f8b # #! /usr/bin/env python # -*- encoding: UTF-8 -*- \"\"\"Example: Use Tracking Module to Track a Face\"\"\" import qi import argparse import sys import time def main(session, faceSize): \"\"\" This example shows how to use ALTracker with face. \"\"\" # Get the services ALTracker and ALMotion. motion_service = session.service(\"ALMotion\") tracker_service = session.service(\"ALTracker\") # First, wake up. motion_service.wakeUp() # Add target to track. targetName = \"Face\" faceWidth = faceSize tracker_service.registerTarget(targetName, faceWidth) # Then, start tracker. tracker_service.track(targetName) print \"ALTracker successfully started, now show your face to robot!\" print \"Use Ctrl+c to stop this script.\" try: while True: time.sleep(1) except KeyboardInterrupt: print print \"Interrupted by user\" print \"Stopping...\" # Stop tracker. tracker_service.stopTracker() tracker_service.unregisterAllTargets() motion_service.rest() print \"ALTracker stopped.\" if __name__ == \"__main__\": parser = argparse.ArgumentParser() parser.add_argument(\"--ip\", type=str, default=\"127.0.0.1\", help=\"Robot IP address. On robot or Local Naoqi: use '127.0.0.1'.\") parser.add_argument(\"--port\", type=int, default=9559, help=\"Naoqi port number\") parser.add_argument(\"--facesize\", type=float, default=0.1, help=\"Face width.\") args = parser.parse_args() session = qi.Session() try: session.connect(\"tcp://\" + args.ip + \":\" + str(args.port)) except RuntimeError: print (\"Can't connect to Naoqi at ip \\\"\" + args.ip + \"\\\" on port \" + str(args.port) +\".\\n\" \"Please check your script arguments. Run with -h option for help.\") sys.exit(1) main(session, args.facesize)","title":"\u673a\u5668\u4eba\u8fd0\u52a8"},{"location":"motion/#_1","text":"","title":"\u673a\u5668\u4eba\u8fd0\u52a8"},{"location":"motion/#almotion","text":"\u5b83\u5305\u62ec\u56db\u7ec4\u4e3b\u8981\u7684\u63a7\u5236\u65b9\u6cd5: \u5173\u8282\u521a\u5ea6(\u7535\u673a\u57fa\u672c\u5f00\u65ad)\uff1b\u5173\u8282\u4f4d\u7f6e(\u63d2\u8865\u3001\u53cd\u5e94\u63a7\u5236)\uff1b\u6b65\u884c(\u8ddd\u79bb\u548c\u901f\u5ea6\u63a7\u5236\uff0c\u4e16\u754c\u4f4d\u7f6e\u7b49)\uff1b\u7b1b\u5361\u5c14\u7a7a\u95f4\u4e2d\u7684\u673a\u5668\u4eba\u6267\u884c\u5668(\u9006\u8fd0\u52a8\u5b66\uff0c\u5168\u8eab\u7ea6\u675f)\u3002 ALMotion \u6a21\u5757\u8fd8\u5b9e\u73b0\u4e86\u81ea\u78b0\u649e\u907f\u514d\u3001\u5916\u90e8\u78b0\u649e\u907f\u514d\u3001\u8dcc\u843d\u63a7\u5236\u3001\u667a\u80fd\u8c03\u8282\u521a\u5ea6\u548c\u8bca\u65ad\u6548\u679c\u7b49\u529f\u80fd\u3002 ALMotion \u8fd0\u884c\u572850Hz(\u5468\u671f20ms)\u3002\u5728 ALMotion \u4e2d\uff0c\u6bcf\u5f53\u60a8\u8c03\u7528\u4e00\u4e2a\u516c\u5171\u65b9\u6cd5\u6765\u8bf7\u6c42\u4e00\u4e2a\u52a8\u4f5c\u65f6\uff0c\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u201c\u52a8\u4f5c\u4efb\u52a1\u201d\u6765\u5904\u7406\u8be5\u4efb\u52a1\u3002","title":"ALMotion\u6a21\u5757"},{"location":"motion/#_2","text":"X\u8f74\u6b63\u5411\u673a\u5668\u4eba\u7684\u524d\u65b9\uff0cY\u8f74\u4ece\u53f3\u5230\u5de6\uff0cZ\u8f74\u5782\u76f4\u5411\u4e0a\u3002","title":"\u57fa\u672c\u53c2\u6570"},{"location":"motion/#_3","text":"ALMotion \u63d0\u4f9b\u5e2e\u52a9\u673a\u5668\u4eba\u79fb\u52a8\u7684\u65b9\u6cd5\u3002\u5b83\u5305\u542b\u5141\u8bb8\u60a8\u64cd\u4f5c\u5173\u8282\u521a\u5ea6\u3001\u5173\u8282\u89d2\u5ea6\u7684\u547d\u4ee4\uff0c\u4ee5\u53ca\u5141\u8bb8\u60a8\u63a7\u5236\u884c\u8d70\u7684\u66f4\u9ad8\u7ea7\u522bAPI\u3002","title":"\u51fd\u6570\u65b9\u6cd5"},{"location":"motion/#api","text":"","title":"\u521a\u5ea6\u63a7\u5236API"},{"location":"motion/#almotionwakeup","text":"\u5524\u9192\u673a\u5668\u4eba\uff0c\u6253\u5f00\u7535\u673a\uff0c\u5982\u679c\u9700\u8981\uff0c\u6062\u590d\u5230\u521d\u59cb\u4f4d\u7f6e\u3002\u5982\u679c\u673a\u5668\u4eba\u5df2\u7ecf\u6fc0\u6d3b\uff0c\u8c03\u7528\u7acb\u5373\u8fd4\u56deTrue\u3002 \u6210\u529f\u8fd4\u56deTrue, \u5426\u5219\u8fd4\u56deFalse","title":"ALMotion.wakeUp()"},{"location":"motion/#almotionrest","text":"\u4f7f\u673a\u5668\u4eba\u4f11\u7720: \u5e76\u8fdb\u5165\u4e00\u4e2a\u653e\u677e\u548c\u5b89\u5168\u7684\u4f4d\u7f6e\uff0c\u5e76\u5173\u95ed\u7535\u673a\u3002\u4f8b\u5982\uff0c\u8fdb\u5165\u8e72\u59ff\uff0c\u5e76\u5173\u95ed\u521a\u5ea6\u3002","title":"ALMotion.rest()"},{"location":"motion/#almotionsetstiffnessesnames-stiffnesses","text":"\u8bbe\u7f6e\u4e00\u4e2a\u6216\u591a\u4e2a\u5173\u8282\u7684\u521a\u5ea6\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u963b\u585e\u8c03\u7528\u3002 Parameters: names - \u5173\u8282\u540d\u79f0, \u201cBody\u201d, \u201cJointActuators\u201d, \u201cJoints\u201d or \u201cActuators\u201d. stiffness - \u57280\u548c1\u4e4b\u95f4\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u521a\u5ea6\u53c2\u6570\u3002","title":"ALMotion.setStiffnesses(names, stiffnesses)"},{"location":"motion/#almotiongetstiffnessesnames","text":"\u83b7\u53d6\u4e00\u4e2a\u6216\u591a\u4e2a\u5173\u8282\u7684\u521a\u5ea6\u3002 Parameters: names - \u5173\u8282\u540d\u79f0, \u201cBody\u201d, \u201cJointActuators\u201d, \u201cJoints\u201d or \u201cActuators\u201d. Return \uff1a stiffness - \u57280\u548c1\u4e4b\u95f4\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u521a\u5ea6\u53c2\u6570\u3002","title":"ALMotion.getStiffnesses(names)"},{"location":"motion/#_4","text":"","title":"\u5173\u8282\u63a7\u5236"},{"location":"motion/#almotionangleinterpolationwithspeednamestargetanglesmaxspeedfraction","text":"\u63d2\u503c\u4f7f\u4e00\u4e2a\u6216\u591a\u4e2a\u5173\u8282\u5230\u4e00\u4e2a\u76ee\u6807\u89d2\u5ea6\uff0c\u4f7f\u7528\u4e00\u4e2a\u6700\u5927\u5173\u8282\u901f\u5ea6\u7684\u767e\u5206\u6bd4\u3002\u6bcf\u4e2a\u5173\u8282\u53ea\u5141\u8bb8\u4e00\u4e2a\u76ee\u6807\u89d2\u3002\u8fd9\u662f\u4e00\u4e2a\u963b\u585e\u8c03\u7528\u3002 Parameters: names -\u5173\u8282\u540d\u79f0, \u201cBody\u201d, \u201cJointActuators\u201d, \u201cJoints\u201d or \u201cActuators\u201d. targetAngles -\u4ee5\u5f27\u5ea6\u8868\u793a\u7684\u89d2\u3001\u89d2\u5217\u8868\u6216\u89d2\u5217\u8868 maxSpeedFraction - \u4e00\u4e2a\u767e\u5206\u6bd4","title":"ALMotion.angleInterpolationWithSpeed(names,targetAngles,maxSpeedFraction)"},{"location":"motion/#almotionsetanglesnames-angles-fractionmaxspeed","text":"\u8bbe\u7f6e\u89d2\u5ea6\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u963b\u585e\u8c03\u7528\u3002 Parameters: names -\u5173\u8282\u540d\u79f0, \u201cBody\u201d, \u201cJointActuators\u201d, \u201cJoints\u201d or \u201cActuators\u201d. targetAngles -\u4ee5\u5f27\u5ea6\u8868\u793a\u7684\u89d2\u3001\u89d2\u5217\u8868\u6216\u89d2\u5217\u8868 fractionMaxSpeed - \u5360\u6700\u5927\u901f\u5ea6\u7684\u767e\u5206\u6bd4","title":"ALMotion.setAngles(names, angles, fractionMaxSpeed)"},{"location":"motion/#almotionchangeanglesnames-angles-fractionmaxspeed","text":"\u6539\u53d8\u89d2\u5ea6\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u963b\u585e\u8c03\u7528\u3002 Parameters: names -\u5173\u8282\u540d\u79f0, \u201cBody\u201d, \u201cJointActuators\u201d, \u201cJoints\u201d or \u201cActuators\u201d. targetAngles -\u4ee5\u5f27\u5ea6\u8868\u793a\u7684\u89d2\u3001\u89d2\u5217\u8868\u6216\u89d2\u5217\u8868 fractionMaxSpeed - \u5360\u6700\u5927\u901f\u5ea6\u7684\u767e\u5206\u6bd4","title":"ALMotion.changeAngles(names, angles, fractionMaxSpeed)"},{"location":"motion/#almotiongetanglesnames-usesensors","text":"\u83b7\u5f97\u6240\u6709\u5173\u8282\u7684\u89d2\u5ea6 Parameters: names -\u5173\u8282\u540d\u79f0, \u201c Body \u201d, \u201c JointActuators \u201d, \u201c Joints \u201d or \u201c Actuators \u201d. useSensors -\u5982\u679c\u8bbe\u7f6e\u4e3aTrue\uff0c \u4f20\u611f\u5668\u89d2\u5ea6\u4f1a\u88ab\u8fd4\u56de Return\uff1a \u4ee5\u5f27\u5ea6\u4e3a\u5355\u4f4d\u7684\u5173\u8282\u89d2\u5ea6","title":"ALMotion.getAngles(names, useSensors)"},{"location":"motion/#_5","text":"","title":"\u8fd0\u52a8\u63a7\u5236"},{"location":"motion/#almotionmovex-y-theta","text":"\u4f7f\u673a\u5668\u4eba\u4ee5\u7ed9\u5b9a\u7684\u901f\u5ea6\u8fd0\u52a8\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u963b\u585e\u8c03\u7528\u3002 Parameters: x -\u6cbfx\u8f74\u7684\u901f\u5ea6\uff0c\u5355\u4f4d\u662f\u7c73\u6bcf\u79d2\u3002\u5411\u540e\u8fd0\u52a8\u4e3a\u8d1f\u503c y -\u6cbfy\u8f74\u7684\u901f\u5ea6\uff0c\u5355\u4f4d\u662f\u7c73\u6bcf\u79d2\u3002\u5411\u5de6\u79fb\u52a8\u4e3a\u6b63\u503c theta - \u7ed5z\u8f74\u7684\u901f\u5ea6\uff0c\u5355\u4f4d\u662f\u5f27\u5ea6/\u79d2\u3002\u987a\u65f6\u9488\u65cb\u8f6c\u4e3a\u8d1f\u503c\u3002","title":"ALMotion.move(x, y, theta)"},{"location":"motion/#almotionmovetowardx-y-theta","text":"\u4f7f\u673a\u5668\u4eba\u4ee5\u7ed9\u5b9a\u7684\u5f52\u4e00\u5316\u901f\u5ea6\u8fd0\u52a8\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u963b\u585e\u8c03\u7528\u3002 Parameters: x -\u6cbfx\u8f74\u7684\u5f52\u4e00\u5316\u901f\u5ea6\uff0c\u5355\u4f4d\u662f\u7c73\u6bcf\u79d2\u3002\u5411\u540e\u8fd0\u52a8\u4e3a\u8d1f\u503c\uff0c+1\u4e3a\u6700\u5927\u503c y -\u6cbfy\u8f74\u7684\u5f52\u4e00\u5316\u901f\u5ea6\uff0c\u5355\u4f4d\u662f\u7c73\u6bcf\u79d2\u3002\u5411\u5de6\u79fb\u52a8\u4e3a\u6b63\u503c\uff0c+1\u4e3a\u6700\u5c0f\u503c theta - \u7ed5z\u8f74\u7684\u5f52\u4e00\u5316\u901f\u5ea6\uff0c\u5355\u4f4d\u662f\u5f27\u5ea6/\u79d2\u3002\u987a\u65f6\u9488\u65cb\u8f6c\u4e3a\u8d1f\u503c\u3002","title":"ALMotion.moveToward(x, y, theta)"},{"location":"motion/#almotionmovetox-y-theta","text":"\u4f7f\u673a\u5668\u4eba\u4ee5\u7ed9\u5b9a\u7684\u5f52\u4e00\u5316\u901f\u5ea6\u8fd0\u52a8\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u963b\u585e\u8c03\u7528\u3002 Parameters: x -\u6cbfx\u8f74\u7684\u8ddd\u79bb\uff0c\u5355\u4f4d\u662f\u7c73 y -\u6cbfy\u8f74\u7684\u8ddd\u79bb\uff0c\u5355\u4f4d\u662f\u7c73 theta - \u7ed5z\u8f74\u7684\u65cb\u8f6c\uff0c\u5355\u4f4d\u662f\u5f27\u5ea6\uff0c \u8303\u56f4\u4e3a[-3.1415 to 3.1415]\u3002 Return\uff1a \u5982\u679c\u62b5\u8fbe\u8fd4\u56deTrue, \u88ab\u4e2d\u65ad\u5219\u8fd4\u56deFalse","title":"ALMotion.moveTo(x, y, theta)"},{"location":"motion/#almotionstopmove","text":"\u505c\u6b62\u8fd0\u52a8","title":"ALMotion.stopMove()"},{"location":"motion/#_6","text":"","title":"\u7b1b\u5361\u5c14\u63a7\u5236"},{"location":"motion/#almotionsetpositionseffectornames-frame-position-fractionmaxspeed-axismask","text":"\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u79fb\u52a8\u672b\u7aef\u6267\u884c\u5668\u5230\u7ed9\u5b9a\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u3002\u8fd9\u662f\u4e00\u4e2a\u963b\u585e\u8c03\u7528\u3002 Parameters: effectorNames - Name or names of effector. Could be: \u201cTorso\u201d or chain name. frame -\u4efb\u52a1\u5750\u6807\u7cfb position - Position6D array (x,y,z,wx,wy,wz) in meters and radians fractionMaxSpeed - \u6700\u5927\u901f\u5ea6\u7684\u767e\u5206\u6bd4 axisMask - The Axis Mask or Axis Mask list. True for axes that you wish to control. e.g. 7 for position only, 56 for rotation only and 63 for both #! /usr/bin/env python # -*- encoding: UTF-8 -*- \"\"\"Example: Use setPositions Method\"\"\" import qi import argparse import sys import time import motion def main(session): \"\"\" This example uses the setPositions method. \"\"\" # Get the services ALMotion & ALRobotPosture. motion_service = session.service(\"ALMotion\") posture_service = session.service(\"ALRobotPosture\") # Wake up robot motion_service.wakeUp() # Send robot to Pose Init posture_service.goToPosture(\"StandInit\", 0.5) # Example showing how to set LArm Position, using a fraction of max speed chainName = \"LArm\" frame = motion.FRAME_TORSO useSensor = False # Get the current position of the chainName in the same frame current = motion_service.getPosition(chainName, frame, useSensor) target = [ current[0] + 0.05, current[1] + 0.05, current[2] + 0.05, current[3] + 0.0, current[4] + 0.0, current[5] + 0.0] fractionMaxSpeed = 0.5 axisMask = 7 # just control position motion_service.setPositions(chainName, frame, target, fractionMaxSpeed, axisMask) time.sleep(1.0) # Example showing how to set Torso Position, using a fraction of max speed chainName = \"Torso\" frame = motion.FRAME_ROBOT position = [0.0, 0.0, 0.25, 0.0, 0.0, 0.0] # Absolute Position fractionMaxSpeed = 0.2 axisMask = 63 motion_service.setPositions(chainName, frame, position, fractionMaxSpeed, axisMask) time.sleep(4.0) # Go to rest position motion_service.rest() if __name__ == \"__main__\": parser = argparse.ArgumentParser() parser.add_argument(\"--ip\", type=str, default=\"127.0.0.1\", help=\"Robot IP address. On robot or Local Naoqi: use '127.0.0.1'.\") parser.add_argument(\"--port\", type=int, default=9559, help=\"Naoqi port number\") args = parser.parse_args() session = qi.Session() try: session.connect(\"tcp://\" + args.ip + \":\" + str(args.port)) except RuntimeError: print (\"Can't connect to Naoqi at ip \\\"\" + args.ip + \"\\\" on port \" + str(args.port) +\".\\n\" \"Please check your script arguments. Run with -h option for help.\") sys.exit(1) main(session)","title":"ALMotion.setPositions(effectorNames, frame, position, fractionMaxSpeed, axisMask)"},{"location":"motion/#almotiongetpositionsname-frame-usesensorvalues","text":"\u83b7\u53d6\u76f8\u5bf9\u4e8e\u5750\u6807\u7cfb\u7684\u4f4d\u7f6e\u3002x\u8f74\u4e3a\u6b63\u65b9\u5411\uff0cy\u8f74\u4ece\u53f3\u5230\u5de6\uff0cz\u8f74\u4e3a\u5782\u76f4\u65b9\u5411\u3002Position6D\u7684\u89d2\u5ea6\u7ea6\u5b9a\u662fRot_z(wz). rot_y (wy). rot_x (wx)\u3002 Parameters: name - Name or names of effector. Could be: \u201cTorso\u201d or chain name. frame -\u4efb\u52a1\u5750\u6807\u7cfb useSensorValues - \u5982\u679c\u4e3a\u771f\uff0c\u4f20\u611f\u5668\u503c\u5c06\u7528\u4e8e\u786e\u5b9a\u4f4d\u7f6e\u3002","title":"ALMotion.getPositions(name, frame, useSensorValues)"},{"location":"motion/#alrobotposture","text":"ALRobotPosture \u6a21\u5757\u53ef\u4ee5\u8ba9\u673a\u5668\u4eba\u5207\u6362\u5230\u4e0d\u540c\u7684\u9884\u5b9a\u4e49\u59ff\u52bf\u3002\u60a8\u53ef\u4ee5\u5728 ALRobot.goToPosture \u548c ALRobotPosture.applyPosture \u4e4b\u95f4\u9009\u62e9\u3002 \u5982\u679c\u4f60\u60f3\u521b\u5efa\u4e00\u4e2a\u673a\u5668\u4eba\u81ea\u52a8\u6267\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u8bf7\u59cb\u7ec8\u9009\u62e9 ALRobotPosture.goToPosture \u3002 \u5728\u64cd\u4f5c\u673a\u5668\u4eba\u65f6\uff0c\u5982\u679c\u4f60\u53ea\u662f\u60f3\u8981\u5feb\u901f\u5230\u8fbe\u59ff\u52bf\u7684\u6377\u5f84\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 ALRobotPosture.applyPosture (\u4f60\u5c06\u4e0d\u5f97\u4e0d\u5e2e\u52a9\u673a\u5668\u4eba)\u3002 \u673a\u5668\u4eba\u68c0\u6d4b\u5230\u5b83\u5f53\u524d\u7684\u59ff\u6001\uff0c\u5e76\u81ea\u52a8\u8ba1\u7b97\u4ece\u5f53\u524d\u59ff\u6001\u5230\u76ee\u6807\u59ff\u6001\u7684\u8def\u5f84\uff0c\u7136\u540e\u6267\u884c\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u6267\u884c\u901f\u5ea6\u7684\u5feb\u6162\u3002","title":"ALRobotPosture\u6a21\u5757"},{"location":"motion/#_7","text":"\u673a\u5668\u4eba\u7684\u59ff\u6001\u662f\u5176\u5173\u8282\u548c\u60ef\u6027\u4f20\u611f\u5668\u7684(\u72ec\u7279\u7684)\u7ed3\u6784\u3002\u7531\u4e8e\u59ff\u52bf\u662f\u7531\u4e00\u7ec4\u5b9e\u6570(\u6bd4\u5982\u6d6e\u70b9\u6570)\u5b9a\u4e49\u7684\uff0c\u6240\u4ee5\u59ff\u52bf\u7684\u6570\u91cf\u662f\u65e0\u9650\u7684\u3002 \u4ee5\u4e0b\u662f\u9884\u5148\u5b9a\u4e49\u7684\u59ff\u52bf\u540d\u79f0\u5217\u8868: Crouch , LyingBack , LyingBelly , Sit , SitRelax , Stand , StandInit , StandZero . Posture Family: Posture Family Description \u201c Standing \u201d \u91cd\u91cf\u7531\u811a\u652f\u6491\uff0c\u8eaf\u5e72\u76f4\u7acb\uff0c\u817f\u76f4\u7acb\u3002 \u201c Crouching \u201d \u91cd\u91cf\u7531\u811a\u652f\u6491\uff0c\u8eaf\u5e72\u76f4\u7acb\uff0c\u817f\u5f2f\u66f2\u3002 \u201c Sitting \u201d \u81c0\u90e8\u4e0e\u5730\u9762\u63a5\u89e6\uff0c\u8eaf\u5e72\u76f4\u7acb\u3002 \u201c SittingOnChair \u201d \u81c0\u90e8\u4e0e\u6905\u5b50(10\u5398\u7c73\u9ad8)\u63a5\u89e6\uff0c\u8eaf\u5e72\u76f4\u7acb\u3002 \u201c LyingBelly \u201d \u8eba\u4e0b\uff0c\u8138\u671d\u4e0b\u3002 \u201c LyingBack \u201d \u8eba\u4e0b\uff0c\u8138\u671d\u4e0a\u3002 \u201c LyingLeft \u201d \u8eba\u4e0b\uff0c\u8138\u671d\u5de6\u3002 \u201c LyingRight \u201d \u8eba\u4e0b\uff0c\u8138\u671d\u53f3\u3002 \u201c Belly \u201d \u8138\u671d\u4e0b\uff0c\u8eaf\u5e72\u62ac\u8d77\u3002 \u201c Back \u201d \u8138\u671d\u4e0a\uff0c\u8eaf\u5e72\u62ac\u8d77\u3002 \u201c Left \u201d \u5411\u5de6\u503e\u659c\uff0c\u624b\u89e6\u5730\u3002 \u201c Right \u201d \u5411\u53f3\u503e\u659c\uff0c\u624b\u89e6\u5730\u3002","title":"\u9884\u5b9a\u4e49\u59ff\u52bf"},{"location":"motion/#_8","text":"","title":"\u51fd\u6570\u65b9\u6cd5"},{"location":"motion/#alrobotposturegetposturelist","text":"Return\uff1a \u6240\u6709\u9884\u5b9a\u4e49\u7684\u673a\u5668\u4eba\u59ff\u52bf\u7684vector from naoqi import ALProxy posture = ALProxy(\"ALRobotPosture\", \"<IP of your robot>\", 9559) posture.getPostureList() ['Crouch', 'LyingBack', 'LyingBelly', 'Sit', 'SitOnChair', 'SitRelax', 'Stand', 'StandInit', 'StandZero']","title":"ALRobotPosture.getPostureList()"},{"location":"motion/#alrobotposturegetposture","text":"\u8fd4\u56de\u5f53\u524d\u9884\u5b9a\u4e49\u59ff\u52bf\u7684\u540d\u79f0\u3002\u5982\u679c\u5f53\u524d\u59ff\u52bf\u4e0d\u5728\u9884\u5b9a\u4e49\u59ff\u52bf\u4e2d\uff0c\u5219\u8fd4\u56de\"\u672a\u77e5\" Return: \u5f53\u524d\u59ff\u52bf\u7684\u5b57\u7b26\u4e32 from naoqi import ALProxy posture = ALProxy(\"ALRobotPosture\", \"<IP of your robot>\", 9559) posture.getPosture()","title":"ALRobotPosture.getPosture()"},{"location":"motion/#alrobotposturegotoposture-posturenamespeed","text":"\u4f7f\u673a\u5668\u4eba\u8fdb\u5165\u53c2\u6570\u4e2d\u8981\u6c42\u7684\u9884\u5b9a\u4e49\u59ff\u6001\uff0c\u53ef\u4ee5\u4fee\u6539\u79fb\u52a8\u7684\u901f\u5ea6\u3002\u673a\u5668\u4eba\u52a8\u4f5c\u662f\u201c\u667a\u80fd\u201d\u7684:\u4ece\u673a\u5668\u4eba\u5f00\u59cb\u7684\u59ff\u6001\u5f00\u59cb\uff0c\u9009\u62e9\u6240\u6709\u5e94\u8be5\u7684\u6b65\u9aa4\u5230\u8fbe\u6240\u8981\u6c42\u7684\u59ff\u6001\u3002 Parameters: postureName \uff1a\u76ee\u6807\u9884\u5b9a\u4e49\u59ff\u52bf\u540d\u79f0\u5b57\u7b26\u4e32 speed \uff1a\u76f8\u5bf9\u901f\u5ea6\uff0c\u5927\u5c0f\u4e3a0.0-1.0 Return\uff1a \u8fbe\u5230\u76ee\u6807\u59ff\u52bf\u540e\u8fd4\u56deTrue from naoqi import ALProxy posture = ALProxy(\"ALRobotPosture\", \"<IP of your robot>\", 9559) posture.goToPosture(postureName\uff0cspeed)","title":"ALRobotPosture.goToPosture (postureName\uff0cspeed)"},{"location":"motion/#alrobotpostureapplypostureposturenamespeed","text":"\u8bbe\u5b9a\u673a\u5668\u4eba\u7684\u9884\u5b9a\u59ff\u52bf\u7684\u6240\u6709\u5173\u8282\u3002\u64cd\u7eb5\u673a\u5668\u4eba\u7684\u52a8\u6001\u884c\u4e3a\u65f6\u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\uff0c\u5982\u679c\u9700\u8981\u673a\u5668\u4eba\u5feb\u901f\u8fbe\u5230\u4e00\u4e2a\u59ff\u52bf\uff0c\u5219\u9700\u8981\u64cd\u4f5c\u8005\u7684\u5e2e\u52a9\u3002\u8c28\u614e\u4f7f\u7528\u6b64\u529f\u80fd\uff0c\u547d\u4ee4\u7684\u4f5c\u7528\u662f\u5373\u65f6\u3001\u65e0\u201c\u667a\u80fd\u201d\u7684\uff0c\u5982\u679c\u673a\u5668\u4eba\u6b63\u5750\u7740\uff0c\u8fd0\u7528\u6b64\u547d\u4ee4\u8981\u6c42\u673a\u5668\u4eba\u7ad9\u8d77\u6765\uff0c\u5219\u5bf9\u673a\u5668\u4eba\u53ef\u80fd\u8dcc\u5230\u3002 Parameters: postureName \uff1a\u76ee\u6807\u9884\u5b9a\u4e49\u59ff\u52bf\u540d\u79f0\u5b57\u7b26\u4e32 speed \uff1a\u76f8\u5bf9\u901f\u5ea6\uff0c\u5927\u5c0f\u4e3a0.0-1.0 Return\uff1a \u8fbe\u5230\u76ee\u6807\u59ff\u52bf\u540e\u8fd4\u56deTrue from naoqi import ALProxy posture = ALProxy(\"ALRobotPosture\", \"<IP of your robot>\", 9559) posture.goToPosture(postureName,speed)","title":"ALRobotPosture.applyPosture(postureName,speed)"},{"location":"motion/#alrobotposturestopmove","text":"\u505c\u6b62\u76ee\u524d\u7684\u59ff\u52bf from naoqi import ALProxy posture = ALProxy(\"ALRobotPosture\", \"<IP of your robot>\", 9559) posture.stop()","title":"ALRobotPosture.stopMove( )"},{"location":"motion/#alrobotposturegetposturefamily","text":"\u83b7\u53d6\u5f53\u524d\u59ff\u52bf\u6240\u5728\u7684\u5206\u7c7b Return\uff1a \u5f53\u524d\u59ff\u52bf\u6240\u5728\u7684\u7c7b\u522b","title":"ALRobotPosture.getPostureFamily( )"},{"location":"motion/#alrobotpostureproxygetposturefamilylist","text":"\u83b7\u53d6\u6240\u6709\u9884\u5b9a\u4e49\u7684\u59ff\u52bf\u5206\u7c7b Return\uff1a \u6240\u6709\u9884\u5b9a\u4e49\u7684\u59ff\u52bf\u5206\u7c7b\u7684vector from naoqi import ALProxy posture = ALProxy(\"ALRobotPosture\", \"<IP of your robot>\", 9559) posture.getPosturFamilyeList() ['Belly', 'Crouching', 'Left', 'LyingBack', 'LyingBelly', 'LyingLeft', 'LyingRight', 'Right', 'Sitting', 'SittingOnChair', 'Standing', 'Unknown']","title":"ALRobotPostureProxy.getPostureFamilyList( )"},{"location":"motion/#alrobotposturesetmaxtrynumbermaxtrynumber","text":"\u8bbe\u7f6e\u6700\u5927\u5c1d\u8bd5\u6b21\u6570 Parameters: maxTryNumber \uff1a\u5c1d\u8bd5\u6b21\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a3","title":"ALRobotPosture.setMaxTryNumber(maxTryNumber)"},{"location":"motion/#altracker","text":"ALTracker\u6a21\u5757\u5141\u8bb8\u673a\u5668\u4eba\u7528\u4e0d\u540c\u7684\u65b9\u5f0f(\u5934\u90e8\u3001\u5168\u8eab\u3001\u79fb\u52a8\u7b49)\u8ddf\u8e2a\u4e0d\u540c\u7684\u76ee\u6807(\u7ea2\u8272\u7684\u7403\u3001\u8138\u3001\u5730\u6807\u7b49)\u3002\u8fd9\u4e2a\u6a21\u5757\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5728\u76ee\u6807\u68c0\u6d4b\u548c\u8fd0\u52a8\u4e4b\u95f4\u5efa\u7acb\u4e00\u4e2a\u6865\u6881\uff0c\u4f7f\u673a\u5668\u4eba\u4e00\u76f4\u6ce8\u89c6\u7740\u6444\u50cf\u673a\u4e2d\u95f4\u7684\u76ee\u6807\u3002","title":"ALTracker\u6a21\u5757"},{"location":"motion/#_9","text":"ALTracker \u8ddf\u8e2a\u6a21\u5f0f\u5982\u4e0b\u6240\u793a\uff1a \u6a21\u5f0f \u63cf\u8ff0 \u89e3\u91ca Head \u9ed8\u8ba4\u6a21\u5f0f\uff08\u53ea\u52a8\u5934\uff09 \u4e24\u4e2a\u5934\u7684\u5173\u8282\u88ab\u63a7\u5236\u6765\u8ddf\u8e2a\u76ee\u6807\u3002 \u4efb\u4f55\u63a7\u5236\u5934\u90e8\u5173\u8282\u7684\u7528\u6237\u547d\u4ee4\u5c06\u4f18\u5148\u4e8e\u8ddf\u8e2a\u547d\u4ee4\u3002 WholeBody \u52a8\u6574\u4e2a\u8eab\u4f53\u6765\u8ddf\u8e2a \u673a\u5668\u4eba\u81ea\u52a8\u4fdd\u6301\u5e73\u8861\uff0c\u5e76\u8c03\u6574\u59ff\u6001\u8ddf\u8e2a\u76ee\u6807\u3002 Move \u79fb\u52a8\u8ddf\u8e2a \u673a\u5668\u4eba\u79fb\u52a8\u4ee5\u4fdd\u6301\u4e0e\u76ee\u6807\u7684\u56fa\u5b9a\u8ddd\u79bb\u3002 \u5728\u6807\u51c6\u914d\u7f6e\u4e2d\uff0c\u4efb\u4f55\u79fb\u52a8\u7528\u6237\u547d\u4ee4\u5c06\u4f18\u5148\u4e8e\u8ddf\u8e2a\u3002","title":"\u8ddf\u8e2a\u6a21\u5f0f"},{"location":"motion/#_10","text":"ALTracker \u53ef\u4ee5\u8ddf\u8e2a\u4ee5\u4e0b\u7269\u4f53\uff1a \u76ee\u6807 \u53c2\u6570 \u89e3\u91ca RedBall \u7403\u76f4\u5f84(\u7c73) \u7528\u4e8e\u8ba1\u7b97\u673a\u5668\u4eba\u4e0e\u7403\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 Face \u8138\u5bbd(\u7c73) \u7528\u4e8e\u8ba1\u7b97\u673a\u5668\u4eba\u4e0e\u4eba\u8138\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 LandMark [size, [LandMarkId, ...]] size\u7528\u4e8e\u8ba1\u7b97\u673a\u5668\u4eba\u4e0e\u5730\u6807\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 LandMarkId\u6307\u5b9a\u8981\u8ddf\u8e2a\u7684\u5730\u6807\u3002 LandMarks [[size, [LandMarkId, ...]], [size, [LandMarkId, ...]]] \u4e0e LandMark \u76f8\u540c\u7684\u53c2\u6570\u3002 \u4e00\u4e2a\u7531\u5730\u6807\u7ec4\u6210\u7684\u6570\u7ec4\u3002 People [peopleId, ...] \u7528\u6765\u8ffd\u8e2a\u6307\u5b9a\u7684\u4eba Sound [distance, confidence] \u5229\u7528distance\u4f30\u8ba1\u58f0\u97f3\u4f4d\u7f6e\uff0c\u5229\u7528confidence\u8fc7\u6ee4\u58f0\u97f3\u4f4d\u7f6e\u3002","title":"\u8ddf\u8e2a\u7684\u7269\u4f53\u79cd\u7c7b"},{"location":"motion/#_11","text":"\u8ddf\u8e2a\u6a21\u5757\u8bc6\u522b\u673a\u5668\u4eba\u770b\u5230\u7684\u76ee\u6807\u7684\u4f4d\u7f6e \u5b83\u53ef\u4ee5\u7ed9\u51fa\u76ee\u6807\u5728\u76ee\u6807\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u3002 \u51fd\u6570 ALTracker.getTargetPosition \u8fd4\u56de\u6d3b\u52a8\u76ee\u6807\u7684[x, y, z]\u4f4d\u7f6e\u3002","title":"\u7269\u4f53\u4f4d\u7f6e\u8bc6\u522b\u5750\u6807\u7cfb"},{"location":"motion/#_12","text":"\u6839\u636e\u6240\u9009\u62e9\u7684 \u6a21\u5f0f \uff0c\u6240\u4f7f\u7528\u7684\u8eab\u4f53\u90e8\u4f4d\u7684 Stiffness \u5fc5\u987b\u8bbe\u7f6e\u4e3a1.0\uff0c\u5426\u5219\u4e0d\u80fd\u79fb\u52a8\u3002\u6b64\u5916\uff0c\u5bf9\u4e8e move \u548c\u5168\u8eab WholeBody \uff0c\u673a\u5668\u4eba\u5fc5\u987b\u5904\u4e8e\u7ad9\u7acb\u59ff\u52bf\uff0c\u51c6\u5907\u79fb\u52a8\u3002 \u8981\u8bbe\u7f6e\u521a\u5ea6\uff0c\u4f7f\u7528motion api ALMotion.stiffnessInterpolation \u3002\u8981\u5230\u8fbe\u9884\u5b9a\u4e49\u7684\u59ff\u52bf\uff0c\u8bf7\u53c2\u8003: ALRobotPosture::goToPosture \u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"motion/#_13","text":"","title":"\u51fd\u6570\u65b9\u6cd5"},{"location":"motion/#altrackergetactivetarget","text":"\u8fd4\u56de ALTracker::track \u68c0\u6d4b\u5230\u7684\u76ee\u6807\u540d\u5b57 Return \uff1aTracked target name","title":"ALTracker.getActiveTarget()"},{"location":"motion/#altrackergetavailablemodes","text":"\u8fd4\u56de\u53ef\u884c\u7684\u8ddf\u8e2a\u6a21\u5f0f Return \uff1a\u8ddf\u8e2a\u6a21\u5f0f\u540d\u5b57\u5217\u8868","title":"ALTracker.getAvailableModes()"},{"location":"motion/#altrackergeteffector","text":"\u8fd4\u56de\u53ef\u884c\u7684\u8ddf\u8e2a\u6a21\u5f0f\uff0c\u83b7\u53d6\u5f53\u524d\u6267\u884c\u5668\u540d\u79f0\u3002\u4f7f\u7528 ALTrackerProxy::setEffector \u8bbe\u7f6e\u8be5\u503c\u3002 Return \uff1a\u5f53\u524d\u6267\u884c\u5668\u540d\u79f0\u3002\u53ef\u80fd\u662f \u201cArms\u201d, \u201cLArm\u201d, \u201cRArm\u201d or \u201cNone\u201d","title":"ALTracker.getEffector()"},{"location":"motion/#altrackergetmaximumacceleration","text":"\u83b7\u5f97\u5934\u90e8\u6700\u5927\u52a0\u901f\u5ea6\u3002\u4f7f\u7528 ALTracker.setMaximumAcceleration \u8bbe\u7f6e\u6b64\u503c\u3002 Return : \u4ee5rad.s^-2\u4e3a\u5355\u4f4d\u8fd4\u56de\u6700\u5927\u52a0\u901f\u5ea6","title":"ALTracker.getMaximumAcceleration()"},{"location":"motion/#altrackergetmaximumvelocity","text":"\u83b7\u5f97\u5934\u90e8\u6700\u5927\u901f\u5ea6\u3002\u4f7f\u7528 ALTracker.setMaximumVelocity \u6765\u8bbe\u7f6e\u8fd9\u4e2a\u503c\u3002 Return : \u4ee5rad.s^-1\u4e3a\u5355\u4f4d\u8fd4\u56de\u6700\u5927\u901f\u5ea6","title":"ALTracker.getMaximumVelocity ()"},{"location":"motion/#altrackergetmode","text":"\u83b7\u53d6\u4f7f\u7528\u7528 ALTracker.setMode \u5b9a\u4e49\u7684\u5f53\u524d\u6a21\u5f0f\u3002 Return : \u5f53\u524d\u8ddf\u8e2a\u5668\u9884\u5b9a\u4e49\u6a21\u5f0f\u3002\u53c2\u89c1:\u8ddf\u8e2a\u6a21\u5f0f\u3002","title":"ALTracker.getMode ()"},{"location":"motion/#altrackergetrelativeposition","text":"\u83b7\u53d6\u79fb\u52a8\u6a21\u5f0f\u4e0b\u673a\u5668\u4eba\u76f8\u5bf9\u4e8e\u76ee\u6807\u7684\u4f4d\u7f6e\u3002\u4f7f\u7528ALTracker.setRelativePosition\u8bbe\u7f6e\u8be5\u503c\u3002 Return : \u8fd4\u56de:\u8ddf\u8e2a\u7684\u6700\u7ec8\u76ee\u6807: [coordX, coordY, coordWz, thresholdX, thresholdY, thresholdWz] \u3002","title":"ALTracker.getRelativePosition ()"},{"location":"motion/#altrackerregistertargettargetname-param","text":"\u7528\u53c2\u6570 (RedBall, \u7ea2\u7403\u76f4\u5f84) \u6ce8\u518c\u9884\u5b9a\u4e49\u7684\u76ee\u6807\u3002\u5982\u679c\u8ddf\u8e2a\u6b63\u5728\u8fd0\u884c\uff0c\u5219\u8ba2\u9605\u76f8\u5e94\u7684\u63d0\u53d6\u5668\u548c\u5b58\u50a8\u6700\u540e\u4f4d\u7f6e\u3002\u5982\u679c\u76ee\u6807\u5df2\u7ecf\u6ce8\u518c\uff0c\u5219\u53ea\u66f4\u65b0\u53c2\u6570\u3002 Parameters: Targetname - \u9884\u5148\u5b9a\u4e49\u7684\u76ee\u6807\u540d\u5b57 Param - \u76ee\u6807\u53c2\u6570","title":"ALTracker.registerTarget(TargetName, Param)"},{"location":"motion/#altrackertracktargetname","text":"\u8bbe\u5b9a\u9884\u5148\u8bbe\u5b9a\u7684\u76ee\u6807\u8fdb\u884c\u8ddf\u8e2a\uff0c\u5e76\u5f00\u59cb\u8ddf\u8e2a\u8fc7\u7a0b\u3002\u76ee\u6807\u540d\u79f0\u4e4b\u524d\u9700\u8981\u6ce8\u518c ALTracker.registerTarget \u3002 Parameters: Targetname - \u9884\u5148\u5b9a\u4e49\u7684\u76ee\u6807\u540d\u5b57","title":"ALTracker.track(TargetName)"},{"location":"motion/#altrackerseteffector-effector","text":"\u8bbe\u7f6e\u4e00\u4e2a\u672b\u7aef\u6267\u884c\u5668\u79fb\u52a8\u4ee5\u8fdb\u884c\u8ddf\u8e2a\u3002\u8ffd\u8e2a\u5668\u603b\u662f\u7528\u5934\u90e8, \u4f7f\u7528ALTracker.getEffector\u83b7\u53d6\u8be5\u503c\u3002 Parameters: Effector - \u6267\u884c\u5668\u7684\u540d\u5b57\u3002\u53ef\u4ee5\u662f:\" Arms \"\uff0c \" LArm \"\uff0c \" RArm \"\u6216\" None \"","title":"ALTracker.setEffector (Effector)"},{"location":"motion/#altrackersetmaximumacceleration-maxacceleration","text":"\u8bbe\u7f6e\u5934\u90e8\u7684\u6700\u5927\u7edd\u5bf9\u52a0\u901f\u5ea6\u3002 Parameters: MaxAcceleration - \u4ee5rad.s^-2\u4e3a\u5355\u4f4d\u7684\u975e\u8d1f\u6700\u5927\u52a0\u901f\u5ea6","title":"ALTracker.setMaximumAcceleration (MaxAcceleration)"},{"location":"motion/#altrackersetmaximumdistancedetection-maxdistance","text":"\u8bbe\u7f6e\u76ee\u6807\u68c0\u6d4b\u7684\u6700\u5927\u7edd\u5bf9\u8ddd\u79bb\u3002\u5982\u679c\u5230\u76ee\u6807\u7684\u8ddd\u79bb\u5927\u4e8e\u8fd9\u91cc\u7ed9\u51fa\u7684\u8ddd\u79bb\uff0c\u5219\u8ba4\u4e3a\u76ee\u6807\u4e22\u5931\u4e86\u3002 Parameters: MaxDistance - \u8ddd\u79bb\uff0c\u6b63\uff0c\u5355\u4f4d\u4e3a\u7c73\u3002","title":"ALTracker.setMaximumDistanceDetection (MaxDistance)"},{"location":"motion/#altrackersetmaximumvelocity-maxvelocity","text":"\u8bbe\u7f6e\u5934\u7684\u6700\u5927\u7edd\u5bf9\u901f\u5ea6\u3002 Parameters: MaxVelocity \u2013 \u901f\u5ea6\uff0c\u975e\u8d1f\uff0c\u5355\u4f4d\u4e3arad.s^-2","title":"ALTracker.setMaximumVelocity (MaxVelocity )"},{"location":"motion/#altrackersetmode-maxvelocity","text":"\u5c06\u8ddf\u8e2a\u5668\u8bbe\u7f6e\u4e3a\u9884\u5b9a\u4e49\u6a21\u5f0f\u3002\u4f7f\u7528 ALTracker.getMode \u83b7\u53d6\u8be5\u503c\u3002 Parameters: Mode - \u9884\u5148\u5b9a\u4e49\u7684\u6a21\u5f0f","title":"ALTracker.setMode (MaxVelocity)"},{"location":"motion/#altrackersetrelativeposition-target","text":"\u5728\u79fb\u52a8\u6a21\u5f0f\u4e0b\uff0c\u8bbe\u7f6e\u673a\u5668\u4eba\u76f8\u5bf9\u4e8e\u76ee\u6807\u7684\u4f4d\u7f6e\u3002 \u4f7f\u7528 ALTracker.getRelativePosition \u6765\u83b7\u5f97\u8fd9\u4e2a\u503c\u3002 Parameters: Target - \u8ddf\u8e2a\u7684\u6700\u7ec8\u76ee\u6807: [coordX, coordY, coordWz, thresholdX, thresholdY, thresholdWz]","title":"ALTrackerset.RelativePosition (Target)"},{"location":"motion/#altrackerstoptracker","text":"\u505c\u6b62\u8ffd\u8e2a","title":"ALTracker.stopTracker()"},{"location":"motion/#_14","text":"#! /usr/bin/env python # -*- encoding: UTF-8 -*- \"\"\"Example: Use Tracking Module to Track a Face\"\"\" import qi import argparse import sys import time def main(session, faceSize): \"\"\" This example shows how to use ALTracker with face. \"\"\" # Get the services ALTracker and ALMotion. motion_service = session.service(\"ALMotion\") tracker_service = session.service(\"ALTracker\") # First, wake up. motion_service.wakeUp() # Add target to track. targetName = \"Face\" faceWidth = faceSize tracker_service.registerTarget(targetName, faceWidth) # Then, start tracker. tracker_service.track(targetName) print \"ALTracker successfully started, now show your face to robot!\" print \"Use Ctrl+c to stop this script.\" try: while True: time.sleep(1) except KeyboardInterrupt: print print \"Interrupted by user\" print \"Stopping...\" # Stop tracker. tracker_service.stopTracker() tracker_service.unregisterAllTargets() motion_service.rest() print \"ALTracker stopped.\" if __name__ == \"__main__\": parser = argparse.ArgumentParser() parser.add_argument(\"--ip\", type=str, default=\"127.0.0.1\", help=\"Robot IP address. On robot or Local Naoqi: use '127.0.0.1'.\") parser.add_argument(\"--port\", type=int, default=9559, help=\"Naoqi port number\") parser.add_argument(\"--facesize\", type=float, default=0.1, help=\"Face width.\") args = parser.parse_args() session = qi.Session() try: session.connect(\"tcp://\" + args.ip + \":\" + str(args.port)) except RuntimeError: print (\"Can't connect to Naoqi at ip \\\"\" + args.ip + \"\\\" on port \" + str(args.port) +\".\\n\" \"Please check your script arguments. Run with -h option for help.\") sys.exit(1) main(session, args.facesize)","title":"\u8138\u90e8\u8ffd\u8e2a\u5b9e\u4f8b"},{"location":"vision/","text":"\u673a\u5668\u4eba\u89c6\u89c9 # ALPhotoCapture\u6a21\u5757 # ALPhotoCapture \u6a21\u5757\u5141\u8bb8\u4f60\u4f7f\u7528\u673a\u5668\u4eba\u76f8\u673a\u62cd\u6444\u7167\u7247\uff0c\u5e76\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\u3002 ALPhotoCapture.getCameraID() # \u8fd4\u56de\u7528\u4e8e\u62cd\u7167\u7684\u6444\u50cf\u5934ID Returns : camera ID - \u6444\u50cf\u5934ID ALPhotoCapture.getCaptureInterval(delay) # \u8fd4\u56de\u5f53\u524d\u4e24\u5e45\u56fe\u7247\u4e4b\u95f4\u7684\u5ef6\u8fdf(\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d)\u3002 Returns : delay(ms) - \u5ef6\u65f6 ALPhotoCapture.setCameraID (cameraID) # \u8bbe\u7f6e\u7528\u4e8e\u62cd\u7167\u7684\u6444\u50cf\u5934ID Parameters : cameraID \uff1a Id of the camera ALPhotoCapture.setCaptureInterval (captureInterval) # \u8bbe\u7f6e\u4e24\u6b21\u8fde\u7eed\u62cd\u7167\u4e4b\u95f4\u7684\u95f4\u9694\u65f6\u95f4\u3002 Parameters : captureInterval \uff1a\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff0c\u9ed8\u8ba4\u503c200\uff0c\u76f8\u5f53\u4e8e\u6bcf\u79d2\u62cd\u64445\u5f20\u56fe\u50cf\u3002 ALPhotoCapture.takePicture(folderPath\uff0cfileName) # \u4ee5\u7ed9\u5b9a\u7684\u5206\u8fa8\u7387\u62cd\u6444\u4e00\u5f20\u7167\u7247\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u3002\u6587\u4ef6\u683c\u5f0f\u7531\u6269\u5c55\u540d\u51b3\u5b9a(\u53c2\u89c1ALPhotoCapture.setPictureFormat\u652f\u6301\u7684\u6269\u5c55\u540d\u5217\u8868)\u3002\u5982\u679c\u76ee\u6807\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\uff0c\u5b83\u5c06\u88ab\u8986\u76d6\u3002 Parameters : folderPath \uff1a- \u6587\u4ef6\u4fdd\u5b58\u8def\u5f84 fileName \uff1a- \u6587\u4ef6\u540d\u5b57 Returns : \u4e00\u4e2a\u5143\u7d20\u7684\u6570\u7ec4 \u5f62\u5f0f\u4e3a [fileName] ALPhotoCapture.setResolution (resolution) # \u8bbe\u7f6e\u62cd\u7167\u7684\u5206\u8fa8\u7387\u3002 Parameters : resolution \uff1aNao\u673a\u5668\u4eba\u652f\u6301\u7684\u5206\u8fa8\u7387 ALPhotoCapture.setPictureFormat(pictureFormat) # \u8bbe\u7f6e\u7528\u4e8e\u4fdd\u5b58\u56fe\u7247\u7684\u56fe\u50cf\u683c\u5f0f, \u8fd9\u5bf9\u5e94\u4e8e\u6dfb\u52a0\u5230\u6587\u4ef6\u540d\u4e2d\u7684\u6587\u4ef6\u6269\u5c55\u540d\u3002 Parameters : pictureFormat \uff1a- \u6587\u4ef6\u683c\u5f0f \uff1a \u201cbmp\u201d, \u201cdib\u201d, \u201cjpeg\u201d, \u201cjpg\u201d, \u201cjpe\u201d, \u201cpng\u201d, \u201cpbm\u201d, \u201cpgm\u201d, \u201cppm\u201d, \u201csr\u201d, \u201cras\u201d, \u201ctiff\u201d, \u201ctif\u201d ALPhotoCapture.takePictures(nubmerOfPictures, folderPath\uff0cfileName) # \u8fde\u7eed\u62cd\u6444\u51e0\u5f20\u7167\u7247\u5e76\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u3002\u5982\u679c\u76ee\u6807\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\uff0c\u5b83\u5c06\u88ab\u8986\u76d6\u3002 Parameters : numberOfPictures - \u9700\u8981\u62cd\u7167\u7684\u6570\u91cf folderPath \uff1a- \u6587\u4ef6\u4fdd\u5b58\u8def\u5f84 fileName \uff1a- \u6587\u4ef6\u540d\u5b57 Returns : \u4e00\u4e2a\u5143\u7d20\u7684\u6570\u7ec4 \u5f62\u5f0f\u4e3a [fileName] \u5b9e\u4f8b # \u672c\u6559\u7a0b\u89e3\u91ca\u4e86\u5982\u4f55\u4f7f\u7528Python\u8fd0\u884cALPhotoCapture\u6a21\u5757\uff0c\u5728\u4e00\u4e9b\u521d\u59cb\u5316\u6b65\u9aa4\u4e4b\u540e\uff0c\u6211\u4eec\u9996\u5148\u5411ALPhotoCapture\u6a21\u5757\u5b9e\u4f8b\u5316\u4e00\u4e2a\u4ee3\u7406\u3002 # This test demonstrates how to use the ALPhotoCapture module. # Note that you might not have this module depending on your distribution import os import sys import time from naoqi import ALProxy # Replace this with your robot's IP address IP = \"10.0.252.91\" PORT = 9559 # Create a proxy to ALPhotoCapture try: photoCaptureProxy = ALProxy(\"ALPhotoCapture\", IP, PORT) except Exception, e: print \"Error when creating ALPhotoCapture proxy:\" print str(e) exit(1) \u8c03\u7528\u51fd\u6570\u8fdb\u884c\u62cd\u7167 # Take 3 pictures in VGA and store them in /home/nao/recordings/cameras/ photoCaptureProxy.setResolution(2) photoCaptureProxy.setPictureFormat(\"jpg\") photoCaptureProxy.takePictures(3, \"/home/nao/recordings/cameras/\", \"image\") # This call returns ['/home/nao/recordings/cameras/image_0.jpg', '/home/nao/recordings/cameras/image_1.jpg', '/home/nao/recordings/cameras/image_2.jpg'] ALVideoDevice\u6a21\u5757 # ALVideoDevice \u6a21\u5757\u8d1f\u8d23\u5c06\u89c6\u9891\u6e90(\u5982\u673a\u5668\u4eba\u7684\u6444\u50cf\u5934\u3001\u6a21\u62df\u5668)\u7684\u56fe\u50cf\u9ad8\u6548\u5730\u63d0\u4f9b\u7ed9\u6240\u6709\u5904\u7406\u6a21\u5757\uff0c\u5982 ALFaceDetection \u6216 ALVisionRecognition \u3002\u7531\u4e8e ALVideoDevice \u6a21\u5757\u968f\u65f6\u77e5\u9053\u9700\u8981\u56fe\u50cf\u7684\u6a21\u5757\u5217\u8868\u53ca\u5176\u9700\u6c42\uff0c\u56e0\u6b64\u53ef\u4ee5\u8bbe\u7f6e\u89c6\u9891\u8bbe\u5907\u7684\u6700\u5c0f\u914d\u7f6e\uff0c\u65e2\u80fd\u6ee1\u8db3\u5404\u4e2a\u6a21\u5757\u7684\u9700\u6c42\uff0c\u53c8\u80fd\u8282\u7701\u5904\u7406\u8d44\u6e90\u3002 ALVideoDevice.subscribeCamera(Name, CameraIndex, Resolution, ColorSpace, Fps) # \u8ba2\u9605\u4e00\u4e2aALVideoDevice\uff0c\u5f53\u89c6\u9891\u6a21\u5757\u6ce8\u518c\u5230ALVideoDevice\u65f6\uff0c\u8bf7\u6c42\u7684\u56fe\u50cf\u683c\u5f0f\u7684\u7f13\u51b2\u533a\u88ab\u6dfb\u52a0\u5230\u7f13\u51b2\u533a\u5217\u8868\u4e2d\u3002\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u8be5\u53e5\u67c4\u6807\u8bc6ALVideoDevice\u4e2d\u7684\u6a21\u5757\u3002(\u6b64\u53e5\u67c4\u57fa\u4e8ename\u53c2\u6570\uff0c\u4f8b\u5982\uff0c\u7b2c\u4e09\u4e2a\u53e5\u67c4\u5728\u5176\u540d\u79f0\u4e2d\u6dfb\u52a0_3\u6765\u6784\u5efa\u6b64\u53e5\u67c4)\u3002 Parameters : Name - \u8ba2\u9605\u7684\u6a21\u5757\u540d\u79f0 CameraIndex \uff1a- \u89c6\u9891\u7cfb\u7edf\u4e2d\u6444\u50cf\u673a\u7684\u7d22\u5f15\u3002 Resolution \uff1a- \u5206\u8fa8\u7387 ColorSpace \uff1a- \u989c\u8272\u7a7a\u95f4 Fps : -\u5e27\u7387 Returns : \u5b57\u7b26\u4e32\u53e5\u67c4\uff0c\u8be5\u53e5\u67c4\u4e0b\u7684\u6a21\u5757\u662fALVideoDevice\u5df2\u77e5\u7684\uff0c\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 ALVideoDevice.getImageLocal(Handle) # \u4ece\u89c6\u9891\u6e90\u83b7\u53d6\u6700\u65b0\u7684\u56fe\u50cf\uff0c\u5bf9\u56fe\u50cf\u8fdb\u884c\u6700\u7ec8\u8f6c\u6362\uff0c\u4ee5\u63d0\u4f9b\u89c6\u89c9\u6a21\u5757\u6240\u8981\u6c42\u7684\u683c\u5f0f\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5df2\u9501\u5b9a\u7684AL.ALImage\u56fe\u50cf\u6a21\u5757\u7684\u6307\u9488\u3002 Parameters : Handle - \u8ba2\u9605\u51fd\u6570\u8fd4\u56de\u7684\u53e5\u67c4 Returns : \u6307\u5411\u9501\u5b9a\u7684\u56fe\u50cf\u7f13\u51b2\u533a\u7684\u6307\u9488\uff0c\u5982\u679c\u9519\u8bef\u8fd4\u56deNULL(\u4f8b\u5982\uff0c\u5982\u679c\u4ee5\u524d\u7684\u56fe\u50cf\u6ca1\u6709\u88ab\u91ca\u653e)\u3002 ALVideoDevice.getImageRemote(Handle) # \u4ece\u89c6\u9891\u6e90\u83b7\u53d6\u6700\u65b0\u7684\u56fe\u50cf\uff0c\u5bf9\u56fe\u50cf\u5e94\u7528\u6700\u7ec8\u7684\u8f6c\u6362\uff0c\u4ee5\u63d0\u4f9bvision\u6a21\u5757\u6240\u8981\u6c42\u7684\u683c\u5f0f\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u503c\u901a\u8fc7\u7f51\u7edc\u53d1\u9001\u3002 Parameters : Handle - \u8ba2\u9605\u51fd\u6570\u8fd4\u56de\u7684\u53e5\u67c4 Returns : \u5305\u542b\u56fe\u50cf\u7684\u7c7b ALVideoDevice.releaseImage(Handle) # \u91ca\u653e\u88ab ALVideoDevice.getImageLocal() \u9501\u5b9a\u7684\u56fe\u50cf\u7f13\u51b2\u533a\u3002\u5982\u679c\u6a21\u5757\u6ca1\u6709\u9501\u5b9a\u7684\u56fe\u50cf\u7f13\u51b2\u533a\uff0c\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002 Parameters : Handle - \u8ba2\u9605\u51fd\u6570\u8fd4\u56de\u7684\u53e5\u67c4 Returns : \u6210\u529f\u8fd4\u56deTrue ALVideoDevice.unsubscribe(Handle) # \u4ece ALVideoDevice \u6ce8\u9500\u4e00\u4e2a\u6a21\u5757 Parameters : Handle - \u8ba2\u9605\u51fd\u6570\u8fd4\u56de\u7684\u53e5\u67c4 Returns : \u6210\u529f\u8fd4\u56deTrue \u7528\u6cd5 # Step Action 1 Make your vision module subscribe to the ALVideoDevice proxy by calling ALVideoDeviceProxy::subscribeCamera and passing it parameters such as resolution, color space and frame rate. 2 In the main process loop, get an image by calling ALVideoDeviceProxy::getImageLocal or ALVideoDeviceProxy::getImageRemote (depending on whether your module is local or remote). 3 Release the image calling ALVideoDeviceProxy::releaseImage , 4 When you stop your module, call ALVideoDeviceProxy::unsubscribe after exiting the main loop. ALVideoRecorder\u6a21\u5757 # ALVideoRecorder \u6a21\u5757\u5141\u8bb8\u60a8\u4f7f\u7528\u673a\u5668\u4eba\u6444\u50cf\u673a\u5f55\u5236\u89c6\u9891\u5e8f\u5217\uff0c\u5e76\u5c06\u5b83\u4eec\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\u3002 ALVideoRecorder.setCameraID(cameraID) # \u8bbe\u7f6e\u7528\u4e8e\u5f55\u5236\u7684\u6444\u50cf\u5934ID Parameters : cameraID \uff1a Id of the camera ALVideoRecorder.setColorSpace(colorSpace) # \u8bbe\u7f6e\u4f7f\u7528\u7684\u989c\u8272\u7a7a\u95f4 Parameters : colorSpace \uff1a\u5b83\u53ef\u4ee5\u662fkBGRColorSpace(\u989c\u8272)\u6216kYuvColorSpace(\u7070\u5ea6)\u3002 ALVideoRecorder.setFrameRate(frameRate) # \u8bbe\u7f6e\u6bcf\u79d2\u5e27\u6570 Parameters : frameRate \uff1a\u5e27\u901f\u7387\u57281\u523030\u4e4b\u95f4(VGA\u5206\u8fa8\u7387\u6700\u5927\u4e3a15\u5e27/\u79d2)\u3002 ALVideoRecorder.setResolution(resolution) # \u8bbe\u7f6e\u5206\u8fa8\u7387 Parameters : resolution \uff1a\u5206\u8fa8\u7387\u4e3a \uff1a 0 (QQVGA)\uff0c 1 (QVGA)\u62162 (VGA) ALVideoRecorder.setVideoFormat(videoFormat) # \u8bbe\u7f6e\u7528\u4e8e\u7f16\u7801\u89c6\u9891\u7684\u65b9\u5f0f\u3002 Parameters : videoFormat \uff1a\u201cIYUV\u201d(\u9662\u58eb avi\uff0c\u4ec5\u9650\u5f69\u8272\u89c6\u9891) \u201cMJPG\u201d(\u538b\u7f29avi\uff0c\u7070\u5ea6\u548c\u5f69\u8272\u89c6\u9891) ALVideoRecorder.startRecording(folderPath, fileName) # \u4ee5\u8f93\u5165\u53c2\u6570\u5f00\u59cb\u5f55\u50cf\uff0c\u76f4\u5230 ALVideoRecorderProxy::stopRecording \u88ab\u8c03\u7528\u3002\u5982\u679c\u76ee\u6807\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\uff0c\u5b83\u5c06\u88ab\u8986\u76d6\uff0c\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u5f55\u5236\u4e00\u4e2a\u89c6\u9891\u3002 Parameters : folderPath \uff1a\u89c6\u9891\u4fdd\u5b58\u7684\u4f4d\u7f6e filename \uff1a \u89c6\u9891\u4fdd\u5b58\u7684\u540d\u79f0 ALVideoRecorder.stopRecording() # \u505c\u6b62\u7528 ALVideoRecorderProxy::startRecording \u542f\u52a8\u7684\u89c6\u9891\u5f55\u5236\u3002\u8be5\u51fd\u6570\u8fd4\u56de\u6240\u8bb0\u5f55\u7684\u5e27\u6570\u4ee5\u53ca\u89c6\u9891\u7684\u7edd\u5bf9\u8def\u5f84\u3002 Returns : [numRecordedFrames, recordAbsolutePath] \u5b9e\u4f8b # \u5728\u4e00\u4e9b\u521d\u59cb\u5316\u6b65\u9aa4\u4e4b\u540e\uff0c\u6211\u4eec\u9996\u5148\u5b9e\u4f8b\u5316 ALVideoRecorder \u6a21\u5757\u7684\u4ee3\u7406\u3002 # This test demonstrates how to use the ALVideoRecorder module. # Note that you might not have this module depending on your distribution import os import sys import time from naoqi import ALProxy # Replace this with your robot's IP address IP = \"10.0.252.91\" PORT = 9559 # Create a proxy to ALVideoRecorder try: videoRecorderProxy = ALProxy(\"ALVideoRecorder\", IP, PORT) except Exception, e: print \"Error when creating ALVideoRecorder proxy:\" print str(e) exit(1) \u5f00\u59cb\u8bb0\u5f55\u4e00\u4e2a\u89c6\u9891 videoRecorderProxy.setFrameRate(10.0) videoRecorderProxy.setResolution(2) # Set resolution to VGA (640 x 480) # We'll save a 5 second video record in /home/nao/recordings/cameras/ videoRecorderProxy.startRecording(\"/home/nao/recordings/cameras\", \"test\") print \"Video record started.\" time.sleep(5) videoInfo = videoRecorderProxy.stopRecording() print \"Video was saved on the robot: \", videoInfo[1] print \"Total number of frames: \", videoInfo[0] ALRedBallDetection\u6a21\u5757 # ALRedBallDetection \u662f\u4e00\u4e2a\u6a21\u5757\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u4e8e\u5feb\u901f\u89c6\u89c9\u7684\u7ea2\u7403\u68c0\u6d4b\u5668\u3002 ALRedBallDetection \u662f\u57fa\u4e8e\u76f8\u673a\u56fe\u50cf\u4e2d\u7ea2\u8272\u50cf\u7d20\u8fdb\u884c\u68c0\u6d4b\uff0c\u6839\u636e\u8fd9\u4e9b\u50cf\u7d20\u4e0eYUV\u8272\u5f69\u7a7a\u95f4\u4e2d\u7684\u7ea2\u8272\u503c\u7684\u8ddd\u79bb\u4f7f\u7528\u4e00\u4e2a\u9608\u503c\u8fdb\u884c\u8fc7\u6ee4\uff0c\u8ba1\u7b97\u8be5\u9608\u503c\u5b9e\u73b0\u4e86\u5728\u5149\u7167\u6761\u4ef6\u53d8\u5316\u65f6\u8fdb\u884c\u68c0\u6d4b\u3002\u7136\u540e\uff0c\u4ece\u6240\u6709\u68c0\u6d4b\u5230\u7684\u7ea2\u8272\u50cf\u7d20\u96c6\u5408\u4e2d\uff0c\u53ea\u4fdd\u7559\u90a3\u4e9b\u5b9a\u4e49\u5706\u5f62\u7684\u50cf\u7d20\u3002\u5f53\u5728\u5f53\u524d\u56fe\u50cf\u4e0a\u627e\u5230\u4e00\u7ec4\u5408\u9002\u50cf\u7d20\u65f6\uff0c ALMemory \u952e redBallDetected \u88ab\u66f4\u65b0\uff0c\u5e76\u8fd4\u56de\u5982\u4e0b\u7684\u5173\u952e\u5b57\uff1a [ TimeStamp, BallInfo, CameraPose_InTorsoFrame, CameraPose_InRobotFrame, Camera_Id ] TimeStamp \uff1a\u8be5\u5b57\u6bb5\u662f\u7528\u4e8e\u6267\u884c\u68c0\u6d4b\u7684\u56fe\u50cf\u7684\u65f6\u95f4\u6233\u3002 TimeStamp [ TimeStamp_Seconds, Timestamp_Microseconds ] BallInfo BallInfo [ centerX, centerY, sizeX, sizeY ] centerX \u548c centerY \u662f\u7403\u4e2d\u5fc3\u7684\u89d2\u5ea6\u5750\u6807\uff0c\u4ee5\u89d2\u5ea6(\u5f27\u5ea6)\u8868\u793a\u3002 sizeX \u548c sizeY \u662f\u7403\u7684\u201c\u6c34\u5e73\u548c\u5782\u76f4\u534a\u5f84\u201d\u7684\u89d2\u5ea6(\u5f27\u5ea6)\u3002 \u5750\u6807\u7cfb\u7684\u539f\u70b9\u5728\u56fe\u50cf\u7684\u4e2d\u95f4 centerX \u5bf9\u5e94\u4e8e\u6cbfZ\u8f74\u7684\u6b63(\u9006\u65f6\u9488)\u65cb\u8f6c\uff0c centerY \u5bf9\u5e94\u4e8e\u6cbfY\u8f74\u7684\u6b63\u65cb\u8f6c\uff0c\u5982\u4e0b\u56fe\u6240\u793a: CameraPose_InTorsoFrame : \u5728\u8eaf\u5e72\u5750\u6807\u7cfb\u4e2d\u63cf\u8ff0\u4e86\u56fe\u50cf\u88ab\u62cd\u6444\u65f6\u76f8\u673a\u7684\u4f4d\u7f6e CameraPose_InRobotFrame : \u5728\u673a\u5668\u4eba\u5750\u6807\u7cfb\u4e2d\u63cf\u8ff0\u4e86\u56fe\u50cf\u88ab\u62cd\u6444\u65f6\u76f8\u673a\u7684\u4f4d\u7f6e Camera_Id : \u7ed9\u51fa\u7528\u4e8e\u68c0\u6d4b\u7684\u6444\u50cf\u673a\u7684Id(0\u4e3a\u9876\u90e8\u6444\u50cf\u673a\uff0c1\u4e3a\u5e95\u90e8\u6444\u50cf\u673a)\u3002 ALVisionRecognition\u6a21\u5757 # ALVisionRecognition \u662f\u4e00\u4e2a\u89c6\u89c9\u6a21\u5757\uff0c\u673a\u5668\u4eba\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6a21\u5757\u4e2d\u5c1d\u8bd5\u8bc6\u522b\u4e0d\u540c\u7684\u56fe\u7247\u3001\u7269\u4f53\u3001\u4fa7\u9762\u751a\u81f3\u662f\u4e4b\u524d\u5b66\u4e60\u8fc7\u7684\u4f4d\u7f6e\u3002\u8be5\u6a21\u5757\u4ee5\u89c6\u89c9\u5173\u952e\u70b9\u7684\u8bc6\u522b\u4e3a\u57fa\u7840\uff0c\u4ec5\u9488\u5bf9\u4e4b\u524d\u5b66\u4e60\u8fc7\u7684\u7279\u5b9a\u5bf9\u8c61\u8fdb\u884c\u8bc6\u522b\u3002 \u68c0\u6d4b\u7ed3\u679c # \u50cf\u6240\u6709\u5176\u4ed6\u63d0\u53d6\u6a21\u5757\u4e00\u6837\uff0c\u8bc6\u522b\u7ed3\u679c\u88ab\u653e\u5728 ALMemory \u4e2d\u3002\u5f53\u67d0\u4e2a\u4e1c\u897f\u88ab\u8bc6\u522b\u65f6\uff0c\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a ALValue \u5b57\u6bb5\uff0c\u5176\u7ed3\u6784\u5982\u4e0b: \u201c PictureDetected \u201d \u5173\u952e\u5b57\u7ed3\u6784\u5982\u4e0b [ TimeStamp, PictureInfo[N] ] PictureInfo \u6807\u7b7e\u6570\u91cf\u4e0e\u5f53\u524d\u8bc6\u522b\u5230\u7269\u4f53\u7684\u6570\u91cf\u4e00\u6837\u591a\u3002 TimeStamp \u8be5\u5b57\u6bb5\u662f\u7528\u4e8e\u6267\u884c\u68c0\u6d4b\u7684\u56fe\u50cf\u7684\u65f6\u95f4\u6233\u3002 TimeStamp = [ TimeStamp_Seconds, Timestamp_Microseconds ] PictureInfo \u5bf9\u4e8e\u6bcf\u4e2a\u68c0\u6d4b\u5230\u7684\u56fe\u7247\uff0c\u6211\u4eec\u6709\u4e00\u4e2a PictureInfo \u5b57\u6bb5: PictureInfo = [ Label[N], MatchedKeypoints, Ratio, BoundaryPoint[N] ] Label : \u6709\u7ec4\u7ec7\u7684\u56fe\u7247\u540d\u79f0 (e.g. [\u201ccover\u201d, \u201cmy book\u201d], or [\u201cfridge corner\u201d, \u201ckitchen\u201d, \u201cmy flat\u201d]). MatchedKeypoints \u5728\u5f53\u524d\u5e27\u4e2d\u4e3a\u5bf9\u8c61\u68c0\u7d22\u5230\u7684\u5173\u952e\u70b9\u6570\u91cf\u3002 Ratio \u662f\u5f53\u524d\u5e27\u4e2d\u68c0\u7d22\u5230\u7684\u5bf9\u8c61\u7684\u5173\u952e\u70b9\u6570\u9664\u4ee5\u5bf9\u8c61\u5728\u5b66\u4e60\u9636\u6bb5\u4e2d\u627e\u5230\u7684\u5173\u952e\u70b9\u6570\u3002 BoundaryPoint \u662f\u8868\u793a\u5b66\u4e60\u9636\u6bb5\u9009\u62e9\u7684\u8fb9\u754c\u5728\u5f53\u524d\u56fe\u50cf\u4e2d\u91cd\u65b0\u6295\u5f71\u7684\u89d2\u5ea6\u503c(\u5f27\u5ea6)\u4e2d\u7684\u70b9\u5750\u6807\u5217\u8868\u3002 BoundaryPoint = [ x, y ] ALVisionRecognition.detectFromFile (filename) # \u5728\u7ed9\u5b9a\u56fe\u50cf\u6587\u4ef6\u4e2d\u641c\u7d22\u5df2\u77e5\u5bf9\u8c61\u3002 Parameters : filename \u2013 \u8981\u641c\u7d22\u7684\u56fe\u50cf\u7684\u7edd\u5bf9\u6587\u4ef6\u540d\u3002 ALVisionRecognition.learnFromFile (filename, name, tags, isWholeImage, forced) # \u4ece\u7ed9\u5b9a\u7684\u6587\u4ef6\u540d\u52a0\u8f7d\u56fe\u50cf\uff0c\u5e76\u5b66\u4e60\u5b83\u4e0e\u7ed9\u5b9a\u7684\u4fe1\u606f\uff0c\u540d\u79f0\uff0c\u6807\u7b7e\uff0c\u8fb9\u754c\u3002 Parameters : image \u2013 \u8981\u641c\u7d22\u7684\u56fe\u50cf\u7684\u7edd\u5bf9\u6587\u4ef6\u540d\u3002 name - \u5bf9\u8c61\u7684\u540d\u79f0\uff0c\u5fc5\u987b\u662f\u975e\u7a7a\u5b57\u7b26\u4e32\u3002 tags - \u4e0e\u5bf9\u8c61\u4e00\u8d77\u5b58\u50a8\u7684\u5bf9\u8c61\u6807\u7b7e\uff0c\u53ef\u4ee5\u4e3a\u7a7a\u3002 isWholeImage - Bool\u53d8\u91cf\uff0c\u9ed8\u8ba4\u4e3aFalse\u3002 True\u8868\u793a\u7269\u4f53\u5360\u636e\u4e86\u6574\u4e2a\u56fe\u50cf\uff0cFalse\u8868\u793a\u81ea\u52a8\u68c0\u6d4b\u7269\u4f53\u7684\u8fb9\u754c\u3002\u4ec5\u5f53\u7269\u4f53\u4ece\u5355\u8272\u80cc\u666f\u4e2d\u7a81\u51fa\u65f6\u4f7f\u7528\u3002 forced - Bool\u53d8\u91cf\uff0c\u9ed8\u8ba4\u4e3aFalse\u3002True\u8868\u793a\u5b66\u4e60\u5bf9\u8c61\u5c06\u66ff\u6362\u53ef\u80fd\u5b58\u5728\u7684\u5bf9\u8c61(\u6761\u4ef6:\u5177\u6709\u76f8\u540c\u7684\u539f\u59cb\u6587\u4ef6\u540d)\u3002False:\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u5df2\u7ecf\u4ee5\u76f8\u540c\u7684\u6587\u4ef6\u540d\u5b58\u5728\uff0c\u5b83\u5c06\u4e0d\u4f1a\u88ab\u66ff\u6362\uff0c\u5e76\u4e14\u65b9\u6cd5\u5c06\u4e2d\u6b62\u3002 Return \uff1a \u6210\u529f\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse \u5b9e\u4f8b # \u672c\u6559\u7a0b\u4ecb\u7ecd\u4ece Python \u8bbf\u95ee ALVisionRecognition \u6a21\u5757\u7684\u4e24\u79cd\u65b9\u6cd5\uff0c \u8ba2\u9605\u5305\u542b ALVisionRecognition \u7684 AlMemory \u5bc6\u94a5\u3002 import\u4e00\u4e9b\u73af\u5883\u548c\u53d8\u91cf import os import sys import time import naoqi from naoqi import * # A global counter of the number of loops count = 10 PC_IP = \"127.0.0.1\" # Replace this with your computer's IP address NAO_IP = \"nao.local\" # Replace this with your NAOqi's IP address # The name of the event generated by ALVisionRecognition event_name = \"PictureDetected\" \u6211\u4eec\u4f7f\u7528\u56de\u8c03\u65b9\u6cd5\u521b\u5efa python \u6a21\u5757\u5e76\u5b9e\u4f8b\u5316\u5b83 # The name of our local python module module_name = \"python_module\" class myModule(ALModule): \"\"\"python class myModule test auto documentation\"\"\" def dataChanged(self, strVarName, value, strMessage): \"\"\"callback when data change\"\"\" print \"datachanged\", strVarName, \" \", value, \" \", strMessage global count count = count - 1 # Create a local broker, connected to the remote naoqi broker = ALBroker(\"pythonBroker\", PC_IP, 9999, NAO_IP, 9559) # Create a python module pythonModule = myModule(module_name) \u8ba2\u9605\u4e8b\u4ef6\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u8c03\u7528\u6211\u4eec\u7684\u56de\u8c03 try: # Create a proxy to ALMemory memoryProxy = ALProxy(\"ALMemory\", ROBOT_IP, PORT) # Subscribe to the event, saying where we want to be called back memoryProxy.subscribeToEvent(event_name, module_name, \"dataChanged\") # Let the picture recognition run while count > 0: time.sleep(5) # Unsubscribe memoryProxy.unsubscribeToEvent(event_name, module_name) except RuntimeError, e: print e exit(1) print 'end' ALLocalization\u6a21\u5757 # ALLocalization \u662f\u4e00\u4e2a\u6a21\u5757\uff0c\u81f4\u529b\u4e8e\u5728\u5ba4\u5185\u73af\u5883\u4e2d\u5bf9\u673a\u5668\u4eba \u8fdb\u884c \u5b9a\u4f4d\u3002 ALLocalization.learnHome() # \u5b66\u4e60\u673a\u5668\u4eba\u7684\u4e3b\u8282\u70b9 Returns : \u65e0\u9519\u8bef\u8fd4\u56de0\uff0c\u5426\u5219\u8fd4\u56de\u9519\u8bef\u4ee3\u7801 ALLocalization.getRobotPosition(active) # \u5b66\u4e60\u673a\u5668\u4eba\u7684\u4e3b\u8282\u70b9 Parameters : active - \u9ed8\u8ba4\u4e3aFalse\uff0c \u5b9a\u4e49\u91cc\u7a0b\u8ba1\u4e0d\u53ef\u9760\u662f\u7684\u91cd\u5b9a\u4f4d\u8fc7\u7a0b\uff0c\u5982\u679c\u4e3aTrue, \u673a\u5668\u4eba\u4f1a\u91cd\u65b0\u626b\u63cf\u6765\u5b9a\u4f4d\uff0c\u5982\u679c\u4e3a\u5047\uff0c\u673a\u5668\u4eba\u5c06\u4e0d\u4f1a\u79fb\u52a8\u3002 Returns : \u673a\u5668\u4eba2D\u7684\u5750\u6807(x, y)\u3002 ALLocalization.goToHome () # \u5982\u679c\u9700\u8981,\u5c06\u673a\u5668\u4eba\u79fb\u52a8\u5230\u6267\u884c ALLocalization.learnHome \u7684\u5730\u65b9\u3002\u51c6\u786e\u6027\u53d6\u51b3\u4e8e\u73af\u5883\u3002 Returns : \u5982\u679c\u65e0\u9519\u8bef\u8fd4\u56de0\uff0c \u5426\u5219\u8fd4\u56de\u9519\u8bef\u4ee3\u7801 \u5b9e\u4f8b # motionProxy = ALProxy(\"ALMotion\", robotIP, PORT) localizationProxy = ALProxy(\"ALLocalization\", robotIP, PORT) # Learning home. ret = localizationProxy.learnHome() # Check that no problem occurred. if ret == 0: print \"Learning OK\" else: print \"Error during learning \" + str(ret) # Make some moves. motionProxy.moveTo(0.5, 0.0, 0.2) # Go back home. ret = localizationProxy.goToHome() # Check that no problem occurred. if ret == 0: print \"go to home OK\" else: print \"error during go to home \" + str(ret) # Save the data for later use. ret = localizationProxy.save(\"example\") # Check that no problem occurred. if ret == 0: print \"saving OK\" else: print \"error during saving\" + str(ret)","title":"\u673a\u5668\u4eba\u89c6\u89c9"},{"location":"vision/#_1","text":"","title":"\u673a\u5668\u4eba\u89c6\u89c9"},{"location":"vision/#alphotocapture","text":"ALPhotoCapture \u6a21\u5757\u5141\u8bb8\u4f60\u4f7f\u7528\u673a\u5668\u4eba\u76f8\u673a\u62cd\u6444\u7167\u7247\uff0c\u5e76\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\u3002","title":"ALPhotoCapture\u6a21\u5757"},{"location":"vision/#alphotocapturegetcameraid","text":"\u8fd4\u56de\u7528\u4e8e\u62cd\u7167\u7684\u6444\u50cf\u5934ID Returns : camera ID - \u6444\u50cf\u5934ID","title":"ALPhotoCapture.getCameraID()"},{"location":"vision/#alphotocapturegetcaptureintervaldelay","text":"\u8fd4\u56de\u5f53\u524d\u4e24\u5e45\u56fe\u7247\u4e4b\u95f4\u7684\u5ef6\u8fdf(\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d)\u3002 Returns : delay(ms) - \u5ef6\u65f6","title":"ALPhotoCapture.getCaptureInterval(delay)"},{"location":"vision/#alphotocapturesetcameraid-cameraid","text":"\u8bbe\u7f6e\u7528\u4e8e\u62cd\u7167\u7684\u6444\u50cf\u5934ID Parameters : cameraID \uff1a Id of the camera","title":"ALPhotoCapture.setCameraID (cameraID)"},{"location":"vision/#alphotocapturesetcaptureinterval-captureinterval","text":"\u8bbe\u7f6e\u4e24\u6b21\u8fde\u7eed\u62cd\u7167\u4e4b\u95f4\u7684\u95f4\u9694\u65f6\u95f4\u3002 Parameters : captureInterval \uff1a\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff0c\u9ed8\u8ba4\u503c200\uff0c\u76f8\u5f53\u4e8e\u6bcf\u79d2\u62cd\u64445\u5f20\u56fe\u50cf\u3002","title":"ALPhotoCapture.setCaptureInterval (captureInterval)"},{"location":"vision/#alphotocapturetakepicturefolderpathfilename","text":"\u4ee5\u7ed9\u5b9a\u7684\u5206\u8fa8\u7387\u62cd\u6444\u4e00\u5f20\u7167\u7247\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u3002\u6587\u4ef6\u683c\u5f0f\u7531\u6269\u5c55\u540d\u51b3\u5b9a(\u53c2\u89c1ALPhotoCapture.setPictureFormat\u652f\u6301\u7684\u6269\u5c55\u540d\u5217\u8868)\u3002\u5982\u679c\u76ee\u6807\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\uff0c\u5b83\u5c06\u88ab\u8986\u76d6\u3002 Parameters : folderPath \uff1a- \u6587\u4ef6\u4fdd\u5b58\u8def\u5f84 fileName \uff1a- \u6587\u4ef6\u540d\u5b57 Returns : \u4e00\u4e2a\u5143\u7d20\u7684\u6570\u7ec4 \u5f62\u5f0f\u4e3a [fileName]","title":"ALPhotoCapture.takePicture(folderPath\uff0cfileName)"},{"location":"vision/#alphotocapturesetresolution-resolution","text":"\u8bbe\u7f6e\u62cd\u7167\u7684\u5206\u8fa8\u7387\u3002 Parameters : resolution \uff1aNao\u673a\u5668\u4eba\u652f\u6301\u7684\u5206\u8fa8\u7387","title":"ALPhotoCapture.setResolution (resolution)"},{"location":"vision/#alphotocapturesetpictureformatpictureformat","text":"\u8bbe\u7f6e\u7528\u4e8e\u4fdd\u5b58\u56fe\u7247\u7684\u56fe\u50cf\u683c\u5f0f, \u8fd9\u5bf9\u5e94\u4e8e\u6dfb\u52a0\u5230\u6587\u4ef6\u540d\u4e2d\u7684\u6587\u4ef6\u6269\u5c55\u540d\u3002 Parameters : pictureFormat \uff1a- \u6587\u4ef6\u683c\u5f0f \uff1a \u201cbmp\u201d, \u201cdib\u201d, \u201cjpeg\u201d, \u201cjpg\u201d, \u201cjpe\u201d, \u201cpng\u201d, \u201cpbm\u201d, \u201cpgm\u201d, \u201cppm\u201d, \u201csr\u201d, \u201cras\u201d, \u201ctiff\u201d, \u201ctif\u201d","title":"ALPhotoCapture.setPictureFormat(pictureFormat)"},{"location":"vision/#alphotocapturetakepicturesnubmerofpictures-folderpathfilename","text":"\u8fde\u7eed\u62cd\u6444\u51e0\u5f20\u7167\u7247\u5e76\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u3002\u5982\u679c\u76ee\u6807\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\uff0c\u5b83\u5c06\u88ab\u8986\u76d6\u3002 Parameters : numberOfPictures - \u9700\u8981\u62cd\u7167\u7684\u6570\u91cf folderPath \uff1a- \u6587\u4ef6\u4fdd\u5b58\u8def\u5f84 fileName \uff1a- \u6587\u4ef6\u540d\u5b57 Returns : \u4e00\u4e2a\u5143\u7d20\u7684\u6570\u7ec4 \u5f62\u5f0f\u4e3a [fileName]","title":"ALPhotoCapture.takePictures(nubmerOfPictures, folderPath\uff0cfileName)"},{"location":"vision/#_2","text":"\u672c\u6559\u7a0b\u89e3\u91ca\u4e86\u5982\u4f55\u4f7f\u7528Python\u8fd0\u884cALPhotoCapture\u6a21\u5757\uff0c\u5728\u4e00\u4e9b\u521d\u59cb\u5316\u6b65\u9aa4\u4e4b\u540e\uff0c\u6211\u4eec\u9996\u5148\u5411ALPhotoCapture\u6a21\u5757\u5b9e\u4f8b\u5316\u4e00\u4e2a\u4ee3\u7406\u3002 # This test demonstrates how to use the ALPhotoCapture module. # Note that you might not have this module depending on your distribution import os import sys import time from naoqi import ALProxy # Replace this with your robot's IP address IP = \"10.0.252.91\" PORT = 9559 # Create a proxy to ALPhotoCapture try: photoCaptureProxy = ALProxy(\"ALPhotoCapture\", IP, PORT) except Exception, e: print \"Error when creating ALPhotoCapture proxy:\" print str(e) exit(1) \u8c03\u7528\u51fd\u6570\u8fdb\u884c\u62cd\u7167 # Take 3 pictures in VGA and store them in /home/nao/recordings/cameras/ photoCaptureProxy.setResolution(2) photoCaptureProxy.setPictureFormat(\"jpg\") photoCaptureProxy.takePictures(3, \"/home/nao/recordings/cameras/\", \"image\") # This call returns ['/home/nao/recordings/cameras/image_0.jpg', '/home/nao/recordings/cameras/image_1.jpg', '/home/nao/recordings/cameras/image_2.jpg']","title":"\u5b9e\u4f8b"},{"location":"vision/#alvideodevice","text":"ALVideoDevice \u6a21\u5757\u8d1f\u8d23\u5c06\u89c6\u9891\u6e90(\u5982\u673a\u5668\u4eba\u7684\u6444\u50cf\u5934\u3001\u6a21\u62df\u5668)\u7684\u56fe\u50cf\u9ad8\u6548\u5730\u63d0\u4f9b\u7ed9\u6240\u6709\u5904\u7406\u6a21\u5757\uff0c\u5982 ALFaceDetection \u6216 ALVisionRecognition \u3002\u7531\u4e8e ALVideoDevice \u6a21\u5757\u968f\u65f6\u77e5\u9053\u9700\u8981\u56fe\u50cf\u7684\u6a21\u5757\u5217\u8868\u53ca\u5176\u9700\u6c42\uff0c\u56e0\u6b64\u53ef\u4ee5\u8bbe\u7f6e\u89c6\u9891\u8bbe\u5907\u7684\u6700\u5c0f\u914d\u7f6e\uff0c\u65e2\u80fd\u6ee1\u8db3\u5404\u4e2a\u6a21\u5757\u7684\u9700\u6c42\uff0c\u53c8\u80fd\u8282\u7701\u5904\u7406\u8d44\u6e90\u3002","title":"ALVideoDevice\u6a21\u5757"},{"location":"vision/#alvideodevicesubscribecameraname-cameraindex-resolution-colorspace-fps","text":"\u8ba2\u9605\u4e00\u4e2aALVideoDevice\uff0c\u5f53\u89c6\u9891\u6a21\u5757\u6ce8\u518c\u5230ALVideoDevice\u65f6\uff0c\u8bf7\u6c42\u7684\u56fe\u50cf\u683c\u5f0f\u7684\u7f13\u51b2\u533a\u88ab\u6dfb\u52a0\u5230\u7f13\u51b2\u533a\u5217\u8868\u4e2d\u3002\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u8be5\u53e5\u67c4\u6807\u8bc6ALVideoDevice\u4e2d\u7684\u6a21\u5757\u3002(\u6b64\u53e5\u67c4\u57fa\u4e8ename\u53c2\u6570\uff0c\u4f8b\u5982\uff0c\u7b2c\u4e09\u4e2a\u53e5\u67c4\u5728\u5176\u540d\u79f0\u4e2d\u6dfb\u52a0_3\u6765\u6784\u5efa\u6b64\u53e5\u67c4)\u3002 Parameters : Name - \u8ba2\u9605\u7684\u6a21\u5757\u540d\u79f0 CameraIndex \uff1a- \u89c6\u9891\u7cfb\u7edf\u4e2d\u6444\u50cf\u673a\u7684\u7d22\u5f15\u3002 Resolution \uff1a- \u5206\u8fa8\u7387 ColorSpace \uff1a- \u989c\u8272\u7a7a\u95f4 Fps : -\u5e27\u7387 Returns : \u5b57\u7b26\u4e32\u53e5\u67c4\uff0c\u8be5\u53e5\u67c4\u4e0b\u7684\u6a21\u5757\u662fALVideoDevice\u5df2\u77e5\u7684\uff0c\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32","title":"ALVideoDevice.subscribeCamera(Name, CameraIndex, Resolution, ColorSpace, Fps)"},{"location":"vision/#alvideodevicegetimagelocalhandle","text":"\u4ece\u89c6\u9891\u6e90\u83b7\u53d6\u6700\u65b0\u7684\u56fe\u50cf\uff0c\u5bf9\u56fe\u50cf\u8fdb\u884c\u6700\u7ec8\u8f6c\u6362\uff0c\u4ee5\u63d0\u4f9b\u89c6\u89c9\u6a21\u5757\u6240\u8981\u6c42\u7684\u683c\u5f0f\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5df2\u9501\u5b9a\u7684AL.ALImage\u56fe\u50cf\u6a21\u5757\u7684\u6307\u9488\u3002 Parameters : Handle - \u8ba2\u9605\u51fd\u6570\u8fd4\u56de\u7684\u53e5\u67c4 Returns : \u6307\u5411\u9501\u5b9a\u7684\u56fe\u50cf\u7f13\u51b2\u533a\u7684\u6307\u9488\uff0c\u5982\u679c\u9519\u8bef\u8fd4\u56deNULL(\u4f8b\u5982\uff0c\u5982\u679c\u4ee5\u524d\u7684\u56fe\u50cf\u6ca1\u6709\u88ab\u91ca\u653e)\u3002","title":"ALVideoDevice.getImageLocal(Handle)"},{"location":"vision/#alvideodevicegetimageremotehandle","text":"\u4ece\u89c6\u9891\u6e90\u83b7\u53d6\u6700\u65b0\u7684\u56fe\u50cf\uff0c\u5bf9\u56fe\u50cf\u5e94\u7528\u6700\u7ec8\u7684\u8f6c\u6362\uff0c\u4ee5\u63d0\u4f9bvision\u6a21\u5757\u6240\u8981\u6c42\u7684\u683c\u5f0f\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u503c\u901a\u8fc7\u7f51\u7edc\u53d1\u9001\u3002 Parameters : Handle - \u8ba2\u9605\u51fd\u6570\u8fd4\u56de\u7684\u53e5\u67c4 Returns : \u5305\u542b\u56fe\u50cf\u7684\u7c7b","title":"ALVideoDevice.getImageRemote(Handle)"},{"location":"vision/#alvideodevicereleaseimagehandle","text":"\u91ca\u653e\u88ab ALVideoDevice.getImageLocal() \u9501\u5b9a\u7684\u56fe\u50cf\u7f13\u51b2\u533a\u3002\u5982\u679c\u6a21\u5757\u6ca1\u6709\u9501\u5b9a\u7684\u56fe\u50cf\u7f13\u51b2\u533a\uff0c\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002 Parameters : Handle - \u8ba2\u9605\u51fd\u6570\u8fd4\u56de\u7684\u53e5\u67c4 Returns : \u6210\u529f\u8fd4\u56deTrue","title":"ALVideoDevice.releaseImage(Handle)"},{"location":"vision/#alvideodeviceunsubscribehandle","text":"\u4ece ALVideoDevice \u6ce8\u9500\u4e00\u4e2a\u6a21\u5757 Parameters : Handle - \u8ba2\u9605\u51fd\u6570\u8fd4\u56de\u7684\u53e5\u67c4 Returns : \u6210\u529f\u8fd4\u56deTrue","title":"ALVideoDevice.unsubscribe(Handle)"},{"location":"vision/#_3","text":"Step Action 1 Make your vision module subscribe to the ALVideoDevice proxy by calling ALVideoDeviceProxy::subscribeCamera and passing it parameters such as resolution, color space and frame rate. 2 In the main process loop, get an image by calling ALVideoDeviceProxy::getImageLocal or ALVideoDeviceProxy::getImageRemote (depending on whether your module is local or remote). 3 Release the image calling ALVideoDeviceProxy::releaseImage , 4 When you stop your module, call ALVideoDeviceProxy::unsubscribe after exiting the main loop.","title":"\u7528\u6cd5"},{"location":"vision/#alvideorecorder","text":"ALVideoRecorder \u6a21\u5757\u5141\u8bb8\u60a8\u4f7f\u7528\u673a\u5668\u4eba\u6444\u50cf\u673a\u5f55\u5236\u89c6\u9891\u5e8f\u5217\uff0c\u5e76\u5c06\u5b83\u4eec\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\u3002","title":"ALVideoRecorder\u6a21\u5757"},{"location":"vision/#alvideorecordersetcameraidcameraid","text":"\u8bbe\u7f6e\u7528\u4e8e\u5f55\u5236\u7684\u6444\u50cf\u5934ID Parameters : cameraID \uff1a Id of the camera","title":"ALVideoRecorder.setCameraID(cameraID)"},{"location":"vision/#alvideorecordersetcolorspacecolorspace","text":"\u8bbe\u7f6e\u4f7f\u7528\u7684\u989c\u8272\u7a7a\u95f4 Parameters : colorSpace \uff1a\u5b83\u53ef\u4ee5\u662fkBGRColorSpace(\u989c\u8272)\u6216kYuvColorSpace(\u7070\u5ea6)\u3002","title":"ALVideoRecorder.setColorSpace(colorSpace)"},{"location":"vision/#alvideorecordersetframerateframerate","text":"\u8bbe\u7f6e\u6bcf\u79d2\u5e27\u6570 Parameters : frameRate \uff1a\u5e27\u901f\u7387\u57281\u523030\u4e4b\u95f4(VGA\u5206\u8fa8\u7387\u6700\u5927\u4e3a15\u5e27/\u79d2)\u3002","title":"ALVideoRecorder.setFrameRate(frameRate)"},{"location":"vision/#alvideorecordersetresolutionresolution","text":"\u8bbe\u7f6e\u5206\u8fa8\u7387 Parameters : resolution \uff1a\u5206\u8fa8\u7387\u4e3a \uff1a 0 (QQVGA)\uff0c 1 (QVGA)\u62162 (VGA)","title":"ALVideoRecorder.setResolution(resolution)"},{"location":"vision/#alvideorecordersetvideoformatvideoformat","text":"\u8bbe\u7f6e\u7528\u4e8e\u7f16\u7801\u89c6\u9891\u7684\u65b9\u5f0f\u3002 Parameters : videoFormat \uff1a\u201cIYUV\u201d(\u9662\u58eb avi\uff0c\u4ec5\u9650\u5f69\u8272\u89c6\u9891) \u201cMJPG\u201d(\u538b\u7f29avi\uff0c\u7070\u5ea6\u548c\u5f69\u8272\u89c6\u9891)","title":"ALVideoRecorder.setVideoFormat(videoFormat)"},{"location":"vision/#alvideorecorderstartrecordingfolderpath-filename","text":"\u4ee5\u8f93\u5165\u53c2\u6570\u5f00\u59cb\u5f55\u50cf\uff0c\u76f4\u5230 ALVideoRecorderProxy::stopRecording \u88ab\u8c03\u7528\u3002\u5982\u679c\u76ee\u6807\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\uff0c\u5b83\u5c06\u88ab\u8986\u76d6\uff0c\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u5f55\u5236\u4e00\u4e2a\u89c6\u9891\u3002 Parameters : folderPath \uff1a\u89c6\u9891\u4fdd\u5b58\u7684\u4f4d\u7f6e filename \uff1a \u89c6\u9891\u4fdd\u5b58\u7684\u540d\u79f0","title":"ALVideoRecorder.startRecording(folderPath, fileName)"},{"location":"vision/#alvideorecorderstoprecording","text":"\u505c\u6b62\u7528 ALVideoRecorderProxy::startRecording \u542f\u52a8\u7684\u89c6\u9891\u5f55\u5236\u3002\u8be5\u51fd\u6570\u8fd4\u56de\u6240\u8bb0\u5f55\u7684\u5e27\u6570\u4ee5\u53ca\u89c6\u9891\u7684\u7edd\u5bf9\u8def\u5f84\u3002 Returns : [numRecordedFrames, recordAbsolutePath]","title":"ALVideoRecorder.stopRecording()"},{"location":"vision/#_4","text":"\u5728\u4e00\u4e9b\u521d\u59cb\u5316\u6b65\u9aa4\u4e4b\u540e\uff0c\u6211\u4eec\u9996\u5148\u5b9e\u4f8b\u5316 ALVideoRecorder \u6a21\u5757\u7684\u4ee3\u7406\u3002 # This test demonstrates how to use the ALVideoRecorder module. # Note that you might not have this module depending on your distribution import os import sys import time from naoqi import ALProxy # Replace this with your robot's IP address IP = \"10.0.252.91\" PORT = 9559 # Create a proxy to ALVideoRecorder try: videoRecorderProxy = ALProxy(\"ALVideoRecorder\", IP, PORT) except Exception, e: print \"Error when creating ALVideoRecorder proxy:\" print str(e) exit(1) \u5f00\u59cb\u8bb0\u5f55\u4e00\u4e2a\u89c6\u9891 videoRecorderProxy.setFrameRate(10.0) videoRecorderProxy.setResolution(2) # Set resolution to VGA (640 x 480) # We'll save a 5 second video record in /home/nao/recordings/cameras/ videoRecorderProxy.startRecording(\"/home/nao/recordings/cameras\", \"test\") print \"Video record started.\" time.sleep(5) videoInfo = videoRecorderProxy.stopRecording() print \"Video was saved on the robot: \", videoInfo[1] print \"Total number of frames: \", videoInfo[0]","title":"\u5b9e\u4f8b"},{"location":"vision/#alredballdetection","text":"ALRedBallDetection \u662f\u4e00\u4e2a\u6a21\u5757\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u4e8e\u5feb\u901f\u89c6\u89c9\u7684\u7ea2\u7403\u68c0\u6d4b\u5668\u3002 ALRedBallDetection \u662f\u57fa\u4e8e\u76f8\u673a\u56fe\u50cf\u4e2d\u7ea2\u8272\u50cf\u7d20\u8fdb\u884c\u68c0\u6d4b\uff0c\u6839\u636e\u8fd9\u4e9b\u50cf\u7d20\u4e0eYUV\u8272\u5f69\u7a7a\u95f4\u4e2d\u7684\u7ea2\u8272\u503c\u7684\u8ddd\u79bb\u4f7f\u7528\u4e00\u4e2a\u9608\u503c\u8fdb\u884c\u8fc7\u6ee4\uff0c\u8ba1\u7b97\u8be5\u9608\u503c\u5b9e\u73b0\u4e86\u5728\u5149\u7167\u6761\u4ef6\u53d8\u5316\u65f6\u8fdb\u884c\u68c0\u6d4b\u3002\u7136\u540e\uff0c\u4ece\u6240\u6709\u68c0\u6d4b\u5230\u7684\u7ea2\u8272\u50cf\u7d20\u96c6\u5408\u4e2d\uff0c\u53ea\u4fdd\u7559\u90a3\u4e9b\u5b9a\u4e49\u5706\u5f62\u7684\u50cf\u7d20\u3002\u5f53\u5728\u5f53\u524d\u56fe\u50cf\u4e0a\u627e\u5230\u4e00\u7ec4\u5408\u9002\u50cf\u7d20\u65f6\uff0c ALMemory \u952e redBallDetected \u88ab\u66f4\u65b0\uff0c\u5e76\u8fd4\u56de\u5982\u4e0b\u7684\u5173\u952e\u5b57\uff1a [ TimeStamp, BallInfo, CameraPose_InTorsoFrame, CameraPose_InRobotFrame, Camera_Id ] TimeStamp \uff1a\u8be5\u5b57\u6bb5\u662f\u7528\u4e8e\u6267\u884c\u68c0\u6d4b\u7684\u56fe\u50cf\u7684\u65f6\u95f4\u6233\u3002 TimeStamp [ TimeStamp_Seconds, Timestamp_Microseconds ] BallInfo BallInfo [ centerX, centerY, sizeX, sizeY ] centerX \u548c centerY \u662f\u7403\u4e2d\u5fc3\u7684\u89d2\u5ea6\u5750\u6807\uff0c\u4ee5\u89d2\u5ea6(\u5f27\u5ea6)\u8868\u793a\u3002 sizeX \u548c sizeY \u662f\u7403\u7684\u201c\u6c34\u5e73\u548c\u5782\u76f4\u534a\u5f84\u201d\u7684\u89d2\u5ea6(\u5f27\u5ea6)\u3002 \u5750\u6807\u7cfb\u7684\u539f\u70b9\u5728\u56fe\u50cf\u7684\u4e2d\u95f4 centerX \u5bf9\u5e94\u4e8e\u6cbfZ\u8f74\u7684\u6b63(\u9006\u65f6\u9488)\u65cb\u8f6c\uff0c centerY \u5bf9\u5e94\u4e8e\u6cbfY\u8f74\u7684\u6b63\u65cb\u8f6c\uff0c\u5982\u4e0b\u56fe\u6240\u793a: CameraPose_InTorsoFrame : \u5728\u8eaf\u5e72\u5750\u6807\u7cfb\u4e2d\u63cf\u8ff0\u4e86\u56fe\u50cf\u88ab\u62cd\u6444\u65f6\u76f8\u673a\u7684\u4f4d\u7f6e CameraPose_InRobotFrame : \u5728\u673a\u5668\u4eba\u5750\u6807\u7cfb\u4e2d\u63cf\u8ff0\u4e86\u56fe\u50cf\u88ab\u62cd\u6444\u65f6\u76f8\u673a\u7684\u4f4d\u7f6e Camera_Id : \u7ed9\u51fa\u7528\u4e8e\u68c0\u6d4b\u7684\u6444\u50cf\u673a\u7684Id(0\u4e3a\u9876\u90e8\u6444\u50cf\u673a\uff0c1\u4e3a\u5e95\u90e8\u6444\u50cf\u673a)\u3002","title":"ALRedBallDetection\u6a21\u5757"},{"location":"vision/#alvisionrecognition","text":"ALVisionRecognition \u662f\u4e00\u4e2a\u89c6\u89c9\u6a21\u5757\uff0c\u673a\u5668\u4eba\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6a21\u5757\u4e2d\u5c1d\u8bd5\u8bc6\u522b\u4e0d\u540c\u7684\u56fe\u7247\u3001\u7269\u4f53\u3001\u4fa7\u9762\u751a\u81f3\u662f\u4e4b\u524d\u5b66\u4e60\u8fc7\u7684\u4f4d\u7f6e\u3002\u8be5\u6a21\u5757\u4ee5\u89c6\u89c9\u5173\u952e\u70b9\u7684\u8bc6\u522b\u4e3a\u57fa\u7840\uff0c\u4ec5\u9488\u5bf9\u4e4b\u524d\u5b66\u4e60\u8fc7\u7684\u7279\u5b9a\u5bf9\u8c61\u8fdb\u884c\u8bc6\u522b\u3002","title":"ALVisionRecognition\u6a21\u5757"},{"location":"vision/#_5","text":"\u50cf\u6240\u6709\u5176\u4ed6\u63d0\u53d6\u6a21\u5757\u4e00\u6837\uff0c\u8bc6\u522b\u7ed3\u679c\u88ab\u653e\u5728 ALMemory \u4e2d\u3002\u5f53\u67d0\u4e2a\u4e1c\u897f\u88ab\u8bc6\u522b\u65f6\uff0c\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a ALValue \u5b57\u6bb5\uff0c\u5176\u7ed3\u6784\u5982\u4e0b: \u201c PictureDetected \u201d \u5173\u952e\u5b57\u7ed3\u6784\u5982\u4e0b [ TimeStamp, PictureInfo[N] ] PictureInfo \u6807\u7b7e\u6570\u91cf\u4e0e\u5f53\u524d\u8bc6\u522b\u5230\u7269\u4f53\u7684\u6570\u91cf\u4e00\u6837\u591a\u3002 TimeStamp \u8be5\u5b57\u6bb5\u662f\u7528\u4e8e\u6267\u884c\u68c0\u6d4b\u7684\u56fe\u50cf\u7684\u65f6\u95f4\u6233\u3002 TimeStamp = [ TimeStamp_Seconds, Timestamp_Microseconds ] PictureInfo \u5bf9\u4e8e\u6bcf\u4e2a\u68c0\u6d4b\u5230\u7684\u56fe\u7247\uff0c\u6211\u4eec\u6709\u4e00\u4e2a PictureInfo \u5b57\u6bb5: PictureInfo = [ Label[N], MatchedKeypoints, Ratio, BoundaryPoint[N] ] Label : \u6709\u7ec4\u7ec7\u7684\u56fe\u7247\u540d\u79f0 (e.g. [\u201ccover\u201d, \u201cmy book\u201d], or [\u201cfridge corner\u201d, \u201ckitchen\u201d, \u201cmy flat\u201d]). MatchedKeypoints \u5728\u5f53\u524d\u5e27\u4e2d\u4e3a\u5bf9\u8c61\u68c0\u7d22\u5230\u7684\u5173\u952e\u70b9\u6570\u91cf\u3002 Ratio \u662f\u5f53\u524d\u5e27\u4e2d\u68c0\u7d22\u5230\u7684\u5bf9\u8c61\u7684\u5173\u952e\u70b9\u6570\u9664\u4ee5\u5bf9\u8c61\u5728\u5b66\u4e60\u9636\u6bb5\u4e2d\u627e\u5230\u7684\u5173\u952e\u70b9\u6570\u3002 BoundaryPoint \u662f\u8868\u793a\u5b66\u4e60\u9636\u6bb5\u9009\u62e9\u7684\u8fb9\u754c\u5728\u5f53\u524d\u56fe\u50cf\u4e2d\u91cd\u65b0\u6295\u5f71\u7684\u89d2\u5ea6\u503c(\u5f27\u5ea6)\u4e2d\u7684\u70b9\u5750\u6807\u5217\u8868\u3002 BoundaryPoint = [ x, y ]","title":"\u68c0\u6d4b\u7ed3\u679c"},{"location":"vision/#alvisionrecognitiondetectfromfile-filename","text":"\u5728\u7ed9\u5b9a\u56fe\u50cf\u6587\u4ef6\u4e2d\u641c\u7d22\u5df2\u77e5\u5bf9\u8c61\u3002 Parameters : filename \u2013 \u8981\u641c\u7d22\u7684\u56fe\u50cf\u7684\u7edd\u5bf9\u6587\u4ef6\u540d\u3002","title":"ALVisionRecognition.detectFromFile (filename)"},{"location":"vision/#alvisionrecognitionlearnfromfile-filename-name-tags-iswholeimage-forced","text":"\u4ece\u7ed9\u5b9a\u7684\u6587\u4ef6\u540d\u52a0\u8f7d\u56fe\u50cf\uff0c\u5e76\u5b66\u4e60\u5b83\u4e0e\u7ed9\u5b9a\u7684\u4fe1\u606f\uff0c\u540d\u79f0\uff0c\u6807\u7b7e\uff0c\u8fb9\u754c\u3002 Parameters : image \u2013 \u8981\u641c\u7d22\u7684\u56fe\u50cf\u7684\u7edd\u5bf9\u6587\u4ef6\u540d\u3002 name - \u5bf9\u8c61\u7684\u540d\u79f0\uff0c\u5fc5\u987b\u662f\u975e\u7a7a\u5b57\u7b26\u4e32\u3002 tags - \u4e0e\u5bf9\u8c61\u4e00\u8d77\u5b58\u50a8\u7684\u5bf9\u8c61\u6807\u7b7e\uff0c\u53ef\u4ee5\u4e3a\u7a7a\u3002 isWholeImage - Bool\u53d8\u91cf\uff0c\u9ed8\u8ba4\u4e3aFalse\u3002 True\u8868\u793a\u7269\u4f53\u5360\u636e\u4e86\u6574\u4e2a\u56fe\u50cf\uff0cFalse\u8868\u793a\u81ea\u52a8\u68c0\u6d4b\u7269\u4f53\u7684\u8fb9\u754c\u3002\u4ec5\u5f53\u7269\u4f53\u4ece\u5355\u8272\u80cc\u666f\u4e2d\u7a81\u51fa\u65f6\u4f7f\u7528\u3002 forced - Bool\u53d8\u91cf\uff0c\u9ed8\u8ba4\u4e3aFalse\u3002True\u8868\u793a\u5b66\u4e60\u5bf9\u8c61\u5c06\u66ff\u6362\u53ef\u80fd\u5b58\u5728\u7684\u5bf9\u8c61(\u6761\u4ef6:\u5177\u6709\u76f8\u540c\u7684\u539f\u59cb\u6587\u4ef6\u540d)\u3002False:\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u5df2\u7ecf\u4ee5\u76f8\u540c\u7684\u6587\u4ef6\u540d\u5b58\u5728\uff0c\u5b83\u5c06\u4e0d\u4f1a\u88ab\u66ff\u6362\uff0c\u5e76\u4e14\u65b9\u6cd5\u5c06\u4e2d\u6b62\u3002 Return \uff1a \u6210\u529f\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse","title":"ALVisionRecognition.learnFromFile (filename, name, tags, isWholeImage, forced)"},{"location":"vision/#_6","text":"\u672c\u6559\u7a0b\u4ecb\u7ecd\u4ece Python \u8bbf\u95ee ALVisionRecognition \u6a21\u5757\u7684\u4e24\u79cd\u65b9\u6cd5\uff0c \u8ba2\u9605\u5305\u542b ALVisionRecognition \u7684 AlMemory \u5bc6\u94a5\u3002 import\u4e00\u4e9b\u73af\u5883\u548c\u53d8\u91cf import os import sys import time import naoqi from naoqi import * # A global counter of the number of loops count = 10 PC_IP = \"127.0.0.1\" # Replace this with your computer's IP address NAO_IP = \"nao.local\" # Replace this with your NAOqi's IP address # The name of the event generated by ALVisionRecognition event_name = \"PictureDetected\" \u6211\u4eec\u4f7f\u7528\u56de\u8c03\u65b9\u6cd5\u521b\u5efa python \u6a21\u5757\u5e76\u5b9e\u4f8b\u5316\u5b83 # The name of our local python module module_name = \"python_module\" class myModule(ALModule): \"\"\"python class myModule test auto documentation\"\"\" def dataChanged(self, strVarName, value, strMessage): \"\"\"callback when data change\"\"\" print \"datachanged\", strVarName, \" \", value, \" \", strMessage global count count = count - 1 # Create a local broker, connected to the remote naoqi broker = ALBroker(\"pythonBroker\", PC_IP, 9999, NAO_IP, 9559) # Create a python module pythonModule = myModule(module_name) \u8ba2\u9605\u4e8b\u4ef6\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u8c03\u7528\u6211\u4eec\u7684\u56de\u8c03 try: # Create a proxy to ALMemory memoryProxy = ALProxy(\"ALMemory\", ROBOT_IP, PORT) # Subscribe to the event, saying where we want to be called back memoryProxy.subscribeToEvent(event_name, module_name, \"dataChanged\") # Let the picture recognition run while count > 0: time.sleep(5) # Unsubscribe memoryProxy.unsubscribeToEvent(event_name, module_name) except RuntimeError, e: print e exit(1) print 'end'","title":"\u5b9e\u4f8b"},{"location":"vision/#allocalization","text":"ALLocalization \u662f\u4e00\u4e2a\u6a21\u5757\uff0c\u81f4\u529b\u4e8e\u5728\u5ba4\u5185\u73af\u5883\u4e2d\u5bf9\u673a\u5668\u4eba \u8fdb\u884c \u5b9a\u4f4d\u3002","title":"ALLocalization\u6a21\u5757"},{"location":"vision/#allocalizationlearnhome","text":"\u5b66\u4e60\u673a\u5668\u4eba\u7684\u4e3b\u8282\u70b9 Returns : \u65e0\u9519\u8bef\u8fd4\u56de0\uff0c\u5426\u5219\u8fd4\u56de\u9519\u8bef\u4ee3\u7801","title":"ALLocalization.learnHome()"},{"location":"vision/#allocalizationgetrobotpositionactive","text":"\u5b66\u4e60\u673a\u5668\u4eba\u7684\u4e3b\u8282\u70b9 Parameters : active - \u9ed8\u8ba4\u4e3aFalse\uff0c \u5b9a\u4e49\u91cc\u7a0b\u8ba1\u4e0d\u53ef\u9760\u662f\u7684\u91cd\u5b9a\u4f4d\u8fc7\u7a0b\uff0c\u5982\u679c\u4e3aTrue, \u673a\u5668\u4eba\u4f1a\u91cd\u65b0\u626b\u63cf\u6765\u5b9a\u4f4d\uff0c\u5982\u679c\u4e3a\u5047\uff0c\u673a\u5668\u4eba\u5c06\u4e0d\u4f1a\u79fb\u52a8\u3002 Returns : \u673a\u5668\u4eba2D\u7684\u5750\u6807(x, y)\u3002","title":"ALLocalization.getRobotPosition(active)"},{"location":"vision/#allocalizationgotohome","text":"\u5982\u679c\u9700\u8981,\u5c06\u673a\u5668\u4eba\u79fb\u52a8\u5230\u6267\u884c ALLocalization.learnHome \u7684\u5730\u65b9\u3002\u51c6\u786e\u6027\u53d6\u51b3\u4e8e\u73af\u5883\u3002 Returns : \u5982\u679c\u65e0\u9519\u8bef\u8fd4\u56de0\uff0c \u5426\u5219\u8fd4\u56de\u9519\u8bef\u4ee3\u7801","title":"ALLocalization.goToHome ()"},{"location":"vision/#_7","text":"motionProxy = ALProxy(\"ALMotion\", robotIP, PORT) localizationProxy = ALProxy(\"ALLocalization\", robotIP, PORT) # Learning home. ret = localizationProxy.learnHome() # Check that no problem occurred. if ret == 0: print \"Learning OK\" else: print \"Error during learning \" + str(ret) # Make some moves. motionProxy.moveTo(0.5, 0.0, 0.2) # Go back home. ret = localizationProxy.goToHome() # Check that no problem occurred. if ret == 0: print \"go to home OK\" else: print \"error during go to home \" + str(ret) # Save the data for later use. ret = localizationProxy.save(\"example\") # Check that no problem occurred. if ret == 0: print \"saving OK\" else: print \"error during saving\" + str(ret)","title":"\u5b9e\u4f8b"}]}